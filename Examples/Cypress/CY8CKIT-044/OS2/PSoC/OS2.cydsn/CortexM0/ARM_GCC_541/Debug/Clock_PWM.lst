ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc2qasSL.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"Clock_PWM.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Clock_PWM_StartEx,"ax",%progbits
  20              		.align	2
  21              		.global	Clock_PWM_StartEx
  22              		.code	16
  23              		.thumb_func
  24              		.type	Clock_PWM_StartEx, %function
  25              	Clock_PWM_StartEx:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC4\\Clock_PWM.c"
   1:Generated_Source\PSoC4/Clock_PWM.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/Clock_PWM.c **** * File Name: Clock_PWM.c
   3:Generated_Source\PSoC4/Clock_PWM.c **** * Version 2.20
   4:Generated_Source\PSoC4/Clock_PWM.c **** *
   5:Generated_Source\PSoC4/Clock_PWM.c **** *  Description:
   6:Generated_Source\PSoC4/Clock_PWM.c **** *   Provides system API for the clocking, interrupts and watchdog timer.
   7:Generated_Source\PSoC4/Clock_PWM.c **** *
   8:Generated_Source\PSoC4/Clock_PWM.c **** *  Note:
   9:Generated_Source\PSoC4/Clock_PWM.c **** *   Documentation of the API's in this file is located in the
  10:Generated_Source\PSoC4/Clock_PWM.c **** *   System Reference Guide provided with PSoC Creator.
  11:Generated_Source\PSoC4/Clock_PWM.c **** *
  12:Generated_Source\PSoC4/Clock_PWM.c **** ********************************************************************************
  13:Generated_Source\PSoC4/Clock_PWM.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/Clock_PWM.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/Clock_PWM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/Clock_PWM.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/Clock_PWM.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/Clock_PWM.c **** 
  19:Generated_Source\PSoC4/Clock_PWM.c **** #include <cydevice_trm.h>
  20:Generated_Source\PSoC4/Clock_PWM.c **** #include "Clock_PWM.h"
  21:Generated_Source\PSoC4/Clock_PWM.c **** 
  22:Generated_Source\PSoC4/Clock_PWM.c **** #if defined CYREG_PERI_DIV_CMD
  23:Generated_Source\PSoC4/Clock_PWM.c **** 
  24:Generated_Source\PSoC4/Clock_PWM.c **** /*******************************************************************************
  25:Generated_Source\PSoC4/Clock_PWM.c **** * Function Name: Clock_PWM_StartEx
  26:Generated_Source\PSoC4/Clock_PWM.c **** ********************************************************************************
  27:Generated_Source\PSoC4/Clock_PWM.c **** *
  28:Generated_Source\PSoC4/Clock_PWM.c **** * Summary:
  29:Generated_Source\PSoC4/Clock_PWM.c **** *  Starts the clock, aligned to the specified running clock.
  30:Generated_Source\PSoC4/Clock_PWM.c **** *
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc2qasSL.s 			page 2


  31:Generated_Source\PSoC4/Clock_PWM.c **** * Parameters:
  32:Generated_Source\PSoC4/Clock_PWM.c **** *  alignClkDiv:  The divider to which phase alignment is performed when the
  33:Generated_Source\PSoC4/Clock_PWM.c **** *    clock is started.
  34:Generated_Source\PSoC4/Clock_PWM.c **** *
  35:Generated_Source\PSoC4/Clock_PWM.c **** * Returns:
  36:Generated_Source\PSoC4/Clock_PWM.c **** *  None
  37:Generated_Source\PSoC4/Clock_PWM.c **** *
  38:Generated_Source\PSoC4/Clock_PWM.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/Clock_PWM.c **** void Clock_PWM_StartEx(uint32 alignClkDiv)
  40:Generated_Source\PSoC4/Clock_PWM.c **** {
  28              		.loc 1 40 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 82B0     		sub	sp, sp, #8
  37              		.cfi_def_cfa_offset 16
  38 0004 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  40 0006 7860     		str	r0, [r7, #4]
  41:Generated_Source\PSoC4/Clock_PWM.c ****     /* Make sure any previous start command has finished. */
  42:Generated_Source\PSoC4/Clock_PWM.c ****     while((Clock_PWM_CMD_REG & Clock_PWM_CMD_ENABLE_MASK) != 0u)
  41              		.loc 1 42 0
  42 0008 C046     		nop
  43              	.L2:
  44              		.loc 1 42 0 is_stmt 0 discriminator 1
  45 000a 074B     		ldr	r3, .L3
  46 000c 1B68     		ldr	r3, [r3]
  47 000e 002B     		cmp	r3, #0
  48 0010 FBDB     		blt	.L2
  43:Generated_Source\PSoC4/Clock_PWM.c ****     {
  44:Generated_Source\PSoC4/Clock_PWM.c ****     }
  45:Generated_Source\PSoC4/Clock_PWM.c ****     
  46:Generated_Source\PSoC4/Clock_PWM.c ****     /* Specify the target divider and it's alignment divider, and enable. */
  47:Generated_Source\PSoC4/Clock_PWM.c ****     Clock_PWM_CMD_REG =
  49              		.loc 1 47 0 is_stmt 1
  50 0012 054B     		ldr	r3, .L3
  48:Generated_Source\PSoC4/Clock_PWM.c ****         ((uint32)Clock_PWM__DIV_ID << Clock_PWM_CMD_DIV_SHIFT)|
  49:Generated_Source\PSoC4/Clock_PWM.c ****         (alignClkDiv << Clock_PWM_CMD_PA_DIV_SHIFT) |
  51              		.loc 1 49 0
  52 0014 7A68     		ldr	r2, [r7, #4]
  53 0016 1202     		lsls	r2, r2, #8
  54 0018 0449     		ldr	r1, .L3+4
  55 001a 0A43     		orrs	r2, r1
  47:Generated_Source\PSoC4/Clock_PWM.c ****         ((uint32)Clock_PWM__DIV_ID << Clock_PWM_CMD_DIV_SHIFT)|
  56              		.loc 1 47 0
  57 001c 1A60     		str	r2, [r3]
  50:Generated_Source\PSoC4/Clock_PWM.c ****         (uint32)Clock_PWM_CMD_ENABLE_MASK;
  51:Generated_Source\PSoC4/Clock_PWM.c **** }
  58              		.loc 1 51 0
  59 001e C046     		nop
  60 0020 BD46     		mov	sp, r7
  61 0022 02B0     		add	sp, sp, #8
  62              		@ sp needed
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc2qasSL.s 			page 3


  63 0024 80BD     		pop	{r7, pc}
  64              	.L4:
  65 0026 C046     		.align	2
  66              	.L3:
  67 0028 00000140 		.word	1073807360
  68 002c 40000080 		.word	-2147483584
  69              		.cfi_endproc
  70              	.LFE0:
  71              		.size	Clock_PWM_StartEx, .-Clock_PWM_StartEx
  72              		.section	.text.Clock_PWM_Stop,"ax",%progbits
  73              		.align	2
  74              		.global	Clock_PWM_Stop
  75              		.code	16
  76              		.thumb_func
  77              		.type	Clock_PWM_Stop, %function
  78              	Clock_PWM_Stop:
  79              	.LFB1:
  52:Generated_Source\PSoC4/Clock_PWM.c **** 
  53:Generated_Source\PSoC4/Clock_PWM.c **** #else
  54:Generated_Source\PSoC4/Clock_PWM.c **** 
  55:Generated_Source\PSoC4/Clock_PWM.c **** /*******************************************************************************
  56:Generated_Source\PSoC4/Clock_PWM.c **** * Function Name: Clock_PWM_Start
  57:Generated_Source\PSoC4/Clock_PWM.c **** ********************************************************************************
  58:Generated_Source\PSoC4/Clock_PWM.c **** *
  59:Generated_Source\PSoC4/Clock_PWM.c **** * Summary:
  60:Generated_Source\PSoC4/Clock_PWM.c **** *  Starts the clock.
  61:Generated_Source\PSoC4/Clock_PWM.c **** *
  62:Generated_Source\PSoC4/Clock_PWM.c **** * Parameters:
  63:Generated_Source\PSoC4/Clock_PWM.c **** *  None
  64:Generated_Source\PSoC4/Clock_PWM.c **** *
  65:Generated_Source\PSoC4/Clock_PWM.c **** * Returns:
  66:Generated_Source\PSoC4/Clock_PWM.c **** *  None
  67:Generated_Source\PSoC4/Clock_PWM.c **** *
  68:Generated_Source\PSoC4/Clock_PWM.c **** *******************************************************************************/
  69:Generated_Source\PSoC4/Clock_PWM.c **** 
  70:Generated_Source\PSoC4/Clock_PWM.c **** void Clock_PWM_Start(void)
  71:Generated_Source\PSoC4/Clock_PWM.c **** {
  72:Generated_Source\PSoC4/Clock_PWM.c ****     /* Set the bit to enable the clock. */
  73:Generated_Source\PSoC4/Clock_PWM.c ****     Clock_PWM_ENABLE_REG |= Clock_PWM__ENABLE_MASK;
  74:Generated_Source\PSoC4/Clock_PWM.c **** }
  75:Generated_Source\PSoC4/Clock_PWM.c **** 
  76:Generated_Source\PSoC4/Clock_PWM.c **** #endif /* CYREG_PERI_DIV_CMD */
  77:Generated_Source\PSoC4/Clock_PWM.c **** 
  78:Generated_Source\PSoC4/Clock_PWM.c **** 
  79:Generated_Source\PSoC4/Clock_PWM.c **** /*******************************************************************************
  80:Generated_Source\PSoC4/Clock_PWM.c **** * Function Name: Clock_PWM_Stop
  81:Generated_Source\PSoC4/Clock_PWM.c **** ********************************************************************************
  82:Generated_Source\PSoC4/Clock_PWM.c **** *
  83:Generated_Source\PSoC4/Clock_PWM.c **** * Summary:
  84:Generated_Source\PSoC4/Clock_PWM.c **** *  Stops the clock and returns immediately. This API does not require the
  85:Generated_Source\PSoC4/Clock_PWM.c **** *  source clock to be running but may return before the hardware is actually
  86:Generated_Source\PSoC4/Clock_PWM.c **** *  disabled.
  87:Generated_Source\PSoC4/Clock_PWM.c **** *
  88:Generated_Source\PSoC4/Clock_PWM.c **** * Parameters:
  89:Generated_Source\PSoC4/Clock_PWM.c **** *  None
  90:Generated_Source\PSoC4/Clock_PWM.c **** *
  91:Generated_Source\PSoC4/Clock_PWM.c **** * Returns:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc2qasSL.s 			page 4


  92:Generated_Source\PSoC4/Clock_PWM.c **** *  None
  93:Generated_Source\PSoC4/Clock_PWM.c **** *
  94:Generated_Source\PSoC4/Clock_PWM.c **** *******************************************************************************/
  95:Generated_Source\PSoC4/Clock_PWM.c **** void Clock_PWM_Stop(void)
  96:Generated_Source\PSoC4/Clock_PWM.c **** {
  80              		.loc 1 96 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 1, uses_anonymous_args = 0
  84 0000 80B5     		push	{r7, lr}
  85              		.cfi_def_cfa_offset 8
  86              		.cfi_offset 7, -8
  87              		.cfi_offset 14, -4
  88 0002 00AF     		add	r7, sp, #0
  89              		.cfi_def_cfa_register 7
  97:Generated_Source\PSoC4/Clock_PWM.c **** #if defined CYREG_PERI_DIV_CMD
  98:Generated_Source\PSoC4/Clock_PWM.c **** 
  99:Generated_Source\PSoC4/Clock_PWM.c ****     /* Make sure any previous start command has finished. */
 100:Generated_Source\PSoC4/Clock_PWM.c ****     while((Clock_PWM_CMD_REG & Clock_PWM_CMD_ENABLE_MASK) != 0u)
  90              		.loc 1 100 0
  91 0004 C046     		nop
  92              	.L6:
  93              		.loc 1 100 0 is_stmt 0 discriminator 1
  94 0006 054B     		ldr	r3, .L7
  95 0008 1B68     		ldr	r3, [r3]
  96 000a 002B     		cmp	r3, #0
  97 000c FBDB     		blt	.L6
 101:Generated_Source\PSoC4/Clock_PWM.c ****     {
 102:Generated_Source\PSoC4/Clock_PWM.c ****     }
 103:Generated_Source\PSoC4/Clock_PWM.c ****     
 104:Generated_Source\PSoC4/Clock_PWM.c ****     /* Specify the target divider and it's alignment divider, and disable. */
 105:Generated_Source\PSoC4/Clock_PWM.c ****     Clock_PWM_CMD_REG =
  98              		.loc 1 105 0 is_stmt 1
  99 000e 034B     		ldr	r3, .L7
 100 0010 034A     		ldr	r2, .L7+4
 101 0012 1A60     		str	r2, [r3]
 106:Generated_Source\PSoC4/Clock_PWM.c ****         ((uint32)Clock_PWM__DIV_ID << Clock_PWM_CMD_DIV_SHIFT)|
 107:Generated_Source\PSoC4/Clock_PWM.c ****         ((uint32)Clock_PWM_CMD_DISABLE_MASK);
 108:Generated_Source\PSoC4/Clock_PWM.c **** 
 109:Generated_Source\PSoC4/Clock_PWM.c **** #else
 110:Generated_Source\PSoC4/Clock_PWM.c **** 
 111:Generated_Source\PSoC4/Clock_PWM.c ****     /* Clear the bit to disable the clock. */
 112:Generated_Source\PSoC4/Clock_PWM.c ****     Clock_PWM_ENABLE_REG &= (uint32)(~Clock_PWM__ENABLE_MASK);
 113:Generated_Source\PSoC4/Clock_PWM.c ****     
 114:Generated_Source\PSoC4/Clock_PWM.c **** #endif /* CYREG_PERI_DIV_CMD */
 115:Generated_Source\PSoC4/Clock_PWM.c **** }
 102              		.loc 1 115 0
 103 0014 C046     		nop
 104 0016 BD46     		mov	sp, r7
 105              		@ sp needed
 106 0018 80BD     		pop	{r7, pc}
 107              	.L8:
 108 001a C046     		.align	2
 109              	.L7:
 110 001c 00000140 		.word	1073807360
 111 0020 40000040 		.word	1073741888
 112              		.cfi_endproc
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc2qasSL.s 			page 5


 113              	.LFE1:
 114              		.size	Clock_PWM_Stop, .-Clock_PWM_Stop
 115              		.section	.text.Clock_PWM_SetFractionalDividerRegister,"ax",%progbits
 116              		.align	2
 117              		.global	Clock_PWM_SetFractionalDividerRegister
 118              		.code	16
 119              		.thumb_func
 120              		.type	Clock_PWM_SetFractionalDividerRegister, %function
 121              	Clock_PWM_SetFractionalDividerRegister:
 122              	.LFB2:
 116:Generated_Source\PSoC4/Clock_PWM.c **** 
 117:Generated_Source\PSoC4/Clock_PWM.c **** 
 118:Generated_Source\PSoC4/Clock_PWM.c **** /*******************************************************************************
 119:Generated_Source\PSoC4/Clock_PWM.c **** * Function Name: Clock_PWM_SetFractionalDividerRegister
 120:Generated_Source\PSoC4/Clock_PWM.c **** ********************************************************************************
 121:Generated_Source\PSoC4/Clock_PWM.c **** *
 122:Generated_Source\PSoC4/Clock_PWM.c **** * Summary:
 123:Generated_Source\PSoC4/Clock_PWM.c **** *  Modifies the clock divider and the fractional divider.
 124:Generated_Source\PSoC4/Clock_PWM.c **** *
 125:Generated_Source\PSoC4/Clock_PWM.c **** * Parameters:
 126:Generated_Source\PSoC4/Clock_PWM.c **** *  clkDivider:  Divider register value (0-65535). This value is NOT the
 127:Generated_Source\PSoC4/Clock_PWM.c **** *    divider; the clock hardware divides by clkDivider plus one. For example,
 128:Generated_Source\PSoC4/Clock_PWM.c **** *    to divide the clock by 2, this parameter should be set to 1.
 129:Generated_Source\PSoC4/Clock_PWM.c **** *  fracDivider:  Fractional Divider register value (0-31).
 130:Generated_Source\PSoC4/Clock_PWM.c **** * Returns:
 131:Generated_Source\PSoC4/Clock_PWM.c **** *  None
 132:Generated_Source\PSoC4/Clock_PWM.c **** *
 133:Generated_Source\PSoC4/Clock_PWM.c **** *******************************************************************************/
 134:Generated_Source\PSoC4/Clock_PWM.c **** void Clock_PWM_SetFractionalDividerRegister(uint16 clkDivider, uint8 clkFractional)
 135:Generated_Source\PSoC4/Clock_PWM.c **** {
 123              		.loc 1 135 0
 124              		.cfi_startproc
 125              		@ args = 0, pretend = 0, frame = 16
 126              		@ frame_needed = 1, uses_anonymous_args = 0
 127 0000 80B5     		push	{r7, lr}
 128              		.cfi_def_cfa_offset 8
 129              		.cfi_offset 7, -8
 130              		.cfi_offset 14, -4
 131 0002 84B0     		sub	sp, sp, #16
 132              		.cfi_def_cfa_offset 24
 133 0004 00AF     		add	r7, sp, #0
 134              		.cfi_def_cfa_register 7
 135 0006 0200     		movs	r2, r0
 136 0008 BB1D     		adds	r3, r7, #6
 137 000a 1A80     		strh	r2, [r3]
 138 000c 7B1D     		adds	r3, r7, #5
 139 000e 0A1C     		adds	r2, r1, #0
 140 0010 1A70     		strb	r2, [r3]
 136:Generated_Source\PSoC4/Clock_PWM.c ****     uint32 maskVal;
 137:Generated_Source\PSoC4/Clock_PWM.c ****     uint32 regVal;
 138:Generated_Source\PSoC4/Clock_PWM.c ****     
 139:Generated_Source\PSoC4/Clock_PWM.c **** #if defined (Clock_PWM__FRAC_MASK) || defined (CYREG_PERI_DIV_CMD)
 140:Generated_Source\PSoC4/Clock_PWM.c ****     
 141:Generated_Source\PSoC4/Clock_PWM.c **** 	/* get all but divider bits */
 142:Generated_Source\PSoC4/Clock_PWM.c ****     maskVal = Clock_PWM_DIV_REG & 
 141              		.loc 1 142 0
 142 0012 0C4B     		ldr	r3, .L10
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc2qasSL.s 			page 6


 143 0014 1B68     		ldr	r3, [r3]
 144 0016 0722     		movs	r2, #7
 145 0018 1340     		ands	r3, r2
 146 001a FB60     		str	r3, [r7, #12]
 143:Generated_Source\PSoC4/Clock_PWM.c ****                     (uint32)(~(uint32)(Clock_PWM_DIV_INT_MASK | Clock_PWM_DIV_FRAC_MASK)); 
 144:Generated_Source\PSoC4/Clock_PWM.c **** 	/* combine mask and new divider vals into 32-bit value */
 145:Generated_Source\PSoC4/Clock_PWM.c ****     regVal = maskVal |
 146:Generated_Source\PSoC4/Clock_PWM.c ****         ((uint32)((uint32)clkDivider <<  Clock_PWM_DIV_INT_SHIFT) & Clock_PWM_DIV_INT_MASK) |
 147              		.loc 1 146 0
 148 001c BB1D     		adds	r3, r7, #6
 149 001e 1B88     		ldrh	r3, [r3]
 150 0020 1A02     		lsls	r2, r3, #8
 145:Generated_Source\PSoC4/Clock_PWM.c ****         ((uint32)((uint32)clkDivider <<  Clock_PWM_DIV_INT_SHIFT) & Clock_PWM_DIV_INT_MASK) |
 151              		.loc 1 145 0
 152 0022 FB68     		ldr	r3, [r7, #12]
 153 0024 1A43     		orrs	r2, r3
 147:Generated_Source\PSoC4/Clock_PWM.c ****         ((uint32)((uint32)clkFractional << Clock_PWM_DIV_FRAC_SHIFT) & Clock_PWM_DIV_FRAC_MASK);
 154              		.loc 1 147 0
 155 0026 7B1D     		adds	r3, r7, #5
 156 0028 1B78     		ldrb	r3, [r3]
 157 002a DB00     		lsls	r3, r3, #3
 158 002c FF21     		movs	r1, #255
 159 002e 0B40     		ands	r3, r1
 145:Generated_Source\PSoC4/Clock_PWM.c ****         ((uint32)((uint32)clkDivider <<  Clock_PWM_DIV_INT_SHIFT) & Clock_PWM_DIV_INT_MASK) |
 160              		.loc 1 145 0
 161 0030 1343     		orrs	r3, r2
 162 0032 BB60     		str	r3, [r7, #8]
 148:Generated_Source\PSoC4/Clock_PWM.c ****     
 149:Generated_Source\PSoC4/Clock_PWM.c **** #else
 150:Generated_Source\PSoC4/Clock_PWM.c ****     /* get all but integer divider bits */
 151:Generated_Source\PSoC4/Clock_PWM.c ****     maskVal = Clock_PWM_DIV_REG & (uint32)(~(uint32)Clock_PWM__DIVIDER_MASK);
 152:Generated_Source\PSoC4/Clock_PWM.c ****     /* combine mask and new divider val into 32-bit value */
 153:Generated_Source\PSoC4/Clock_PWM.c ****     regVal = clkDivider | maskVal;
 154:Generated_Source\PSoC4/Clock_PWM.c ****     
 155:Generated_Source\PSoC4/Clock_PWM.c **** #endif /* Clock_PWM__FRAC_MASK || CYREG_PERI_DIV_CMD */
 156:Generated_Source\PSoC4/Clock_PWM.c **** 
 157:Generated_Source\PSoC4/Clock_PWM.c ****     Clock_PWM_DIV_REG = regVal;
 163              		.loc 1 157 0
 164 0034 034B     		ldr	r3, .L10
 165 0036 BA68     		ldr	r2, [r7, #8]
 166 0038 1A60     		str	r2, [r3]
 158:Generated_Source\PSoC4/Clock_PWM.c **** }
 167              		.loc 1 158 0
 168 003a C046     		nop
 169 003c BD46     		mov	sp, r7
 170 003e 04B0     		add	sp, sp, #16
 171              		@ sp needed
 172 0040 80BD     		pop	{r7, pc}
 173              	.L11:
 174 0042 C046     		.align	2
 175              	.L10:
 176 0044 00030140 		.word	1073808128
 177              		.cfi_endproc
 178              	.LFE2:
 179              		.size	Clock_PWM_SetFractionalDividerRegister, .-Clock_PWM_SetFractionalDividerRegister
 180              		.section	.text.Clock_PWM_GetDividerRegister,"ax",%progbits
 181              		.align	2
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc2qasSL.s 			page 7


 182              		.global	Clock_PWM_GetDividerRegister
 183              		.code	16
 184              		.thumb_func
 185              		.type	Clock_PWM_GetDividerRegister, %function
 186              	Clock_PWM_GetDividerRegister:
 187              	.LFB3:
 159:Generated_Source\PSoC4/Clock_PWM.c **** 
 160:Generated_Source\PSoC4/Clock_PWM.c **** 
 161:Generated_Source\PSoC4/Clock_PWM.c **** /*******************************************************************************
 162:Generated_Source\PSoC4/Clock_PWM.c **** * Function Name: Clock_PWM_GetDividerRegister
 163:Generated_Source\PSoC4/Clock_PWM.c **** ********************************************************************************
 164:Generated_Source\PSoC4/Clock_PWM.c **** *
 165:Generated_Source\PSoC4/Clock_PWM.c **** * Summary:
 166:Generated_Source\PSoC4/Clock_PWM.c **** *  Gets the clock divider register value.
 167:Generated_Source\PSoC4/Clock_PWM.c **** *
 168:Generated_Source\PSoC4/Clock_PWM.c **** * Parameters:
 169:Generated_Source\PSoC4/Clock_PWM.c **** *  None
 170:Generated_Source\PSoC4/Clock_PWM.c **** *
 171:Generated_Source\PSoC4/Clock_PWM.c **** * Returns:
 172:Generated_Source\PSoC4/Clock_PWM.c **** *  Divide value of the clock minus 1. For example, if the clock is set to
 173:Generated_Source\PSoC4/Clock_PWM.c **** *  divide by 2, the return value will be 1.
 174:Generated_Source\PSoC4/Clock_PWM.c **** *
 175:Generated_Source\PSoC4/Clock_PWM.c **** *******************************************************************************/
 176:Generated_Source\PSoC4/Clock_PWM.c **** uint16 Clock_PWM_GetDividerRegister(void)
 177:Generated_Source\PSoC4/Clock_PWM.c **** {
 188              		.loc 1 177 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 1, uses_anonymous_args = 0
 192 0000 80B5     		push	{r7, lr}
 193              		.cfi_def_cfa_offset 8
 194              		.cfi_offset 7, -8
 195              		.cfi_offset 14, -4
 196 0002 00AF     		add	r7, sp, #0
 197              		.cfi_def_cfa_register 7
 178:Generated_Source\PSoC4/Clock_PWM.c ****     return (uint16)((Clock_PWM_DIV_REG & Clock_PWM_DIV_INT_MASK)
 198              		.loc 1 178 0
 199 0004 044B     		ldr	r3, .L14
 200 0006 1B68     		ldr	r3, [r3]
 201 0008 FF22     		movs	r2, #255
 202 000a 9343     		bics	r3, r2
 179:Generated_Source\PSoC4/Clock_PWM.c ****         >> Clock_PWM_DIV_INT_SHIFT);
 203              		.loc 1 179 0
 204 000c 1B0A     		lsrs	r3, r3, #8
 178:Generated_Source\PSoC4/Clock_PWM.c ****     return (uint16)((Clock_PWM_DIV_REG & Clock_PWM_DIV_INT_MASK)
 205              		.loc 1 178 0
 206 000e 9BB2     		uxth	r3, r3
 180:Generated_Source\PSoC4/Clock_PWM.c **** }
 207              		.loc 1 180 0
 208 0010 1800     		movs	r0, r3
 209 0012 BD46     		mov	sp, r7
 210              		@ sp needed
 211 0014 80BD     		pop	{r7, pc}
 212              	.L15:
 213 0016 C046     		.align	2
 214              	.L14:
 215 0018 00030140 		.word	1073808128
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc2qasSL.s 			page 8


 216              		.cfi_endproc
 217              	.LFE3:
 218              		.size	Clock_PWM_GetDividerRegister, .-Clock_PWM_GetDividerRegister
 219              		.section	.text.Clock_PWM_GetFractionalDividerRegister,"ax",%progbits
 220              		.align	2
 221              		.global	Clock_PWM_GetFractionalDividerRegister
 222              		.code	16
 223              		.thumb_func
 224              		.type	Clock_PWM_GetFractionalDividerRegister, %function
 225              	Clock_PWM_GetFractionalDividerRegister:
 226              	.LFB4:
 181:Generated_Source\PSoC4/Clock_PWM.c **** 
 182:Generated_Source\PSoC4/Clock_PWM.c **** 
 183:Generated_Source\PSoC4/Clock_PWM.c **** /*******************************************************************************
 184:Generated_Source\PSoC4/Clock_PWM.c **** * Function Name: Clock_PWM_GetFractionalDividerRegister
 185:Generated_Source\PSoC4/Clock_PWM.c **** ********************************************************************************
 186:Generated_Source\PSoC4/Clock_PWM.c **** *
 187:Generated_Source\PSoC4/Clock_PWM.c **** * Summary:
 188:Generated_Source\PSoC4/Clock_PWM.c **** *  Gets the clock fractional divider register value.
 189:Generated_Source\PSoC4/Clock_PWM.c **** *
 190:Generated_Source\PSoC4/Clock_PWM.c **** * Parameters:
 191:Generated_Source\PSoC4/Clock_PWM.c **** *  None
 192:Generated_Source\PSoC4/Clock_PWM.c **** *
 193:Generated_Source\PSoC4/Clock_PWM.c **** * Returns:
 194:Generated_Source\PSoC4/Clock_PWM.c **** *  Fractional Divide value of the clock
 195:Generated_Source\PSoC4/Clock_PWM.c **** *  0 if the fractional divider is not in use.
 196:Generated_Source\PSoC4/Clock_PWM.c **** *
 197:Generated_Source\PSoC4/Clock_PWM.c **** *******************************************************************************/
 198:Generated_Source\PSoC4/Clock_PWM.c **** uint8 Clock_PWM_GetFractionalDividerRegister(void)
 199:Generated_Source\PSoC4/Clock_PWM.c **** {
 227              		.loc 1 199 0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 0
 230              		@ frame_needed = 1, uses_anonymous_args = 0
 231 0000 80B5     		push	{r7, lr}
 232              		.cfi_def_cfa_offset 8
 233              		.cfi_offset 7, -8
 234              		.cfi_offset 14, -4
 235 0002 00AF     		add	r7, sp, #0
 236              		.cfi_def_cfa_register 7
 200:Generated_Source\PSoC4/Clock_PWM.c **** #if defined (Clock_PWM__FRAC_MASK)
 201:Generated_Source\PSoC4/Clock_PWM.c ****     /* return fractional divider bits */
 202:Generated_Source\PSoC4/Clock_PWM.c ****     return (uint8)((Clock_PWM_DIV_REG & Clock_PWM_DIV_FRAC_MASK)
 203:Generated_Source\PSoC4/Clock_PWM.c ****         >> Clock_PWM_DIV_FRAC_SHIFT);
 204:Generated_Source\PSoC4/Clock_PWM.c **** #else
 205:Generated_Source\PSoC4/Clock_PWM.c ****     return 0u;
 237              		.loc 1 205 0
 238 0004 0023     		movs	r3, #0
 206:Generated_Source\PSoC4/Clock_PWM.c **** #endif /* Clock_PWM__FRAC_MASK */
 207:Generated_Source\PSoC4/Clock_PWM.c **** }
 239              		.loc 1 207 0
 240 0006 1800     		movs	r0, r3
 241 0008 BD46     		mov	sp, r7
 242              		@ sp needed
 243 000a 80BD     		pop	{r7, pc}
 244              		.cfi_endproc
 245              	.LFE4:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc2qasSL.s 			page 9


 246              		.size	Clock_PWM_GetFractionalDividerRegister, .-Clock_PWM_GetFractionalDividerRegister
 247              		.text
 248              	.Letext0:
 249              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 250              		.section	.debug_info,"",%progbits
 251              	.Ldebug_info0:
 252 0000 5C010000 		.4byte	0x15c
 253 0004 0400     		.2byte	0x4
 254 0006 00000000 		.4byte	.Ldebug_abbrev0
 255 000a 04       		.byte	0x4
 256 000b 01       		.uleb128 0x1
 257 000c 96000000 		.4byte	.LASF25
 258 0010 0C       		.byte	0xc
 259 0011 60000000 		.4byte	.LASF26
 260 0015 0C020000 		.4byte	.LASF27
 261 0019 00000000 		.4byte	.Ldebug_ranges0+0
 262 001d 00000000 		.4byte	0
 263 0021 00000000 		.4byte	.Ldebug_line0
 264 0025 02       		.uleb128 0x2
 265 0026 01       		.byte	0x1
 266 0027 06       		.byte	0x6
 267 0028 6F020000 		.4byte	.LASF0
 268 002c 02       		.uleb128 0x2
 269 002d 01       		.byte	0x1
 270 002e 08       		.byte	0x8
 271 002f 23000000 		.4byte	.LASF1
 272 0033 02       		.uleb128 0x2
 273 0034 02       		.byte	0x2
 274 0035 05       		.byte	0x5
 275 0036 FC010000 		.4byte	.LASF2
 276 003a 02       		.uleb128 0x2
 277 003b 02       		.byte	0x2
 278 003c 07       		.byte	0x7
 279 003d 83000000 		.4byte	.LASF3
 280 0041 02       		.uleb128 0x2
 281 0042 04       		.byte	0x4
 282 0043 05       		.byte	0x5
 283 0044 66020000 		.4byte	.LASF4
 284 0048 02       		.uleb128 0x2
 285 0049 04       		.byte	0x4
 286 004a 07       		.byte	0x7
 287 004b 4E000000 		.4byte	.LASF5
 288 004f 02       		.uleb128 0x2
 289 0050 08       		.byte	0x8
 290 0051 05       		.byte	0x5
 291 0052 C2010000 		.4byte	.LASF6
 292 0056 02       		.uleb128 0x2
 293 0057 08       		.byte	0x8
 294 0058 07       		.byte	0x7
 295 0059 72010000 		.4byte	.LASF7
 296 005d 03       		.uleb128 0x3
 297 005e 04       		.byte	0x4
 298 005f 05       		.byte	0x5
 299 0060 696E7400 		.ascii	"int\000"
 300 0064 02       		.uleb128 0x2
 301 0065 04       		.byte	0x4
 302 0066 07       		.byte	0x7
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc2qasSL.s 			page 10


 303 0067 65010000 		.4byte	.LASF8
 304 006b 04       		.uleb128 0x4
 305 006c 06020000 		.4byte	.LASF9
 306 0070 02       		.byte	0x2
 307 0071 C2       		.byte	0xc2
 308 0072 2C000000 		.4byte	0x2c
 309 0076 04       		.uleb128 0x4
 310 0077 57010000 		.4byte	.LASF10
 311 007b 02       		.byte	0x2
 312 007c C3       		.byte	0xc3
 313 007d 3A000000 		.4byte	0x3a
 314 0081 04       		.uleb128 0x4
 315 0082 5E010000 		.4byte	.LASF11
 316 0086 02       		.byte	0x2
 317 0087 C4       		.byte	0xc4
 318 0088 48000000 		.4byte	0x48
 319 008c 02       		.uleb128 0x2
 320 008d 04       		.byte	0x4
 321 008e 04       		.byte	0x4
 322 008f 1D000000 		.4byte	.LASF12
 323 0093 02       		.uleb128 0x2
 324 0094 08       		.byte	0x8
 325 0095 04       		.byte	0x4
 326 0096 2F010000 		.4byte	.LASF13
 327 009a 02       		.uleb128 0x2
 328 009b 01       		.byte	0x1
 329 009c 08       		.byte	0x8
 330 009d F7010000 		.4byte	.LASF14
 331 00a1 05       		.uleb128 0x5
 332 00a2 00000000 		.4byte	.LASF15
 333 00a6 02       		.byte	0x2
 334 00a7 6E01     		.2byte	0x16e
 335 00a9 AD000000 		.4byte	0xad
 336 00ad 06       		.uleb128 0x6
 337 00ae 81000000 		.4byte	0x81
 338 00b2 07       		.uleb128 0x7
 339 00b3 89010000 		.4byte	.LASF16
 340 00b7 01       		.byte	0x1
 341 00b8 27       		.byte	0x27
 342 00b9 00000000 		.4byte	.LFB0
 343 00bd 30000000 		.4byte	.LFE0-.LFB0
 344 00c1 01       		.uleb128 0x1
 345 00c2 9C       		.byte	0x9c
 346 00c3 D6000000 		.4byte	0xd6
 347 00c7 08       		.uleb128 0x8
 348 00c8 3D010000 		.4byte	.LASF18
 349 00cc 01       		.byte	0x1
 350 00cd 27       		.byte	0x27
 351 00ce 81000000 		.4byte	0x81
 352 00d2 02       		.uleb128 0x2
 353 00d3 91       		.byte	0x91
 354 00d4 74       		.sleb128 -12
 355 00d5 00       		.byte	0
 356 00d6 09       		.uleb128 0x9
 357 00d7 06000000 		.4byte	.LASF28
 358 00db 01       		.byte	0x1
 359 00dc 5F       		.byte	0x5f
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc2qasSL.s 			page 11


 360 00dd 00000000 		.4byte	.LFB1
 361 00e1 24000000 		.4byte	.LFE1-.LFB1
 362 00e5 01       		.uleb128 0x1
 363 00e6 9C       		.byte	0x9c
 364 00e7 07       		.uleb128 0x7
 365 00e8 D0010000 		.4byte	.LASF17
 366 00ec 01       		.byte	0x1
 367 00ed 86       		.byte	0x86
 368 00ee 00000000 		.4byte	.LFB2
 369 00f2 48000000 		.4byte	.LFE2-.LFB2
 370 00f6 01       		.uleb128 0x1
 371 00f7 9C       		.byte	0x9c
 372 00f8 35010000 		.4byte	0x135
 373 00fc 08       		.uleb128 0x8
 374 00fd 24010000 		.4byte	.LASF19
 375 0101 01       		.byte	0x1
 376 0102 86       		.byte	0x86
 377 0103 76000000 		.4byte	0x76
 378 0107 02       		.uleb128 0x2
 379 0108 91       		.byte	0x91
 380 0109 6E       		.sleb128 -18
 381 010a 08       		.uleb128 0x8
 382 010b 49010000 		.4byte	.LASF20
 383 010f 01       		.byte	0x1
 384 0110 86       		.byte	0x86
 385 0111 6B000000 		.4byte	0x6b
 386 0115 02       		.uleb128 0x2
 387 0116 91       		.byte	0x91
 388 0117 6D       		.sleb128 -19
 389 0118 0A       		.uleb128 0xa
 390 0119 15000000 		.4byte	.LASF21
 391 011d 01       		.byte	0x1
 392 011e 88       		.byte	0x88
 393 011f 81000000 		.4byte	0x81
 394 0123 02       		.uleb128 0x2
 395 0124 91       		.byte	0x91
 396 0125 74       		.sleb128 -12
 397 0126 0A       		.uleb128 0xa
 398 0127 36010000 		.4byte	.LASF22
 399 012b 01       		.byte	0x1
 400 012c 89       		.byte	0x89
 401 012d 81000000 		.4byte	0x81
 402 0131 02       		.uleb128 0x2
 403 0132 91       		.byte	0x91
 404 0133 70       		.sleb128 -16
 405 0134 00       		.byte	0
 406 0135 0B       		.uleb128 0xb
 407 0136 31000000 		.4byte	.LASF23
 408 013a 01       		.byte	0x1
 409 013b B0       		.byte	0xb0
 410 013c 76000000 		.4byte	0x76
 411 0140 00000000 		.4byte	.LFB3
 412 0144 1C000000 		.4byte	.LFE3-.LFB3
 413 0148 01       		.uleb128 0x1
 414 0149 9C       		.byte	0x9c
 415 014a 0B       		.uleb128 0xb
 416 014b 9B010000 		.4byte	.LASF24
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc2qasSL.s 			page 12


 417 014f 01       		.byte	0x1
 418 0150 C6       		.byte	0xc6
 419 0151 6B000000 		.4byte	0x6b
 420 0155 00000000 		.4byte	.LFB4
 421 0159 0C000000 		.4byte	.LFE4-.LFB4
 422 015d 01       		.uleb128 0x1
 423 015e 9C       		.byte	0x9c
 424 015f 00       		.byte	0
 425              		.section	.debug_abbrev,"",%progbits
 426              	.Ldebug_abbrev0:
 427 0000 01       		.uleb128 0x1
 428 0001 11       		.uleb128 0x11
 429 0002 01       		.byte	0x1
 430 0003 25       		.uleb128 0x25
 431 0004 0E       		.uleb128 0xe
 432 0005 13       		.uleb128 0x13
 433 0006 0B       		.uleb128 0xb
 434 0007 03       		.uleb128 0x3
 435 0008 0E       		.uleb128 0xe
 436 0009 1B       		.uleb128 0x1b
 437 000a 0E       		.uleb128 0xe
 438 000b 55       		.uleb128 0x55
 439 000c 17       		.uleb128 0x17
 440 000d 11       		.uleb128 0x11
 441 000e 01       		.uleb128 0x1
 442 000f 10       		.uleb128 0x10
 443 0010 17       		.uleb128 0x17
 444 0011 00       		.byte	0
 445 0012 00       		.byte	0
 446 0013 02       		.uleb128 0x2
 447 0014 24       		.uleb128 0x24
 448 0015 00       		.byte	0
 449 0016 0B       		.uleb128 0xb
 450 0017 0B       		.uleb128 0xb
 451 0018 3E       		.uleb128 0x3e
 452 0019 0B       		.uleb128 0xb
 453 001a 03       		.uleb128 0x3
 454 001b 0E       		.uleb128 0xe
 455 001c 00       		.byte	0
 456 001d 00       		.byte	0
 457 001e 03       		.uleb128 0x3
 458 001f 24       		.uleb128 0x24
 459 0020 00       		.byte	0
 460 0021 0B       		.uleb128 0xb
 461 0022 0B       		.uleb128 0xb
 462 0023 3E       		.uleb128 0x3e
 463 0024 0B       		.uleb128 0xb
 464 0025 03       		.uleb128 0x3
 465 0026 08       		.uleb128 0x8
 466 0027 00       		.byte	0
 467 0028 00       		.byte	0
 468 0029 04       		.uleb128 0x4
 469 002a 16       		.uleb128 0x16
 470 002b 00       		.byte	0
 471 002c 03       		.uleb128 0x3
 472 002d 0E       		.uleb128 0xe
 473 002e 3A       		.uleb128 0x3a
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc2qasSL.s 			page 13


 474 002f 0B       		.uleb128 0xb
 475 0030 3B       		.uleb128 0x3b
 476 0031 0B       		.uleb128 0xb
 477 0032 49       		.uleb128 0x49
 478 0033 13       		.uleb128 0x13
 479 0034 00       		.byte	0
 480 0035 00       		.byte	0
 481 0036 05       		.uleb128 0x5
 482 0037 16       		.uleb128 0x16
 483 0038 00       		.byte	0
 484 0039 03       		.uleb128 0x3
 485 003a 0E       		.uleb128 0xe
 486 003b 3A       		.uleb128 0x3a
 487 003c 0B       		.uleb128 0xb
 488 003d 3B       		.uleb128 0x3b
 489 003e 05       		.uleb128 0x5
 490 003f 49       		.uleb128 0x49
 491 0040 13       		.uleb128 0x13
 492 0041 00       		.byte	0
 493 0042 00       		.byte	0
 494 0043 06       		.uleb128 0x6
 495 0044 35       		.uleb128 0x35
 496 0045 00       		.byte	0
 497 0046 49       		.uleb128 0x49
 498 0047 13       		.uleb128 0x13
 499 0048 00       		.byte	0
 500 0049 00       		.byte	0
 501 004a 07       		.uleb128 0x7
 502 004b 2E       		.uleb128 0x2e
 503 004c 01       		.byte	0x1
 504 004d 3F       		.uleb128 0x3f
 505 004e 19       		.uleb128 0x19
 506 004f 03       		.uleb128 0x3
 507 0050 0E       		.uleb128 0xe
 508 0051 3A       		.uleb128 0x3a
 509 0052 0B       		.uleb128 0xb
 510 0053 3B       		.uleb128 0x3b
 511 0054 0B       		.uleb128 0xb
 512 0055 27       		.uleb128 0x27
 513 0056 19       		.uleb128 0x19
 514 0057 11       		.uleb128 0x11
 515 0058 01       		.uleb128 0x1
 516 0059 12       		.uleb128 0x12
 517 005a 06       		.uleb128 0x6
 518 005b 40       		.uleb128 0x40
 519 005c 18       		.uleb128 0x18
 520 005d 9742     		.uleb128 0x2117
 521 005f 19       		.uleb128 0x19
 522 0060 01       		.uleb128 0x1
 523 0061 13       		.uleb128 0x13
 524 0062 00       		.byte	0
 525 0063 00       		.byte	0
 526 0064 08       		.uleb128 0x8
 527 0065 05       		.uleb128 0x5
 528 0066 00       		.byte	0
 529 0067 03       		.uleb128 0x3
 530 0068 0E       		.uleb128 0xe
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc2qasSL.s 			page 14


 531 0069 3A       		.uleb128 0x3a
 532 006a 0B       		.uleb128 0xb
 533 006b 3B       		.uleb128 0x3b
 534 006c 0B       		.uleb128 0xb
 535 006d 49       		.uleb128 0x49
 536 006e 13       		.uleb128 0x13
 537 006f 02       		.uleb128 0x2
 538 0070 18       		.uleb128 0x18
 539 0071 00       		.byte	0
 540 0072 00       		.byte	0
 541 0073 09       		.uleb128 0x9
 542 0074 2E       		.uleb128 0x2e
 543 0075 00       		.byte	0
 544 0076 3F       		.uleb128 0x3f
 545 0077 19       		.uleb128 0x19
 546 0078 03       		.uleb128 0x3
 547 0079 0E       		.uleb128 0xe
 548 007a 3A       		.uleb128 0x3a
 549 007b 0B       		.uleb128 0xb
 550 007c 3B       		.uleb128 0x3b
 551 007d 0B       		.uleb128 0xb
 552 007e 27       		.uleb128 0x27
 553 007f 19       		.uleb128 0x19
 554 0080 11       		.uleb128 0x11
 555 0081 01       		.uleb128 0x1
 556 0082 12       		.uleb128 0x12
 557 0083 06       		.uleb128 0x6
 558 0084 40       		.uleb128 0x40
 559 0085 18       		.uleb128 0x18
 560 0086 9742     		.uleb128 0x2117
 561 0088 19       		.uleb128 0x19
 562 0089 00       		.byte	0
 563 008a 00       		.byte	0
 564 008b 0A       		.uleb128 0xa
 565 008c 34       		.uleb128 0x34
 566 008d 00       		.byte	0
 567 008e 03       		.uleb128 0x3
 568 008f 0E       		.uleb128 0xe
 569 0090 3A       		.uleb128 0x3a
 570 0091 0B       		.uleb128 0xb
 571 0092 3B       		.uleb128 0x3b
 572 0093 0B       		.uleb128 0xb
 573 0094 49       		.uleb128 0x49
 574 0095 13       		.uleb128 0x13
 575 0096 02       		.uleb128 0x2
 576 0097 18       		.uleb128 0x18
 577 0098 00       		.byte	0
 578 0099 00       		.byte	0
 579 009a 0B       		.uleb128 0xb
 580 009b 2E       		.uleb128 0x2e
 581 009c 00       		.byte	0
 582 009d 3F       		.uleb128 0x3f
 583 009e 19       		.uleb128 0x19
 584 009f 03       		.uleb128 0x3
 585 00a0 0E       		.uleb128 0xe
 586 00a1 3A       		.uleb128 0x3a
 587 00a2 0B       		.uleb128 0xb
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc2qasSL.s 			page 15


 588 00a3 3B       		.uleb128 0x3b
 589 00a4 0B       		.uleb128 0xb
 590 00a5 27       		.uleb128 0x27
 591 00a6 19       		.uleb128 0x19
 592 00a7 49       		.uleb128 0x49
 593 00a8 13       		.uleb128 0x13
 594 00a9 11       		.uleb128 0x11
 595 00aa 01       		.uleb128 0x1
 596 00ab 12       		.uleb128 0x12
 597 00ac 06       		.uleb128 0x6
 598 00ad 40       		.uleb128 0x40
 599 00ae 18       		.uleb128 0x18
 600 00af 9742     		.uleb128 0x2117
 601 00b1 19       		.uleb128 0x19
 602 00b2 00       		.byte	0
 603 00b3 00       		.byte	0
 604 00b4 00       		.byte	0
 605              		.section	.debug_aranges,"",%progbits
 606 0000 3C000000 		.4byte	0x3c
 607 0004 0200     		.2byte	0x2
 608 0006 00000000 		.4byte	.Ldebug_info0
 609 000a 04       		.byte	0x4
 610 000b 00       		.byte	0
 611 000c 0000     		.2byte	0
 612 000e 0000     		.2byte	0
 613 0010 00000000 		.4byte	.LFB0
 614 0014 30000000 		.4byte	.LFE0-.LFB0
 615 0018 00000000 		.4byte	.LFB1
 616 001c 24000000 		.4byte	.LFE1-.LFB1
 617 0020 00000000 		.4byte	.LFB2
 618 0024 48000000 		.4byte	.LFE2-.LFB2
 619 0028 00000000 		.4byte	.LFB3
 620 002c 1C000000 		.4byte	.LFE3-.LFB3
 621 0030 00000000 		.4byte	.LFB4
 622 0034 0C000000 		.4byte	.LFE4-.LFB4
 623 0038 00000000 		.4byte	0
 624 003c 00000000 		.4byte	0
 625              		.section	.debug_ranges,"",%progbits
 626              	.Ldebug_ranges0:
 627 0000 00000000 		.4byte	.LFB0
 628 0004 30000000 		.4byte	.LFE0
 629 0008 00000000 		.4byte	.LFB1
 630 000c 24000000 		.4byte	.LFE1
 631 0010 00000000 		.4byte	.LFB2
 632 0014 48000000 		.4byte	.LFE2
 633 0018 00000000 		.4byte	.LFB3
 634 001c 1C000000 		.4byte	.LFE3
 635 0020 00000000 		.4byte	.LFB4
 636 0024 0C000000 		.4byte	.LFE4
 637 0028 00000000 		.4byte	0
 638 002c 00000000 		.4byte	0
 639              		.section	.debug_line,"",%progbits
 640              	.Ldebug_line0:
 641 0000 C2000000 		.section	.debug_str,"MS",%progbits,1
 641      02004600 
 641      00000201 
 641      FB0E0D00 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc2qasSL.s 			page 16


 641      01010101 
 642              	.LASF15:
 643 0000 72656733 		.ascii	"reg32\000"
 643      3200
 644              	.LASF28:
 645 0006 436C6F63 		.ascii	"Clock_PWM_Stop\000"
 645      6B5F5057 
 645      4D5F5374 
 645      6F7000
 646              	.LASF21:
 647 0015 6D61736B 		.ascii	"maskVal\000"
 647      56616C00 
 648              	.LASF12:
 649 001d 666C6F61 		.ascii	"float\000"
 649      7400
 650              	.LASF1:
 651 0023 756E7369 		.ascii	"unsigned char\000"
 651      676E6564 
 651      20636861 
 651      7200
 652              	.LASF23:
 653 0031 436C6F63 		.ascii	"Clock_PWM_GetDividerRegister\000"
 653      6B5F5057 
 653      4D5F4765 
 653      74446976 
 653      69646572 
 654              	.LASF5:
 655 004e 6C6F6E67 		.ascii	"long unsigned int\000"
 655      20756E73 
 655      69676E65 
 655      6420696E 
 655      7400
 656              	.LASF26:
 657 0060 47656E65 		.ascii	"Generated_Source\\PSoC4\\Clock_PWM.c\000"
 657      72617465 
 657      645F536F 
 657      75726365 
 657      5C50536F 
 658              	.LASF3:
 659 0083 73686F72 		.ascii	"short unsigned int\000"
 659      7420756E 
 659      7369676E 
 659      65642069 
 659      6E7400
 660              	.LASF25:
 661 0096 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 661      43313120 
 661      352E342E 
 661      31203230 
 661      31363036 
 662 00c9 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 662      20726576 
 662      6973696F 
 662      6E203233 
 662      37373135 
 663 00fc 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 663      66756E63 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc2qasSL.s 			page 17


 663      74696F6E 
 663      2D736563 
 663      74696F6E 
 664              	.LASF19:
 665 0124 636C6B44 		.ascii	"clkDivider\000"
 665      69766964 
 665      657200
 666              	.LASF13:
 667 012f 646F7562 		.ascii	"double\000"
 667      6C6500
 668              	.LASF22:
 669 0136 72656756 		.ascii	"regVal\000"
 669      616C00
 670              	.LASF18:
 671 013d 616C6967 		.ascii	"alignClkDiv\000"
 671      6E436C6B 
 671      44697600 
 672              	.LASF20:
 673 0149 636C6B46 		.ascii	"clkFractional\000"
 673      72616374 
 673      696F6E61 
 673      6C00
 674              	.LASF10:
 675 0157 75696E74 		.ascii	"uint16\000"
 675      313600
 676              	.LASF11:
 677 015e 75696E74 		.ascii	"uint32\000"
 677      333200
 678              	.LASF8:
 679 0165 756E7369 		.ascii	"unsigned int\000"
 679      676E6564 
 679      20696E74 
 679      00
 680              	.LASF7:
 681 0172 6C6F6E67 		.ascii	"long long unsigned int\000"
 681      206C6F6E 
 681      6720756E 
 681      7369676E 
 681      65642069 
 682              	.LASF16:
 683 0189 436C6F63 		.ascii	"Clock_PWM_StartEx\000"
 683      6B5F5057 
 683      4D5F5374 
 683      61727445 
 683      7800
 684              	.LASF24:
 685 019b 436C6F63 		.ascii	"Clock_PWM_GetFractionalDividerRegister\000"
 685      6B5F5057 
 685      4D5F4765 
 685      74467261 
 685      6374696F 
 686              	.LASF6:
 687 01c2 6C6F6E67 		.ascii	"long long int\000"
 687      206C6F6E 
 687      6720696E 
 687      7400
 688              	.LASF17:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cc2qasSL.s 			page 18


 689 01d0 436C6F63 		.ascii	"Clock_PWM_SetFractionalDividerRegister\000"
 689      6B5F5057 
 689      4D5F5365 
 689      74467261 
 689      6374696F 
 690              	.LASF14:
 691 01f7 63686172 		.ascii	"char\000"
 691      00
 692              	.LASF2:
 693 01fc 73686F72 		.ascii	"short int\000"
 693      7420696E 
 693      7400
 694              	.LASF9:
 695 0206 75696E74 		.ascii	"uint8\000"
 695      3800
 696              	.LASF27:
 697 020c 443A5C43 		.ascii	"D:\\CYTEST\\Micrium_CY8CKIT-044_OS2\\Micrium\\Examp"
 697      59544553 
 697      545C4D69 
 697      63726975 
 697      6D5F4359 
 698 023b 6C65735C 		.ascii	"les\\Cypress\\CY8CKIT-044\\OS2\\PSoC\\OS2.cydsn\000"
 698      43797072 
 698      6573735C 
 698      43593843 
 698      4B49542D 
 699              	.LASF4:
 700 0266 6C6F6E67 		.ascii	"long int\000"
 700      20696E74 
 700      00
 701              	.LASF0:
 702 026f 7369676E 		.ascii	"signed char\000"
 702      65642063 
 702      68617200 
 703              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
