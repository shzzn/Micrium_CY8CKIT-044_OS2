ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"os_flag.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.OSFlagAccept,"ax",%progbits
  20              		.align	2
  21              		.global	OSFlagAccept
  22              		.code	16
  23              		.thumb_func
  24              		.type	OSFlagAccept, %function
  25              	OSFlagAccept:
  26              	.LFB1:
  27              		.file 1 "..\\..\\..\\..\\..\\..\\Software\\uCOS-II\\Source\\os_flag.c"
   1:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** /*
   2:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** ***************************************************************************************************
   3:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                                                uC/OS-II
   4:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                                          The Real-Time Kernel
   5:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                                         EVENT FLAG  MANAGEMENT
   6:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
   7:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                              (c) Copyright 1992-2013, Micrium, Weston, FL
   8:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                                           All Rights Reserved
   9:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
  10:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * File    : OS_FLAG.C
  11:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * By      : Jean J. Labrosse
  12:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * Version : V2.92.11
  13:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
  14:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * LICENSING TERMS:
  15:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * ---------------
  16:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *   uC/OS-II is provided in source form for FREE evaluation, for educational use or for peaceful re
  17:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * If you plan on using  uC/OS-II  in a commercial product you need to contact Micrium to properly l
  18:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * its use in your product. We provide ALL the source code for your convenience and to help you expe
  19:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * uC/OS-II.   The fact that the  source is provided does  NOT  mean that you can use it without  pa
  20:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * licensing fee.
  21:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** ***************************************************************************************************
  22:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** */
  23:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
  24:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #define  MICRIUM_SOURCE
  25:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
  26:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #ifndef  OS_MASTER_FILE
  27:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #include <ucos_ii.h>
  28:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #endif
  29:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
  30:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #if (OS_FLAG_EN > 0u) && (OS_MAX_FLAGS > 0u)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 2


  31:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** /*
  32:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** ***************************************************************************************************
  33:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                                          LOCAL PROTOTYPES
  34:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** ***************************************************************************************************
  35:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** */
  36:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
  37:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** static  void     OS_FlagBlock(OS_FLAG_GRP *pgrp, OS_FLAG_NODE *pnode, OS_FLAGS flags, INT8U wait_ty
  38:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** static  BOOLEAN  OS_FlagTaskRdy(OS_FLAG_NODE *pnode, OS_FLAGS flags_rdy, INT8U pend_stat);
  39:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
  40:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** /*$PAGE*/
  41:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** /*
  42:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** ***************************************************************************************************
  43:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                          CHECK THE STATUS OF FLAGS IN AN EVENT FLAG GROUP
  44:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
  45:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * Description: This function is called to check the status of a combination of bits to be set or cl
  46:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *              in an event flag group.  Your application can check for ANY bit to be set/cleared or
  47:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *              bits to be set/cleared.
  48:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
  49:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *              This call does not block if the desired flags are not present.
  50:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
  51:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * Arguments  : pgrp          is a pointer to the desired event flag group.
  52:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
  53:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *              flags         Is a bit pattern indicating which bit(s) (i.e. flags) you wish to chec
  54:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            The bits you want are specified by setting the corresponding bits in
  55:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            'flags'.  e.g. if your application wants to wait for bits 0 and 1 then
  56:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            'flags' would contain 0x03.
  57:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
  58:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *              wait_type     specifies whether you want ALL bits to be set/cleared or ANY of the bi
  59:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            to be set/cleared.
  60:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            You can specify the following argument:
  61:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
  62:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            OS_FLAG_WAIT_CLR_ALL   You will check ALL bits in 'flags' to be clear 
  63:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            OS_FLAG_WAIT_CLR_ANY   You will check ANY bit  in 'flags' to be clear 
  64:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            OS_FLAG_WAIT_SET_ALL   You will check ALL bits in 'flags' to be set   
  65:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            OS_FLAG_WAIT_SET_ANY   You will check ANY bit  in 'flags' to be set   
  66:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
  67:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            NOTE: Add OS_FLAG_CONSUME if you want the event flag to be 'consumed' 
  68:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                                  the call.  Example, to wait for any flag in a group AND then cle
  69:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                                  the flags that are present, set 'wait_type' to:
  70:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
  71:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                                  OS_FLAG_WAIT_SET_ANY + OS_FLAG_CONSUME
  72:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
  73:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *              perr          is a pointer to an error code and can be:
  74:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            OS_ERR_NONE               No error
  75:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            OS_ERR_EVENT_TYPE         You are not pointing to an event flag group
  76:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            OS_ERR_FLAG_WAIT_TYPE     You didn't specify a proper 'wait_type' argu
  77:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            OS_ERR_FLAG_INVALID_PGRP  You passed a NULL pointer instead of the eve
  78:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                                                      group handle.
  79:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            OS_ERR_FLAG_NOT_RDY       The desired flags you are waiting for are no
  80:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                                                      available.
  81:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
  82:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * Returns    : The flags in the event flag group that made the task ready or, 0 if a timeout or an 
  83:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *              occurred.
  84:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
  85:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * Called from: Task or ISR
  86:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
  87:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * Note(s)    : 1) IMPORTANT, the behavior of this function has changed from PREVIOUS versions.  The
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 3


  88:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                 function NOW returns the flags that were ready INSTEAD of the current state of th
  89:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                 event flags.
  90:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** ***************************************************************************************************
  91:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** */
  92:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
  93:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #if OS_FLAG_ACCEPT_EN > 0u
  94:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** OS_FLAGS  OSFlagAccept (OS_FLAG_GRP  *pgrp,
  95:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                         OS_FLAGS      flags,
  96:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                         INT8U         wait_type,
  97:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                         INT8U        *perr)
  98:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** {
  28              		.loc 1 98 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 88B0     		sub	sp, sp, #32
  37              		.cfi_def_cfa_offset 40
  38 0004 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  40 0006 F860     		str	r0, [r7, #12]
  41 0008 0800     		movs	r0, r1
  42 000a 1100     		movs	r1, r2
  43 000c 7B60     		str	r3, [r7, #4]
  44 000e 0A23     		movs	r3, #10
  45 0010 FB18     		adds	r3, r7, r3
  46 0012 021C     		adds	r2, r0, #0
  47 0014 1A80     		strh	r2, [r3]
  48 0016 0923     		movs	r3, #9
  49 0018 FB18     		adds	r3, r7, r3
  50 001a 0A1C     		adds	r2, r1, #0
  51 001c 1A70     		strb	r2, [r3]
  99:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     OS_FLAGS      flags_rdy;
 100:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     INT8U         result;
 101:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     BOOLEAN       consume;
 102:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #if OS_CRITICAL_METHOD == 3u                               /* Allocate storage for CPU status regis
 103:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     OS_CPU_SR     cpu_sr = 0u;
  52              		.loc 1 103 0
  53 001e 0023     		movs	r3, #0
  54 0020 BB61     		str	r3, [r7, #24]
 104:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #endif
 105:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 106:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 107:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 108:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #ifdef OS_SAFETY_CRITICAL
 109:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     if (perr == (INT8U *)0) {
 110:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
 111:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         return ((OS_FLAGS)0);
 112:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     }
 113:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #endif
 114:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 115:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #if OS_ARG_CHK_EN > 0u
 116:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     if (pgrp == (OS_FLAG_GRP *)0) {                        /* Validate 'pgrp'                      
  55              		.loc 1 116 0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 4


  56 0022 FB68     		ldr	r3, [r7, #12]
  57 0024 002B     		cmp	r3, #0
  58 0026 04D1     		bne	.L2
 117:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         *perr = OS_ERR_FLAG_INVALID_PGRP;
  59              		.loc 1 117 0
  60 0028 7B68     		ldr	r3, [r7, #4]
  61 002a 6E22     		movs	r2, #110
  62 002c 1A70     		strb	r2, [r3]
 118:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         return ((OS_FLAGS)0);
  63              		.loc 1 118 0
  64 002e 0023     		movs	r3, #0
  65 0030 EDE0     		b	.L3
  66              	.L2:
 119:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     }
 120:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #endif
 121:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     if (pgrp->OSFlagType != OS_EVENT_TYPE_FLAG) {          /* Validate event block type            
  67              		.loc 1 121 0
  68 0032 FB68     		ldr	r3, [r7, #12]
  69 0034 1B78     		ldrb	r3, [r3]
  70 0036 052B     		cmp	r3, #5
  71 0038 04D0     		beq	.L4
 122:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         *perr = OS_ERR_EVENT_TYPE;
  72              		.loc 1 122 0
  73 003a 7B68     		ldr	r3, [r7, #4]
  74 003c 0122     		movs	r2, #1
  75 003e 1A70     		strb	r2, [r3]
 123:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         return ((OS_FLAGS)0);
  76              		.loc 1 123 0
  77 0040 0023     		movs	r3, #0
  78 0042 E4E0     		b	.L3
  79              	.L4:
 124:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     }
 125:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     result = (INT8U)(wait_type & OS_FLAG_CONSUME);
  80              		.loc 1 125 0
  81 0044 1723     		movs	r3, #23
  82 0046 FB18     		adds	r3, r7, r3
  83 0048 0922     		movs	r2, #9
  84 004a BA18     		adds	r2, r7, r2
  85 004c 1278     		ldrb	r2, [r2]
  86 004e 7F21     		movs	r1, #127
  87 0050 8A43     		bics	r2, r1
  88 0052 1A70     		strb	r2, [r3]
 126:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     if (result != (INT8U)0) {                              /* See if we need to consume the flags  
  89              		.loc 1 126 0
  90 0054 1723     		movs	r3, #23
  91 0056 FB18     		adds	r3, r7, r3
  92 0058 1B78     		ldrb	r3, [r3]
  93 005a 002B     		cmp	r3, #0
  94 005c 0CD0     		beq	.L5
 127:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         wait_type &= ~OS_FLAG_CONSUME;
  95              		.loc 1 127 0
  96 005e 0923     		movs	r3, #9
  97 0060 FB18     		adds	r3, r7, r3
  98 0062 0922     		movs	r2, #9
  99 0064 BA18     		adds	r2, r7, r2
 100 0066 1278     		ldrb	r2, [r2]
 101 0068 7F21     		movs	r1, #127
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 5


 102 006a 0A40     		ands	r2, r1
 103 006c 1A70     		strb	r2, [r3]
 128:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         consume    = OS_TRUE;
 104              		.loc 1 128 0
 105 006e 1D23     		movs	r3, #29
 106 0070 FB18     		adds	r3, r7, r3
 107 0072 0122     		movs	r2, #1
 108 0074 1A70     		strb	r2, [r3]
 109 0076 03E0     		b	.L6
 110              	.L5:
 129:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     } else {
 130:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         consume    = OS_FALSE;
 111              		.loc 1 130 0
 112 0078 1D23     		movs	r3, #29
 113 007a FB18     		adds	r3, r7, r3
 114 007c 0022     		movs	r2, #0
 115 007e 1A70     		strb	r2, [r3]
 116              	.L6:
 131:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     }
 132:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** /*$PAGE*/
 133:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     *perr = OS_ERR_NONE;                                   /* Assume NO error until proven otherwis
 117              		.loc 1 133 0
 118 0080 7B68     		ldr	r3, [r7, #4]
 119 0082 0022     		movs	r2, #0
 120 0084 1A70     		strb	r2, [r3]
 134:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     OS_ENTER_CRITICAL();
 121              		.loc 1 134 0
 122 0086 FFF7FEFF 		bl	OS_CPU_SR_Save
 123 008a 0300     		movs	r3, r0
 124 008c BB61     		str	r3, [r7, #24]
 135:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     switch (wait_type) {
 125              		.loc 1 135 0
 126 008e 0923     		movs	r3, #9
 127 0090 FB18     		adds	r3, r7, r3
 128 0092 1B78     		ldrb	r3, [r3]
 129 0094 012B     		cmp	r3, #1
 130 0096 00D1     		bne	.LCB94
 131 0098 83E0     		b	.L8	@long jump
 132              	.LCB94:
 133 009a 02DC     		bgt	.L9
 134 009c 002B     		cmp	r3, #0
 135 009e 56D0     		beq	.L10
 136 00a0 A6E0     		b	.L7
 137              	.L9:
 138 00a2 022B     		cmp	r3, #2
 139 00a4 02D0     		beq	.L11
 140 00a6 032B     		cmp	r3, #3
 141 00a8 2AD0     		beq	.L12
 142 00aa A1E0     		b	.L7
 143              	.L11:
 136:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         case OS_FLAG_WAIT_SET_ALL:                         /* See if all required flags are set    
 137:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              flags_rdy = (OS_FLAGS)(pgrp->OSFlagFlags & flags);     /* Extract only the bits we wan
 144              		.loc 1 137 0
 145 00ac FB68     		ldr	r3, [r7, #12]
 146 00ae 1A89     		ldrh	r2, [r3, #8]
 147 00b0 1E23     		movs	r3, #30
 148 00b2 FB18     		adds	r3, r7, r3
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 6


 149 00b4 0A21     		movs	r1, #10
 150 00b6 7918     		adds	r1, r7, r1
 151 00b8 0988     		ldrh	r1, [r1]
 152 00ba 0A40     		ands	r2, r1
 153 00bc 1A80     		strh	r2, [r3]
 138:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              if (flags_rdy == flags) {                     /* Must match ALL the bits that we want 
 154              		.loc 1 138 0
 155 00be 1E23     		movs	r3, #30
 156 00c0 FA18     		adds	r2, r7, r3
 157 00c2 0A23     		movs	r3, #10
 158 00c4 FB18     		adds	r3, r7, r3
 159 00c6 1288     		ldrh	r2, [r2]
 160 00c8 1B88     		ldrh	r3, [r3]
 161 00ca 9A42     		cmp	r2, r3
 162 00cc 10D1     		bne	.L13
 139:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  if (consume == OS_TRUE) {                 /* See if we need to consume the flags  
 163              		.loc 1 139 0
 164 00ce 1D23     		movs	r3, #29
 165 00d0 FB18     		adds	r3, r7, r3
 166 00d2 1B78     		ldrb	r3, [r3]
 167 00d4 012B     		cmp	r3, #1
 168 00d6 0ED1     		bne	.L15
 140:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                      pgrp->OSFlagFlags &= (OS_FLAGS)~flags_rdy;     /* Clear ONLY the flags we want
 169              		.loc 1 140 0
 170 00d8 FB68     		ldr	r3, [r7, #12]
 171 00da 1B89     		ldrh	r3, [r3, #8]
 172 00dc 1E22     		movs	r2, #30
 173 00de BA18     		adds	r2, r7, r2
 174 00e0 1288     		ldrh	r2, [r2]
 175 00e2 D243     		mvns	r2, r2
 176 00e4 92B2     		uxth	r2, r2
 177 00e6 1340     		ands	r3, r2
 178 00e8 9AB2     		uxth	r2, r3
 179 00ea FB68     		ldr	r3, [r7, #12]
 180 00ec 1A81     		strh	r2, [r3, #8]
 181 00ee 02E0     		b	.L15
 182              	.L13:
 141:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  }
 142:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              } else {
 143:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  *perr = OS_ERR_FLAG_NOT_RDY;
 183              		.loc 1 143 0
 184 00f0 7B68     		ldr	r3, [r7, #4]
 185 00f2 7022     		movs	r2, #112
 186 00f4 1A70     		strb	r2, [r3]
 187              	.L15:
 144:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              }
 145:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              OS_EXIT_CRITICAL();
 188              		.loc 1 145 0
 189 00f6 BB69     		ldr	r3, [r7, #24]
 190 00f8 1800     		movs	r0, r3
 191 00fa FFF7FEFF 		bl	OS_CPU_SR_Restore
 146:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              break;
 192              		.loc 1 146 0
 193 00fe 83E0     		b	.L16
 194              	.L12:
 147:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 148:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         case OS_FLAG_WAIT_SET_ANY:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 7


 149:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              flags_rdy = (OS_FLAGS)(pgrp->OSFlagFlags & flags);     /* Extract only the bits we wan
 195              		.loc 1 149 0
 196 0100 FB68     		ldr	r3, [r7, #12]
 197 0102 1A89     		ldrh	r2, [r3, #8]
 198 0104 1E23     		movs	r3, #30
 199 0106 FB18     		adds	r3, r7, r3
 200 0108 0A21     		movs	r1, #10
 201 010a 7918     		adds	r1, r7, r1
 202 010c 0988     		ldrh	r1, [r1]
 203 010e 0A40     		ands	r2, r1
 204 0110 1A80     		strh	r2, [r3]
 150:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              if (flags_rdy != (OS_FLAGS)0) {               /* See if any flag set                  
 205              		.loc 1 150 0
 206 0112 1E23     		movs	r3, #30
 207 0114 FB18     		adds	r3, r7, r3
 208 0116 1B88     		ldrh	r3, [r3]
 209 0118 002B     		cmp	r3, #0
 210 011a 10D0     		beq	.L17
 151:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  if (consume == OS_TRUE) {                 /* See if we need to consume the flags  
 211              		.loc 1 151 0
 212 011c 1D23     		movs	r3, #29
 213 011e FB18     		adds	r3, r7, r3
 214 0120 1B78     		ldrb	r3, [r3]
 215 0122 012B     		cmp	r3, #1
 216 0124 0ED1     		bne	.L19
 152:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                      pgrp->OSFlagFlags &= (OS_FLAGS)~flags_rdy;     /* Clear ONLY the flags we got 
 217              		.loc 1 152 0
 218 0126 FB68     		ldr	r3, [r7, #12]
 219 0128 1B89     		ldrh	r3, [r3, #8]
 220 012a 1E22     		movs	r2, #30
 221 012c BA18     		adds	r2, r7, r2
 222 012e 1288     		ldrh	r2, [r2]
 223 0130 D243     		mvns	r2, r2
 224 0132 92B2     		uxth	r2, r2
 225 0134 1340     		ands	r3, r2
 226 0136 9AB2     		uxth	r2, r3
 227 0138 FB68     		ldr	r3, [r7, #12]
 228 013a 1A81     		strh	r2, [r3, #8]
 229 013c 02E0     		b	.L19
 230              	.L17:
 153:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  }
 154:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              } else {
 155:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  *perr = OS_ERR_FLAG_NOT_RDY;
 231              		.loc 1 155 0
 232 013e 7B68     		ldr	r3, [r7, #4]
 233 0140 7022     		movs	r2, #112
 234 0142 1A70     		strb	r2, [r3]
 235              	.L19:
 156:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              }
 157:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              OS_EXIT_CRITICAL();
 236              		.loc 1 157 0
 237 0144 BB69     		ldr	r3, [r7, #24]
 238 0146 1800     		movs	r0, r3
 239 0148 FFF7FEFF 		bl	OS_CPU_SR_Restore
 158:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              break;
 240              		.loc 1 158 0
 241 014c 5CE0     		b	.L16
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 8


 242              	.L10:
 159:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 160:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #if OS_FLAG_WAIT_CLR_EN > 0u
 161:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         case OS_FLAG_WAIT_CLR_ALL:                         /* See if all required flags are cleared
 162:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              flags_rdy = (OS_FLAGS)~pgrp->OSFlagFlags & flags;    /* Extract only the bits we want 
 243              		.loc 1 162 0
 244 014e FB68     		ldr	r3, [r7, #12]
 245 0150 1B89     		ldrh	r3, [r3, #8]
 246 0152 DB43     		mvns	r3, r3
 247 0154 9AB2     		uxth	r2, r3
 248 0156 1E23     		movs	r3, #30
 249 0158 FB18     		adds	r3, r7, r3
 250 015a 0A21     		movs	r1, #10
 251 015c 7918     		adds	r1, r7, r1
 252 015e 0988     		ldrh	r1, [r1]
 253 0160 0A40     		ands	r2, r1
 254 0162 1A80     		strh	r2, [r3]
 163:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              if (flags_rdy == flags) {                     /* Must match ALL the bits that we want 
 255              		.loc 1 163 0
 256 0164 1E23     		movs	r3, #30
 257 0166 FA18     		adds	r2, r7, r3
 258 0168 0A23     		movs	r3, #10
 259 016a FB18     		adds	r3, r7, r3
 260 016c 1288     		ldrh	r2, [r2]
 261 016e 1B88     		ldrh	r3, [r3]
 262 0170 9A42     		cmp	r2, r3
 263 0172 0ED1     		bne	.L20
 164:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  if (consume == OS_TRUE) {                 /* See if we need to consume the flags  
 264              		.loc 1 164 0
 265 0174 1D23     		movs	r3, #29
 266 0176 FB18     		adds	r3, r7, r3
 267 0178 1B78     		ldrb	r3, [r3]
 268 017a 012B     		cmp	r3, #1
 269 017c 0CD1     		bne	.L22
 165:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                      pgrp->OSFlagFlags |= flags_rdy;       /* Set ONLY the flags that we wanted    
 270              		.loc 1 165 0
 271 017e FB68     		ldr	r3, [r7, #12]
 272 0180 1A89     		ldrh	r2, [r3, #8]
 273 0182 1E23     		movs	r3, #30
 274 0184 FB18     		adds	r3, r7, r3
 275 0186 1B88     		ldrh	r3, [r3]
 276 0188 1343     		orrs	r3, r2
 277 018a 9AB2     		uxth	r2, r3
 278 018c FB68     		ldr	r3, [r7, #12]
 279 018e 1A81     		strh	r2, [r3, #8]
 280 0190 02E0     		b	.L22
 281              	.L20:
 166:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  }
 167:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              } else {
 168:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  *perr = OS_ERR_FLAG_NOT_RDY;
 282              		.loc 1 168 0
 283 0192 7B68     		ldr	r3, [r7, #4]
 284 0194 7022     		movs	r2, #112
 285 0196 1A70     		strb	r2, [r3]
 286              	.L22:
 169:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              }
 170:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              OS_EXIT_CRITICAL();
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 9


 287              		.loc 1 170 0
 288 0198 BB69     		ldr	r3, [r7, #24]
 289 019a 1800     		movs	r0, r3
 290 019c FFF7FEFF 		bl	OS_CPU_SR_Restore
 171:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              break;
 291              		.loc 1 171 0
 292 01a0 32E0     		b	.L16
 293              	.L8:
 172:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 173:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         case OS_FLAG_WAIT_CLR_ANY:
 174:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              flags_rdy = (OS_FLAGS)~pgrp->OSFlagFlags & flags;   /* Extract only the bits we want  
 294              		.loc 1 174 0
 295 01a2 FB68     		ldr	r3, [r7, #12]
 296 01a4 1B89     		ldrh	r3, [r3, #8]
 297 01a6 DB43     		mvns	r3, r3
 298 01a8 9AB2     		uxth	r2, r3
 299 01aa 1E23     		movs	r3, #30
 300 01ac FB18     		adds	r3, r7, r3
 301 01ae 0A21     		movs	r1, #10
 302 01b0 7918     		adds	r1, r7, r1
 303 01b2 0988     		ldrh	r1, [r1]
 304 01b4 0A40     		ands	r2, r1
 305 01b6 1A80     		strh	r2, [r3]
 175:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              if (flags_rdy != (OS_FLAGS)0) {               /* See if any flag cleared              
 306              		.loc 1 175 0
 307 01b8 1E23     		movs	r3, #30
 308 01ba FB18     		adds	r3, r7, r3
 309 01bc 1B88     		ldrh	r3, [r3]
 310 01be 002B     		cmp	r3, #0
 311 01c0 0ED0     		beq	.L23
 176:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  if (consume == OS_TRUE) {                 /* See if we need to consume the flags  
 312              		.loc 1 176 0
 313 01c2 1D23     		movs	r3, #29
 314 01c4 FB18     		adds	r3, r7, r3
 315 01c6 1B78     		ldrb	r3, [r3]
 316 01c8 012B     		cmp	r3, #1
 317 01ca 0CD1     		bne	.L25
 177:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                      pgrp->OSFlagFlags |= flags_rdy;       /* Set ONLY the flags that we got       
 318              		.loc 1 177 0
 319 01cc FB68     		ldr	r3, [r7, #12]
 320 01ce 1A89     		ldrh	r2, [r3, #8]
 321 01d0 1E23     		movs	r3, #30
 322 01d2 FB18     		adds	r3, r7, r3
 323 01d4 1B88     		ldrh	r3, [r3]
 324 01d6 1343     		orrs	r3, r2
 325 01d8 9AB2     		uxth	r2, r3
 326 01da FB68     		ldr	r3, [r7, #12]
 327 01dc 1A81     		strh	r2, [r3, #8]
 328 01de 02E0     		b	.L25
 329              	.L23:
 178:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  }
 179:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              } else {
 180:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  *perr = OS_ERR_FLAG_NOT_RDY;
 330              		.loc 1 180 0
 331 01e0 7B68     		ldr	r3, [r7, #4]
 332 01e2 7022     		movs	r2, #112
 333 01e4 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 10


 334              	.L25:
 181:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              }
 182:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              OS_EXIT_CRITICAL();
 335              		.loc 1 182 0
 336 01e6 BB69     		ldr	r3, [r7, #24]
 337 01e8 1800     		movs	r0, r3
 338 01ea FFF7FEFF 		bl	OS_CPU_SR_Restore
 183:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              break;
 339              		.loc 1 183 0
 340 01ee 0BE0     		b	.L16
 341              	.L7:
 184:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #endif
 185:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 186:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         default:
 187:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              OS_EXIT_CRITICAL();
 342              		.loc 1 187 0
 343 01f0 BB69     		ldr	r3, [r7, #24]
 344 01f2 1800     		movs	r0, r3
 345 01f4 FFF7FEFF 		bl	OS_CPU_SR_Restore
 188:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              flags_rdy = (OS_FLAGS)0;
 346              		.loc 1 188 0
 347 01f8 1E23     		movs	r3, #30
 348 01fa FB18     		adds	r3, r7, r3
 349 01fc 0022     		movs	r2, #0
 350 01fe 1A80     		strh	r2, [r3]
 189:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              *perr     = OS_ERR_FLAG_WAIT_TYPE;
 351              		.loc 1 189 0
 352 0200 7B68     		ldr	r3, [r7, #4]
 353 0202 6F22     		movs	r2, #111
 354 0204 1A70     		strb	r2, [r3]
 190:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              break;
 355              		.loc 1 190 0
 356 0206 C046     		nop
 357              	.L16:
 191:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     }
 192:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     return (flags_rdy);
 358              		.loc 1 192 0
 359 0208 1E23     		movs	r3, #30
 360 020a FB18     		adds	r3, r7, r3
 361 020c 1B88     		ldrh	r3, [r3]
 362              	.L3:
 193:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** }
 363              		.loc 1 193 0
 364 020e 1800     		movs	r0, r3
 365 0210 BD46     		mov	sp, r7
 366 0212 08B0     		add	sp, sp, #32
 367              		@ sp needed
 368 0214 80BD     		pop	{r7, pc}
 369              		.cfi_endproc
 370              	.LFE1:
 371              		.size	OSFlagAccept, .-OSFlagAccept
 372 0216 C046     		.section	.rodata
 373              		.align	2
 374              	.LC2:
 375 0000 3F00     		.ascii	"?\000"
 376              		.section	.text.OSFlagCreate,"ax",%progbits
 377              		.align	2
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 11


 378              		.global	OSFlagCreate
 379              		.code	16
 380              		.thumb_func
 381              		.type	OSFlagCreate, %function
 382              	OSFlagCreate:
 383              	.LFB2:
 194:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #endif
 195:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 196:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** /*$PAGE*/
 197:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** /*
 198:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** ***************************************************************************************************
 199:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                                        CREATE AN EVENT FLAG
 200:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
 201:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * Description: This function is called to create an event flag group.
 202:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
 203:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * Arguments  : flags         Contains the initial value to store in the event flag group.
 204:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
 205:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *              perr          is a pointer to an error code which will be returned to your applicati
 206:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                               OS_ERR_NONE               if the call was successful.
 207:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                               OS_ERR_CREATE_ISR         if you attempted to create an Event Flag 
 208:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                                                         ISR.
 209:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                               OS_ERR_FLAG_GRP_DEPLETED  if there are no more event flag groups
 210:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
 211:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * Returns    : A pointer to an event flag group or a NULL pointer if no more groups are available.
 212:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
 213:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * Called from: Task ONLY
 214:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** ***************************************************************************************************
 215:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** */
 216:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 217:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** OS_FLAG_GRP  *OSFlagCreate (OS_FLAGS  flags,
 218:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                             INT8U    *perr)
 219:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** {
 384              		.loc 1 219 0
 385              		.cfi_startproc
 386              		@ args = 0, pretend = 0, frame = 16
 387              		@ frame_needed = 1, uses_anonymous_args = 0
 388 0000 80B5     		push	{r7, lr}
 389              		.cfi_def_cfa_offset 8
 390              		.cfi_offset 7, -8
 391              		.cfi_offset 14, -4
 392 0002 84B0     		sub	sp, sp, #16
 393              		.cfi_def_cfa_offset 24
 394 0004 00AF     		add	r7, sp, #0
 395              		.cfi_def_cfa_register 7
 396 0006 0200     		movs	r2, r0
 397 0008 3960     		str	r1, [r7]
 398 000a BB1D     		adds	r3, r7, #6
 399 000c 1A80     		strh	r2, [r3]
 220:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     OS_FLAG_GRP *pgrp;
 221:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #if OS_CRITICAL_METHOD == 3u                        /* Allocate storage for CPU status register    
 222:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     OS_CPU_SR    cpu_sr = 0u;
 400              		.loc 1 222 0
 401 000e 0023     		movs	r3, #0
 402 0010 FB60     		str	r3, [r7, #12]
 223:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #endif
 224:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 225:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 12


 226:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 227:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #ifdef OS_SAFETY_CRITICAL
 228:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     if (perr == (INT8U *)0) {
 229:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
 230:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         return ((OS_FLAG_GRP *)0);
 231:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     }
 232:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #endif
 233:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 234:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #ifdef OS_SAFETY_CRITICAL_IEC61508
 235:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     if (OSSafetyCriticalStartFlag == OS_TRUE) {
 236:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
 237:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         return ((OS_FLAG_GRP *)0);
 238:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     }
 239:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #endif
 240:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 241:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     if (OSIntNesting > 0u) {                        /* See if called from ISR ...                  
 403              		.loc 1 241 0
 404 0012 1C4B     		ldr	r3, .L31
 405 0014 1B78     		ldrb	r3, [r3]
 406 0016 002B     		cmp	r3, #0
 407 0018 04D0     		beq	.L27
 242:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         *perr = OS_ERR_CREATE_ISR;                  /* ... can't CREATE from an ISR                
 408              		.loc 1 242 0
 409 001a 3B68     		ldr	r3, [r7]
 410 001c 1022     		movs	r2, #16
 411 001e 1A70     		strb	r2, [r3]
 243:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         return ((OS_FLAG_GRP *)0);
 412              		.loc 1 243 0
 413 0020 0023     		movs	r3, #0
 414 0022 2BE0     		b	.L28
 415              	.L27:
 244:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     }
 245:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     OS_ENTER_CRITICAL();
 416              		.loc 1 245 0
 417 0024 FFF7FEFF 		bl	OS_CPU_SR_Save
 418 0028 0300     		movs	r3, r0
 419 002a FB60     		str	r3, [r7, #12]
 246:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     pgrp = OSFlagFreeList;                          /* Get next free event flag                    
 420              		.loc 1 246 0
 421 002c 164B     		ldr	r3, .L31+4
 422 002e 1B68     		ldr	r3, [r3]
 423 0030 BB60     		str	r3, [r7, #8]
 247:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     if (pgrp != (OS_FLAG_GRP *)0) {                 /* See if we have event flag groups available  
 424              		.loc 1 247 0
 425 0032 BB68     		ldr	r3, [r7, #8]
 426 0034 002B     		cmp	r3, #0
 427 0036 19D0     		beq	.L29
 248:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                                                     /* Adjust free list                            
 249:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         OSFlagFreeList       = (OS_FLAG_GRP *)OSFlagFreeList->OSFlagWaitList;
 428              		.loc 1 249 0
 429 0038 134B     		ldr	r3, .L31+4
 430 003a 1B68     		ldr	r3, [r3]
 431 003c 5A68     		ldr	r2, [r3, #4]
 432 003e 124B     		ldr	r3, .L31+4
 433 0040 1A60     		str	r2, [r3]
 250:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         pgrp->OSFlagType     = OS_EVENT_TYPE_FLAG;  /* Set to event flag group type                
 434              		.loc 1 250 0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 13


 435 0042 BB68     		ldr	r3, [r7, #8]
 436 0044 0522     		movs	r2, #5
 437 0046 1A70     		strb	r2, [r3]
 251:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         pgrp->OSFlagFlags    = flags;               /* Set to desired initial value                
 438              		.loc 1 251 0
 439 0048 BB68     		ldr	r3, [r7, #8]
 440 004a BA1D     		adds	r2, r7, #6
 441 004c 1288     		ldrh	r2, [r2]
 442 004e 1A81     		strh	r2, [r3, #8]
 252:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         pgrp->OSFlagWaitList = (void *)0;           /* Clear list of tasks waiting on flags        
 443              		.loc 1 252 0
 444 0050 BB68     		ldr	r3, [r7, #8]
 445 0052 0022     		movs	r2, #0
 446 0054 5A60     		str	r2, [r3, #4]
 253:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #if OS_FLAG_NAME_EN > 0u
 254:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         pgrp->OSFlagName     = (INT8U *)(void *)"?";
 447              		.loc 1 254 0
 448 0056 BB68     		ldr	r3, [r7, #8]
 449 0058 0C4A     		ldr	r2, .L31+8
 450 005a DA60     		str	r2, [r3, #12]
 255:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #endif
 256:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         OS_EXIT_CRITICAL();
 451              		.loc 1 256 0
 452 005c FB68     		ldr	r3, [r7, #12]
 453 005e 1800     		movs	r0, r3
 454 0060 FFF7FEFF 		bl	OS_CPU_SR_Restore
 257:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         *perr                = OS_ERR_NONE;
 455              		.loc 1 257 0
 456 0064 3B68     		ldr	r3, [r7]
 457 0066 0022     		movs	r2, #0
 458 0068 1A70     		strb	r2, [r3]
 459 006a 06E0     		b	.L30
 460              	.L29:
 258:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     } else {
 259:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         OS_EXIT_CRITICAL();
 461              		.loc 1 259 0
 462 006c FB68     		ldr	r3, [r7, #12]
 463 006e 1800     		movs	r0, r3
 464 0070 FFF7FEFF 		bl	OS_CPU_SR_Restore
 260:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         *perr                = OS_ERR_FLAG_GRP_DEPLETED;
 465              		.loc 1 260 0
 466 0074 3B68     		ldr	r3, [r7]
 467 0076 7222     		movs	r2, #114
 468 0078 1A70     		strb	r2, [r3]
 469              	.L30:
 261:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     }
 262:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     return (pgrp);                                  /* Return pointer to event flag group          
 470              		.loc 1 262 0
 471 007a BB68     		ldr	r3, [r7, #8]
 472              	.L28:
 263:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** }
 473              		.loc 1 263 0
 474 007c 1800     		movs	r0, r3
 475 007e BD46     		mov	sp, r7
 476 0080 04B0     		add	sp, sp, #16
 477              		@ sp needed
 478 0082 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 14


 479              	.L32:
 480              		.align	2
 481              	.L31:
 482 0084 00000000 		.word	OSIntNesting
 483 0088 00000000 		.word	OSFlagFreeList
 484 008c 00000000 		.word	.LC2
 485              		.cfi_endproc
 486              	.LFE2:
 487              		.size	OSFlagCreate, .-OSFlagCreate
 488              		.section	.text.OSFlagDel,"ax",%progbits
 489              		.align	2
 490              		.global	OSFlagDel
 491              		.code	16
 492              		.thumb_func
 493              		.type	OSFlagDel, %function
 494              	OSFlagDel:
 495              	.LFB3:
 264:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 265:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** /*$PAGE*/
 266:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** /*
 267:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** ***************************************************************************************************
 268:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                                     DELETE AN EVENT FLAG GROUP
 269:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
 270:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * Description: This function deletes an event flag group and readies all tasks pending on the event
 271:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *              group.
 272:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
 273:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * Arguments  : pgrp          is a pointer to the desired event flag group.
 274:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
 275:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *              opt           determines delete options as follows:
 276:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            opt == OS_DEL_NO_PEND   Deletes the event flag group ONLY if no task p
 277:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            opt == OS_DEL_ALWAYS    Deletes the event flag group even if tasks are
 278:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                                                    waiting.  In this case, all the tasks pending 
 279:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                                                    readied.
 280:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
 281:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *              perr          is a pointer to an error code that can contain one of the following va
 282:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            OS_ERR_NONE               The call was successful and the event flag g
 283:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                                                      deleted
 284:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            OS_ERR_DEL_ISR            If you attempted to delete the event flag gr
 285:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                                                      an ISR
 286:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            OS_ERR_FLAG_INVALID_PGRP  If 'pgrp' is a NULL pointer.
 287:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            OS_ERR_EVENT_TYPE         If you didn't pass a pointer to an event fla
 288:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            OS_ERR_INVALID_OPT        An invalid option was specified
 289:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            OS_ERR_TASK_WAITING       One or more tasks were waiting on the event 
 290:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                                                      group.
 291:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
 292:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * Returns    : pgrp          upon error
 293:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *              (OS_EVENT *)0 if the event flag group was successfully deleted.
 294:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
 295:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * Note(s)    : 1) This function must be used with care.  Tasks that would normally expect the prese
 296:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                 the event flag group MUST check the return code of OSFlagAccept() and OSFlagPend(
 297:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *              2) This call can potentially disable interrupts for a long time.  The interrupt disa
 298:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                 time is directly proportional to the number of tasks waiting on the event flag gr
 299:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *              3) All tasks that were waiting for the event flag will be readied and returned an 
 300:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                 OS_ERR_PEND_ABORT if OSFlagDel() was called with OS_DEL_ALWAYS
 301:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** ***************************************************************************************************
 302:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** */
 303:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 15


 304:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #if OS_FLAG_DEL_EN > 0u
 305:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** OS_FLAG_GRP  *OSFlagDel (OS_FLAG_GRP  *pgrp,
 306:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                          INT8U         opt,
 307:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                          INT8U        *perr)
 308:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** {
 496              		.loc 1 308 0
 497              		.cfi_startproc
 498              		@ args = 0, pretend = 0, frame = 32
 499              		@ frame_needed = 1, uses_anonymous_args = 0
 500 0000 80B5     		push	{r7, lr}
 501              		.cfi_def_cfa_offset 8
 502              		.cfi_offset 7, -8
 503              		.cfi_offset 14, -4
 504 0002 88B0     		sub	sp, sp, #32
 505              		.cfi_def_cfa_offset 40
 506 0004 00AF     		add	r7, sp, #0
 507              		.cfi_def_cfa_register 7
 508 0006 F860     		str	r0, [r7, #12]
 509 0008 7A60     		str	r2, [r7, #4]
 510 000a 0B23     		movs	r3, #11
 511 000c FB18     		adds	r3, r7, r3
 512 000e 0A1C     		adds	r2, r1, #0
 513 0010 1A70     		strb	r2, [r3]
 309:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     BOOLEAN       tasks_waiting;
 310:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     OS_FLAG_NODE *pnode;
 311:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     OS_FLAG_GRP  *pgrp_return;
 312:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #if OS_CRITICAL_METHOD == 3u                               /* Allocate storage for CPU status regis
 313:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     OS_CPU_SR     cpu_sr = 0u;
 514              		.loc 1 313 0
 515 0012 0023     		movs	r3, #0
 516 0014 3B61     		str	r3, [r7, #16]
 314:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #endif
 315:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 316:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 317:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 318:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #ifdef OS_SAFETY_CRITICAL
 319:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     if (perr == (INT8U *)0) {
 320:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
 321:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         return ((OS_FLAG_GRP *)0);
 322:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     }
 323:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #endif
 324:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 325:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #if OS_ARG_CHK_EN > 0u
 326:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     if (pgrp == (OS_FLAG_GRP *)0) {                        /* Validate 'pgrp'                      
 517              		.loc 1 326 0
 518 0016 FB68     		ldr	r3, [r7, #12]
 519 0018 002B     		cmp	r3, #0
 520 001a 04D1     		bne	.L34
 327:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         *perr = OS_ERR_FLAG_INVALID_PGRP;
 521              		.loc 1 327 0
 522 001c 7B68     		ldr	r3, [r7, #4]
 523 001e 6E22     		movs	r2, #110
 524 0020 1A70     		strb	r2, [r3]
 328:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         return (pgrp);
 525              		.loc 1 328 0
 526 0022 FB68     		ldr	r3, [r7, #12]
 527 0024 8FE0     		b	.L35
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 16


 528              	.L34:
 329:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     }
 330:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #endif
 331:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     if (OSIntNesting > 0u) {                               /* See if called from ISR ...           
 529              		.loc 1 331 0
 530 0026 4A4B     		ldr	r3, .L50
 531 0028 1B78     		ldrb	r3, [r3]
 532 002a 002B     		cmp	r3, #0
 533 002c 04D0     		beq	.L36
 332:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         *perr = OS_ERR_DEL_ISR;                            /* ... can't DELETE from an ISR         
 534              		.loc 1 332 0
 535 002e 7B68     		ldr	r3, [r7, #4]
 536 0030 0F22     		movs	r2, #15
 537 0032 1A70     		strb	r2, [r3]
 333:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         return (pgrp);
 538              		.loc 1 333 0
 539 0034 FB68     		ldr	r3, [r7, #12]
 540 0036 86E0     		b	.L35
 541              	.L36:
 334:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     }
 335:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     if (pgrp->OSFlagType != OS_EVENT_TYPE_FLAG) {          /* Validate event group type            
 542              		.loc 1 335 0
 543 0038 FB68     		ldr	r3, [r7, #12]
 544 003a 1B78     		ldrb	r3, [r3]
 545 003c 052B     		cmp	r3, #5
 546 003e 04D0     		beq	.L37
 336:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         *perr = OS_ERR_EVENT_TYPE;
 547              		.loc 1 336 0
 548 0040 7B68     		ldr	r3, [r7, #4]
 549 0042 0122     		movs	r2, #1
 550 0044 1A70     		strb	r2, [r3]
 337:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         return (pgrp);
 551              		.loc 1 337 0
 552 0046 FB68     		ldr	r3, [r7, #12]
 553 0048 7DE0     		b	.L35
 554              	.L37:
 338:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     }
 339:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     OS_ENTER_CRITICAL();
 555              		.loc 1 339 0
 556 004a FFF7FEFF 		bl	OS_CPU_SR_Save
 557 004e 0300     		movs	r3, r0
 558 0050 3B61     		str	r3, [r7, #16]
 340:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     if (pgrp->OSFlagWaitList != (void *)0) {               /* See if any tasks waiting on event fla
 559              		.loc 1 340 0
 560 0052 FB68     		ldr	r3, [r7, #12]
 561 0054 5B68     		ldr	r3, [r3, #4]
 562 0056 002B     		cmp	r3, #0
 563 0058 04D0     		beq	.L38
 341:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         tasks_waiting = OS_TRUE;                           /* Yes                                  
 564              		.loc 1 341 0
 565 005a 1F23     		movs	r3, #31
 566 005c FB18     		adds	r3, r7, r3
 567 005e 0122     		movs	r2, #1
 568 0060 1A70     		strb	r2, [r3]
 569 0062 03E0     		b	.L39
 570              	.L38:
 342:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     } else {
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 17


 343:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         tasks_waiting = OS_FALSE;                          /* No                                   
 571              		.loc 1 343 0
 572 0064 1F23     		movs	r3, #31
 573 0066 FB18     		adds	r3, r7, r3
 574 0068 0022     		movs	r2, #0
 575 006a 1A70     		strb	r2, [r3]
 576              	.L39:
 344:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     }
 345:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     switch (opt) {
 577              		.loc 1 345 0
 578 006c 0B23     		movs	r3, #11
 579 006e FB18     		adds	r3, r7, r3
 580 0070 1B78     		ldrb	r3, [r3]
 581 0072 002B     		cmp	r3, #0
 582 0074 02D0     		beq	.L41
 583 0076 012B     		cmp	r3, #1
 584 0078 29D0     		beq	.L42
 585 007a 59E0     		b	.L49
 586              	.L41:
 346:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         case OS_DEL_NO_PEND:                               /* Delete group if no task waiting      
 347:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              if (tasks_waiting == OS_FALSE) {
 587              		.loc 1 347 0
 588 007c 1F23     		movs	r3, #31
 589 007e FB18     		adds	r3, r7, r3
 590 0080 1B78     		ldrb	r3, [r3]
 591 0082 002B     		cmp	r3, #0
 592 0084 19D1     		bne	.L43
 348:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #if OS_FLAG_NAME_EN > 0u
 349:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  pgrp->OSFlagName     = (INT8U *)(void *)"?";
 593              		.loc 1 349 0
 594 0086 FB68     		ldr	r3, [r7, #12]
 595 0088 324A     		ldr	r2, .L50+4
 596 008a DA60     		str	r2, [r3, #12]
 350:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #endif
 351:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  pgrp->OSFlagType     = OS_EVENT_TYPE_UNUSED;
 597              		.loc 1 351 0
 598 008c FB68     		ldr	r3, [r7, #12]
 599 008e 0022     		movs	r2, #0
 600 0090 1A70     		strb	r2, [r3]
 352:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  pgrp->OSFlagWaitList = (void *)OSFlagFreeList; /* Return group to free list       
 601              		.loc 1 352 0
 602 0092 314B     		ldr	r3, .L50+8
 603 0094 1A68     		ldr	r2, [r3]
 604 0096 FB68     		ldr	r3, [r7, #12]
 605 0098 5A60     		str	r2, [r3, #4]
 353:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  pgrp->OSFlagFlags    = (OS_FLAGS)0;
 606              		.loc 1 353 0
 607 009a FB68     		ldr	r3, [r7, #12]
 608 009c 0022     		movs	r2, #0
 609 009e 1A81     		strh	r2, [r3, #8]
 354:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  OSFlagFreeList       = pgrp;
 610              		.loc 1 354 0
 611 00a0 2D4B     		ldr	r3, .L50+8
 612 00a2 FA68     		ldr	r2, [r7, #12]
 613 00a4 1A60     		str	r2, [r3]
 355:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  OS_EXIT_CRITICAL();
 614              		.loc 1 355 0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 18


 615 00a6 3B69     		ldr	r3, [r7, #16]
 616 00a8 1800     		movs	r0, r3
 617 00aa FFF7FEFF 		bl	OS_CPU_SR_Restore
 356:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  *perr                = OS_ERR_NONE;
 618              		.loc 1 356 0
 619 00ae 7B68     		ldr	r3, [r7, #4]
 620 00b0 0022     		movs	r2, #0
 621 00b2 1A70     		strb	r2, [r3]
 357:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  pgrp_return          = (OS_FLAG_GRP *)0;  /* Event Flag Group has been deleted    
 622              		.loc 1 357 0
 623 00b4 0023     		movs	r3, #0
 624 00b6 7B61     		str	r3, [r7, #20]
 358:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              } else {
 359:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  OS_EXIT_CRITICAL();
 360:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  *perr                = OS_ERR_TASK_WAITING;
 361:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  pgrp_return          = pgrp;
 362:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              }
 363:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              break;
 625              		.loc 1 363 0
 626 00b8 44E0     		b	.L45
 627              	.L43:
 359:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  *perr                = OS_ERR_TASK_WAITING;
 628              		.loc 1 359 0
 629 00ba 3B69     		ldr	r3, [r7, #16]
 630 00bc 1800     		movs	r0, r3
 631 00be FFF7FEFF 		bl	OS_CPU_SR_Restore
 360:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  pgrp_return          = pgrp;
 632              		.loc 1 360 0
 633 00c2 7B68     		ldr	r3, [r7, #4]
 634 00c4 4922     		movs	r2, #73
 635 00c6 1A70     		strb	r2, [r3]
 361:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              }
 636              		.loc 1 361 0
 637 00c8 FB68     		ldr	r3, [r7, #12]
 638 00ca 7B61     		str	r3, [r7, #20]
 639              		.loc 1 363 0
 640 00cc 3AE0     		b	.L45
 641              	.L42:
 364:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 365:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         case OS_DEL_ALWAYS:                                /* Always delete the event flag group   
 366:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              pnode = (OS_FLAG_NODE *)pgrp->OSFlagWaitList;
 642              		.loc 1 366 0
 643 00ce FB68     		ldr	r3, [r7, #12]
 644 00d0 5B68     		ldr	r3, [r3, #4]
 645 00d2 BB61     		str	r3, [r7, #24]
 367:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              while (pnode != (OS_FLAG_NODE *)0) {          /* Ready ALL tasks waiting for flags    
 646              		.loc 1 367 0
 647 00d4 08E0     		b	.L46
 648              	.L47:
 368:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  (void)OS_FlagTaskRdy(pnode, (OS_FLAGS)0, OS_STAT_PEND_ABORT);
 649              		.loc 1 368 0
 650 00d6 BB69     		ldr	r3, [r7, #24]
 651 00d8 0222     		movs	r2, #2
 652 00da 0021     		movs	r1, #0
 653 00dc 1800     		movs	r0, r3
 654 00de FFF7FEFF 		bl	OS_FlagTaskRdy
 369:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  pnode = (OS_FLAG_NODE *)pnode->OSFlagNodeNext;
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 19


 655              		.loc 1 369 0
 656 00e2 BB69     		ldr	r3, [r7, #24]
 657 00e4 1B68     		ldr	r3, [r3]
 658 00e6 BB61     		str	r3, [r7, #24]
 659              	.L46:
 367:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              while (pnode != (OS_FLAG_NODE *)0) {          /* Ready ALL tasks waiting for flags    
 660              		.loc 1 367 0
 661 00e8 BB69     		ldr	r3, [r7, #24]
 662 00ea 002B     		cmp	r3, #0
 663 00ec F3D1     		bne	.L47
 370:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              }
 371:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #if OS_FLAG_NAME_EN > 0u
 372:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              pgrp->OSFlagName     = (INT8U *)(void *)"?";
 664              		.loc 1 372 0
 665 00ee FB68     		ldr	r3, [r7, #12]
 666 00f0 184A     		ldr	r2, .L50+4
 667 00f2 DA60     		str	r2, [r3, #12]
 373:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #endif
 374:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              pgrp->OSFlagType     = OS_EVENT_TYPE_UNUSED;
 668              		.loc 1 374 0
 669 00f4 FB68     		ldr	r3, [r7, #12]
 670 00f6 0022     		movs	r2, #0
 671 00f8 1A70     		strb	r2, [r3]
 375:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              pgrp->OSFlagWaitList = (void *)OSFlagFreeList;/* Return group to free list            
 672              		.loc 1 375 0
 673 00fa 174B     		ldr	r3, .L50+8
 674 00fc 1A68     		ldr	r2, [r3]
 675 00fe FB68     		ldr	r3, [r7, #12]
 676 0100 5A60     		str	r2, [r3, #4]
 376:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              pgrp->OSFlagFlags    = (OS_FLAGS)0;
 677              		.loc 1 376 0
 678 0102 FB68     		ldr	r3, [r7, #12]
 679 0104 0022     		movs	r2, #0
 680 0106 1A81     		strh	r2, [r3, #8]
 377:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              OSFlagFreeList       = pgrp;
 681              		.loc 1 377 0
 682 0108 134B     		ldr	r3, .L50+8
 683 010a FA68     		ldr	r2, [r7, #12]
 684 010c 1A60     		str	r2, [r3]
 378:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              OS_EXIT_CRITICAL();
 685              		.loc 1 378 0
 686 010e 3B69     		ldr	r3, [r7, #16]
 687 0110 1800     		movs	r0, r3
 688 0112 FFF7FEFF 		bl	OS_CPU_SR_Restore
 379:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              if (tasks_waiting == OS_TRUE) {               /* Reschedule only if task(s) were waiti
 689              		.loc 1 379 0
 690 0116 1F23     		movs	r3, #31
 691 0118 FB18     		adds	r3, r7, r3
 692 011a 1B78     		ldrb	r3, [r3]
 693 011c 012B     		cmp	r3, #1
 694 011e 01D1     		bne	.L48
 380:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  OS_Sched();                               /* Find highest priority task ready to r
 695              		.loc 1 380 0
 696 0120 FFF7FEFF 		bl	OS_Sched
 697              	.L48:
 381:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              }
 382:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              *perr = OS_ERR_NONE;
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 20


 698              		.loc 1 382 0
 699 0124 7B68     		ldr	r3, [r7, #4]
 700 0126 0022     		movs	r2, #0
 701 0128 1A70     		strb	r2, [r3]
 383:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              pgrp_return          = (OS_FLAG_GRP *)0;      /* Event Flag Group has been deleted    
 702              		.loc 1 383 0
 703 012a 0023     		movs	r3, #0
 704 012c 7B61     		str	r3, [r7, #20]
 384:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              break;
 705              		.loc 1 384 0
 706 012e 09E0     		b	.L45
 707              	.L49:
 385:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 386:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         default:
 387:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              OS_EXIT_CRITICAL();
 708              		.loc 1 387 0
 709 0130 3B69     		ldr	r3, [r7, #16]
 710 0132 1800     		movs	r0, r3
 711 0134 FFF7FEFF 		bl	OS_CPU_SR_Restore
 388:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              *perr                = OS_ERR_INVALID_OPT;
 712              		.loc 1 388 0
 713 0138 7B68     		ldr	r3, [r7, #4]
 714 013a 0722     		movs	r2, #7
 715 013c 1A70     		strb	r2, [r3]
 389:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              pgrp_return          = pgrp;
 716              		.loc 1 389 0
 717 013e FB68     		ldr	r3, [r7, #12]
 718 0140 7B61     		str	r3, [r7, #20]
 390:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              break;
 719              		.loc 1 390 0
 720 0142 C046     		nop
 721              	.L45:
 391:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     }
 392:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     return (pgrp_return);
 722              		.loc 1 392 0
 723 0144 7B69     		ldr	r3, [r7, #20]
 724              	.L35:
 393:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** }
 725              		.loc 1 393 0
 726 0146 1800     		movs	r0, r3
 727 0148 BD46     		mov	sp, r7
 728 014a 08B0     		add	sp, sp, #32
 729              		@ sp needed
 730 014c 80BD     		pop	{r7, pc}
 731              	.L51:
 732 014e C046     		.align	2
 733              	.L50:
 734 0150 00000000 		.word	OSIntNesting
 735 0154 00000000 		.word	.LC2
 736 0158 00000000 		.word	OSFlagFreeList
 737              		.cfi_endproc
 738              	.LFE3:
 739              		.size	OSFlagDel, .-OSFlagDel
 740              		.section	.text.OSFlagNameGet,"ax",%progbits
 741              		.align	2
 742              		.global	OSFlagNameGet
 743              		.code	16
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 21


 744              		.thumb_func
 745              		.type	OSFlagNameGet, %function
 746              	OSFlagNameGet:
 747              	.LFB4:
 394:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #endif
 395:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** /*$PAGE*/
 396:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** /*
 397:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** ***************************************************************************************************
 398:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                                 GET THE NAME OF AN EVENT FLAG GROUP
 399:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
 400:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * Description: This function is used to obtain the name assigned to an event flag group
 401:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
 402:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * Arguments  : pgrp      is a pointer to the event flag group.
 403:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
 404:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *              pname     is pointer to a pointer to an ASCII string that will receive the name of t
 405:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                        group.
 406:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
 407:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *              perr      is a pointer to an error code that can contain one of the following values
 408:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
 409:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                        OS_ERR_NONE                if the requested task is resumed
 410:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                        OS_ERR_EVENT_TYPE          if 'pevent' is not pointing to an event flag gr
 411:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                        OS_ERR_PNAME_NULL          You passed a NULL pointer for 'pname'
 412:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                        OS_ERR_FLAG_INVALID_PGRP   if you passed a NULL pointer for 'pgrp'
 413:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                        OS_ERR_NAME_GET_ISR        if you called this function from an ISR
 414:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
 415:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * Returns    : The length of the string or 0 if the 'pgrp' is a NULL pointer.
 416:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** ***************************************************************************************************
 417:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** */
 418:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 419:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #if OS_FLAG_NAME_EN > 0u
 420:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** INT8U  OSFlagNameGet (OS_FLAG_GRP   *pgrp,
 421:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                       INT8U        **pname,
 422:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                       INT8U         *perr)
 423:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** {
 748              		.loc 1 423 0
 749              		.cfi_startproc
 750              		@ args = 0, pretend = 0, frame = 24
 751              		@ frame_needed = 1, uses_anonymous_args = 0
 752 0000 90B5     		push	{r4, r7, lr}
 753              		.cfi_def_cfa_offset 12
 754              		.cfi_offset 4, -12
 755              		.cfi_offset 7, -8
 756              		.cfi_offset 14, -4
 757 0002 87B0     		sub	sp, sp, #28
 758              		.cfi_def_cfa_offset 40
 759 0004 00AF     		add	r7, sp, #0
 760              		.cfi_def_cfa_register 7
 761 0006 F860     		str	r0, [r7, #12]
 762 0008 B960     		str	r1, [r7, #8]
 763 000a 7A60     		str	r2, [r7, #4]
 424:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     INT8U      len;
 425:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #if OS_CRITICAL_METHOD == 3u                     /* Allocate storage for CPU status register       
 426:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     OS_CPU_SR  cpu_sr = 0u;
 764              		.loc 1 426 0
 765 000c 0023     		movs	r3, #0
 766 000e 7B61     		str	r3, [r7, #20]
 427:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #endif
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 22


 428:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 429:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 430:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 431:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #ifdef OS_SAFETY_CRITICAL
 432:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     if (perr == (INT8U *)0) {
 433:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
 434:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         return (0u);
 435:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     }
 436:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #endif
 437:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 438:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #if OS_ARG_CHK_EN > 0u
 439:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     if (pgrp == (OS_FLAG_GRP *)0) {              /* Is 'pgrp' a NULL pointer?                      
 767              		.loc 1 439 0
 768 0010 FB68     		ldr	r3, [r7, #12]
 769 0012 002B     		cmp	r3, #0
 770 0014 04D1     		bne	.L53
 440:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         *perr = OS_ERR_FLAG_INVALID_PGRP;
 771              		.loc 1 440 0
 772 0016 7B68     		ldr	r3, [r7, #4]
 773 0018 6E22     		movs	r2, #110
 774 001a 1A70     		strb	r2, [r3]
 441:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         return (0u);
 775              		.loc 1 441 0
 776 001c 0023     		movs	r3, #0
 777 001e 38E0     		b	.L54
 778              	.L53:
 442:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     }
 443:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     if (pname == (INT8U **)0) {                   /* Is 'pname' a NULL pointer?                    
 779              		.loc 1 443 0
 780 0020 BB68     		ldr	r3, [r7, #8]
 781 0022 002B     		cmp	r3, #0
 782 0024 04D1     		bne	.L55
 444:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         *perr = OS_ERR_PNAME_NULL;
 783              		.loc 1 444 0
 784 0026 7B68     		ldr	r3, [r7, #4]
 785 0028 0C22     		movs	r2, #12
 786 002a 1A70     		strb	r2, [r3]
 445:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         return (0u);
 787              		.loc 1 445 0
 788 002c 0023     		movs	r3, #0
 789 002e 30E0     		b	.L54
 790              	.L55:
 446:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     }
 447:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #endif
 448:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     if (OSIntNesting > 0u) {                     /* See if trying to call from an ISR              
 791              		.loc 1 448 0
 792 0030 1A4B     		ldr	r3, .L58
 793 0032 1B78     		ldrb	r3, [r3]
 794 0034 002B     		cmp	r3, #0
 795 0036 04D0     		beq	.L56
 449:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         *perr = OS_ERR_NAME_GET_ISR;
 796              		.loc 1 449 0
 797 0038 7B68     		ldr	r3, [r7, #4]
 798 003a 1122     		movs	r2, #17
 799 003c 1A70     		strb	r2, [r3]
 450:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         return (0u);
 800              		.loc 1 450 0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 23


 801 003e 0023     		movs	r3, #0
 802 0040 27E0     		b	.L54
 803              	.L56:
 451:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     }
 452:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     OS_ENTER_CRITICAL();
 804              		.loc 1 452 0
 805 0042 FFF7FEFF 		bl	OS_CPU_SR_Save
 806 0046 0300     		movs	r3, r0
 807 0048 7B61     		str	r3, [r7, #20]
 453:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     if (pgrp->OSFlagType != OS_EVENT_TYPE_FLAG) {
 808              		.loc 1 453 0
 809 004a FB68     		ldr	r3, [r7, #12]
 810 004c 1B78     		ldrb	r3, [r3]
 811 004e 052B     		cmp	r3, #5
 812 0050 08D0     		beq	.L57
 454:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         OS_EXIT_CRITICAL();
 813              		.loc 1 454 0
 814 0052 7B69     		ldr	r3, [r7, #20]
 815 0054 1800     		movs	r0, r3
 816 0056 FFF7FEFF 		bl	OS_CPU_SR_Restore
 455:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         *perr = OS_ERR_EVENT_TYPE;
 817              		.loc 1 455 0
 818 005a 7B68     		ldr	r3, [r7, #4]
 819 005c 0122     		movs	r2, #1
 820 005e 1A70     		strb	r2, [r3]
 456:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         return (0u);
 821              		.loc 1 456 0
 822 0060 0023     		movs	r3, #0
 823 0062 16E0     		b	.L54
 824              	.L57:
 457:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     }
 458:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     *pname = pgrp->OSFlagName;
 825              		.loc 1 458 0
 826 0064 FB68     		ldr	r3, [r7, #12]
 827 0066 DA68     		ldr	r2, [r3, #12]
 828 0068 BB68     		ldr	r3, [r7, #8]
 829 006a 1A60     		str	r2, [r3]
 459:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     len    = OS_StrLen(*pname);
 830              		.loc 1 459 0
 831 006c BB68     		ldr	r3, [r7, #8]
 832 006e 1B68     		ldr	r3, [r3]
 833 0070 1322     		movs	r2, #19
 834 0072 BC18     		adds	r4, r7, r2
 835 0074 1800     		movs	r0, r3
 836 0076 FFF7FEFF 		bl	OS_StrLen
 837 007a 0300     		movs	r3, r0
 838 007c 2370     		strb	r3, [r4]
 460:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     OS_EXIT_CRITICAL();
 839              		.loc 1 460 0
 840 007e 7B69     		ldr	r3, [r7, #20]
 841 0080 1800     		movs	r0, r3
 842 0082 FFF7FEFF 		bl	OS_CPU_SR_Restore
 461:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     *perr  = OS_ERR_NONE;
 843              		.loc 1 461 0
 844 0086 7B68     		ldr	r3, [r7, #4]
 845 0088 0022     		movs	r2, #0
 846 008a 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 24


 462:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     return (len);
 847              		.loc 1 462 0
 848 008c 1323     		movs	r3, #19
 849 008e FB18     		adds	r3, r7, r3
 850 0090 1B78     		ldrb	r3, [r3]
 851              	.L54:
 463:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** }
 852              		.loc 1 463 0
 853 0092 1800     		movs	r0, r3
 854 0094 BD46     		mov	sp, r7
 855 0096 07B0     		add	sp, sp, #28
 856              		@ sp needed
 857 0098 90BD     		pop	{r4, r7, pc}
 858              	.L59:
 859 009a C046     		.align	2
 860              	.L58:
 861 009c 00000000 		.word	OSIntNesting
 862              		.cfi_endproc
 863              	.LFE4:
 864              		.size	OSFlagNameGet, .-OSFlagNameGet
 865              		.section	.text.OSFlagNameSet,"ax",%progbits
 866              		.align	2
 867              		.global	OSFlagNameSet
 868              		.code	16
 869              		.thumb_func
 870              		.type	OSFlagNameSet, %function
 871              	OSFlagNameSet:
 872              	.LFB5:
 464:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #endif
 465:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 466:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** /*$PAGE*/
 467:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** /*
 468:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** ***************************************************************************************************
 469:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                                ASSIGN A NAME TO AN EVENT FLAG GROUP
 470:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
 471:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * Description: This function assigns a name to an event flag group.
 472:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
 473:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * Arguments  : pgrp      is a pointer to the event flag group.
 474:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
 475:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *              pname     is a pointer to an ASCII string that will be used as the name of the event
 476:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                        group.
 477:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
 478:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *              perr      is a pointer to an error code that can contain one of the following values
 479:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
 480:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                        OS_ERR_NONE                if the requested task is resumed
 481:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                        OS_ERR_EVENT_TYPE          if 'pevent' is not pointing to an event flag gr
 482:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                        OS_ERR_PNAME_NULL          You passed a NULL pointer for 'pname'
 483:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                        OS_ERR_FLAG_INVALID_PGRP   if you passed a NULL pointer for 'pgrp'
 484:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                        OS_ERR_NAME_SET_ISR        if you called this function from an ISR
 485:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
 486:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * Returns    : None
 487:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** ***************************************************************************************************
 488:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** */
 489:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 490:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #if OS_FLAG_NAME_EN > 0u
 491:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** void  OSFlagNameSet (OS_FLAG_GRP  *pgrp,
 492:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                      INT8U        *pname,
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 25


 493:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                      INT8U        *perr)
 494:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** {
 873              		.loc 1 494 0
 874              		.cfi_startproc
 875              		@ args = 0, pretend = 0, frame = 24
 876              		@ frame_needed = 1, uses_anonymous_args = 0
 877 0000 80B5     		push	{r7, lr}
 878              		.cfi_def_cfa_offset 8
 879              		.cfi_offset 7, -8
 880              		.cfi_offset 14, -4
 881 0002 86B0     		sub	sp, sp, #24
 882              		.cfi_def_cfa_offset 32
 883 0004 00AF     		add	r7, sp, #0
 884              		.cfi_def_cfa_register 7
 885 0006 F860     		str	r0, [r7, #12]
 886 0008 B960     		str	r1, [r7, #8]
 887 000a 7A60     		str	r2, [r7, #4]
 495:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #if OS_CRITICAL_METHOD == 3u                     /* Allocate storage for CPU status register       
 496:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     OS_CPU_SR  cpu_sr = 0u;
 888              		.loc 1 496 0
 889 000c 0023     		movs	r3, #0
 890 000e 7B61     		str	r3, [r7, #20]
 497:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #endif
 498:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 499:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 500:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 501:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #ifdef OS_SAFETY_CRITICAL
 502:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     if (perr == (INT8U *)0) {
 503:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
 504:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         return;
 505:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     }
 506:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #endif
 507:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 508:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #if OS_ARG_CHK_EN > 0u
 509:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     if (pgrp == (OS_FLAG_GRP *)0) {              /* Is 'pgrp' a NULL pointer?                      
 891              		.loc 1 509 0
 892 0010 FB68     		ldr	r3, [r7, #12]
 893 0012 002B     		cmp	r3, #0
 894 0014 03D1     		bne	.L61
 510:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         *perr = OS_ERR_FLAG_INVALID_PGRP;
 895              		.loc 1 510 0
 896 0016 7B68     		ldr	r3, [r7, #4]
 897 0018 6E22     		movs	r2, #110
 898 001a 1A70     		strb	r2, [r3]
 511:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         return;
 899              		.loc 1 511 0
 900 001c 29E0     		b	.L60
 901              	.L61:
 512:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     }
 513:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     if (pname == (INT8U *)0) {                   /* Is 'pname' a NULL pointer?                     
 902              		.loc 1 513 0
 903 001e BB68     		ldr	r3, [r7, #8]
 904 0020 002B     		cmp	r3, #0
 905 0022 03D1     		bne	.L63
 514:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         *perr = OS_ERR_PNAME_NULL;
 906              		.loc 1 514 0
 907 0024 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 26


 908 0026 0C22     		movs	r2, #12
 909 0028 1A70     		strb	r2, [r3]
 515:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         return;
 910              		.loc 1 515 0
 911 002a 22E0     		b	.L60
 912              	.L63:
 516:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     }
 517:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #endif
 518:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     if (OSIntNesting > 0u) {                     /* See if trying to call from an ISR              
 913              		.loc 1 518 0
 914 002c 124B     		ldr	r3, .L66
 915 002e 1B78     		ldrb	r3, [r3]
 916 0030 002B     		cmp	r3, #0
 917 0032 03D0     		beq	.L64
 519:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         *perr = OS_ERR_NAME_SET_ISR;
 918              		.loc 1 519 0
 919 0034 7B68     		ldr	r3, [r7, #4]
 920 0036 1222     		movs	r2, #18
 921 0038 1A70     		strb	r2, [r3]
 520:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         return;
 922              		.loc 1 520 0
 923 003a 1AE0     		b	.L60
 924              	.L64:
 521:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     }
 522:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     OS_ENTER_CRITICAL();
 925              		.loc 1 522 0
 926 003c FFF7FEFF 		bl	OS_CPU_SR_Save
 927 0040 0300     		movs	r3, r0
 928 0042 7B61     		str	r3, [r7, #20]
 523:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     if (pgrp->OSFlagType != OS_EVENT_TYPE_FLAG) {
 929              		.loc 1 523 0
 930 0044 FB68     		ldr	r3, [r7, #12]
 931 0046 1B78     		ldrb	r3, [r3]
 932 0048 052B     		cmp	r3, #5
 933 004a 07D0     		beq	.L65
 524:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         OS_EXIT_CRITICAL();
 934              		.loc 1 524 0
 935 004c 7B69     		ldr	r3, [r7, #20]
 936 004e 1800     		movs	r0, r3
 937 0050 FFF7FEFF 		bl	OS_CPU_SR_Restore
 525:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         *perr = OS_ERR_EVENT_TYPE;
 938              		.loc 1 525 0
 939 0054 7B68     		ldr	r3, [r7, #4]
 940 0056 0122     		movs	r2, #1
 941 0058 1A70     		strb	r2, [r3]
 526:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         return;
 942              		.loc 1 526 0
 943 005a 0AE0     		b	.L60
 944              	.L65:
 527:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     }
 528:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     pgrp->OSFlagName = pname;
 945              		.loc 1 528 0
 946 005c FB68     		ldr	r3, [r7, #12]
 947 005e BA68     		ldr	r2, [r7, #8]
 948 0060 DA60     		str	r2, [r3, #12]
 529:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     OS_EXIT_CRITICAL();
 949              		.loc 1 529 0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 27


 950 0062 7B69     		ldr	r3, [r7, #20]
 951 0064 1800     		movs	r0, r3
 952 0066 FFF7FEFF 		bl	OS_CPU_SR_Restore
 530:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     *perr            = OS_ERR_NONE;
 953              		.loc 1 530 0
 954 006a 7B68     		ldr	r3, [r7, #4]
 955 006c 0022     		movs	r2, #0
 956 006e 1A70     		strb	r2, [r3]
 531:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     return;
 957              		.loc 1 531 0
 958 0070 C046     		nop
 959              	.L60:
 532:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** }
 960              		.loc 1 532 0
 961 0072 BD46     		mov	sp, r7
 962 0074 06B0     		add	sp, sp, #24
 963              		@ sp needed
 964 0076 80BD     		pop	{r7, pc}
 965              	.L67:
 966              		.align	2
 967              	.L66:
 968 0078 00000000 		.word	OSIntNesting
 969              		.cfi_endproc
 970              	.LFE5:
 971              		.size	OSFlagNameSet, .-OSFlagNameSet
 972              		.section	.text.OSFlagPend,"ax",%progbits
 973              		.align	2
 974              		.global	OSFlagPend
 975              		.code	16
 976              		.thumb_func
 977              		.type	OSFlagPend, %function
 978              	OSFlagPend:
 979              	.LFB6:
 533:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #endif
 534:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 535:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** /*$PAGE*/
 536:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** /*
 537:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** ***************************************************************************************************
 538:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                                     WAIT ON AN EVENT FLAG GROUP
 539:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
 540:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * Description: This function is called to wait for a combination of bits to be set in an event flag
 541:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *              group.  Your application can wait for ANY bit to be set or ALL bits to be set.
 542:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
 543:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * Arguments  : pgrp          is a pointer to the desired event flag group.
 544:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
 545:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *              flags         Is a bit pattern indicating which bit(s) (i.e. flags) you wish to wait
 546:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            The bits you want are specified by setting the corresponding bits in
 547:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            'flags'.  e.g. if your application wants to wait for bits 0 and 1 then
 548:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            'flags' would contain 0x03.
 549:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
 550:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *              wait_type     specifies whether you want ALL bits to be set or ANY of the bits to be
 551:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            You can specify the following argument:
 552:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
 553:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            OS_FLAG_WAIT_CLR_ALL   You will wait for ALL bits in 'mask' to be clea
 554:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            OS_FLAG_WAIT_SET_ALL   You will wait for ALL bits in 'mask' to be set 
 555:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            OS_FLAG_WAIT_CLR_ANY   You will wait for ANY bit  in 'mask' to be clea
 556:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            OS_FLAG_WAIT_SET_ANY   You will wait for ANY bit  in 'mask' to be set 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 28


 557:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
 558:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            NOTE: Add OS_FLAG_CONSUME if you want the event flag to be 'consumed' 
 559:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                                  the call.  Example, to wait for any flag in a group AND then cle
 560:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                                  the flags that are present, set 'wait_type' to:
 561:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
 562:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                                  OS_FLAG_WAIT_SET_ANY + OS_FLAG_CONSUME
 563:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
 564:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *              timeout       is an optional timeout (in clock ticks) that your task will wait for t
 565:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            desired bit combination.  If you specify 0, however, your task will wa
 566:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            forever at the specified event flag group or, until a message arrives.
 567:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
 568:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *              perr          is a pointer to an error code and can be:
 569:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            OS_ERR_NONE               The desired bits have been set within the sp
 570:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                                                      'timeout'.
 571:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            OS_ERR_PEND_ISR           If you tried to PEND from an ISR
 572:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            OS_ERR_FLAG_INVALID_PGRP  If 'pgrp' is a NULL pointer.
 573:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            OS_ERR_EVENT_TYPE         You are not pointing to an event flag group
 574:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            OS_ERR_TIMEOUT            The bit(s) have not been set in the specifie
 575:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                                                      'timeout'.
 576:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            OS_ERR_PEND_ABORT         The wait on the flag was aborted.
 577:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            OS_ERR_FLAG_WAIT_TYPE     You didn't specify a proper 'wait_type' argu
 578:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
 579:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * Returns    : The flags in the event flag group that made the task ready or, 0 if a timeout or an 
 580:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *              occurred.
 581:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
 582:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * Called from: Task ONLY
 583:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
 584:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * Note(s)    : 1) IMPORTANT, the behavior of this function has changed from PREVIOUS versions.  The
 585:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                 function NOW returns the flags that were ready INSTEAD of the current state of th
 586:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                 event flags.
 587:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** ***************************************************************************************************
 588:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** */
 589:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 590:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** OS_FLAGS  OSFlagPend (OS_FLAG_GRP  *pgrp,
 591:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                       OS_FLAGS      flags,
 592:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                       INT8U         wait_type,
 593:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                       INT32U        timeout,
 594:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                       INT8U        *perr)
 595:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** {
 980              		.loc 1 595 0
 981              		.cfi_startproc
 982              		@ args = 4, pretend = 0, frame = 56
 983              		@ frame_needed = 1, uses_anonymous_args = 0
 984 0000 90B5     		push	{r4, r7, lr}
 985              		.cfi_def_cfa_offset 12
 986              		.cfi_offset 4, -12
 987              		.cfi_offset 7, -8
 988              		.cfi_offset 14, -4
 989 0002 91B0     		sub	sp, sp, #68
 990              		.cfi_def_cfa_offset 80
 991 0004 02AF     		add	r7, sp, #8
 992              		.cfi_def_cfa 7, 72
 993 0006 F860     		str	r0, [r7, #12]
 994 0008 0800     		movs	r0, r1
 995 000a 1100     		movs	r1, r2
 996 000c 7B60     		str	r3, [r7, #4]
 997 000e 0A23     		movs	r3, #10
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 29


 998 0010 FB18     		adds	r3, r7, r3
 999 0012 021C     		adds	r2, r0, #0
 1000 0014 1A80     		strh	r2, [r3]
 1001 0016 0923     		movs	r3, #9
 1002 0018 FB18     		adds	r3, r7, r3
 1003 001a 0A1C     		adds	r2, r1, #0
 1004 001c 1A70     		strb	r2, [r3]
 596:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     OS_FLAG_NODE  node;
 597:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     OS_FLAGS      flags_rdy;
 598:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     INT8U         result;
 599:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     INT8U         pend_stat;
 600:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     BOOLEAN       consume;
 601:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #if OS_CRITICAL_METHOD == 3u                               /* Allocate storage for CPU status regis
 602:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     OS_CPU_SR     cpu_sr = 0u;
 1005              		.loc 1 602 0
 1006 001e 0023     		movs	r3, #0
 1007 0020 3B63     		str	r3, [r7, #48]
 603:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #endif
 604:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 605:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 606:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 607:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #ifdef OS_SAFETY_CRITICAL
 608:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     if (perr == (INT8U *)0) {
 609:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
 610:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         return ((OS_FLAGS)0);
 611:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     }
 612:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #endif
 613:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 614:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #if OS_ARG_CHK_EN > 0u
 615:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     if (pgrp == (OS_FLAG_GRP *)0) {                        /* Validate 'pgrp'                      
 1008              		.loc 1 615 0
 1009 0022 FB68     		ldr	r3, [r7, #12]
 1010 0024 002B     		cmp	r3, #0
 1011 0026 04D1     		bne	.L69
 616:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         *perr = OS_ERR_FLAG_INVALID_PGRP;
 1012              		.loc 1 616 0
 1013 0028 BB6C     		ldr	r3, [r7, #72]
 1014 002a 6E22     		movs	r2, #110
 1015 002c 1A70     		strb	r2, [r3]
 617:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         return ((OS_FLAGS)0);
 1016              		.loc 1 617 0
 1017 002e 0023     		movs	r3, #0
 1018 0030 E7E1     		b	.L99
 1019              	.L69:
 618:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     }
 619:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #endif
 620:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     if (OSIntNesting > 0u) {                               /* See if called from ISR ...           
 1020              		.loc 1 620 0
 1021 0032 CE4B     		ldr	r3, .L101
 1022 0034 1B78     		ldrb	r3, [r3]
 1023 0036 002B     		cmp	r3, #0
 1024 0038 04D0     		beq	.L71
 621:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         *perr = OS_ERR_PEND_ISR;                           /* ... can't PEND from an ISR           
 1025              		.loc 1 621 0
 1026 003a BB6C     		ldr	r3, [r7, #72]
 1027 003c 0222     		movs	r2, #2
 1028 003e 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 30


 622:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         return ((OS_FLAGS)0);
 1029              		.loc 1 622 0
 1030 0040 0023     		movs	r3, #0
 1031 0042 DEE1     		b	.L99
 1032              	.L71:
 623:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     }
 624:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     if (OSLockNesting > 0u) {                              /* See if called with scheduler locked .
 1033              		.loc 1 624 0
 1034 0044 CA4B     		ldr	r3, .L101+4
 1035 0046 1B78     		ldrb	r3, [r3]
 1036 0048 002B     		cmp	r3, #0
 1037 004a 04D0     		beq	.L72
 625:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         *perr = OS_ERR_PEND_LOCKED;                        /* ... can't PEND when locked           
 1038              		.loc 1 625 0
 1039 004c BB6C     		ldr	r3, [r7, #72]
 1040 004e 0D22     		movs	r2, #13
 1041 0050 1A70     		strb	r2, [r3]
 626:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         return ((OS_FLAGS)0);
 1042              		.loc 1 626 0
 1043 0052 0023     		movs	r3, #0
 1044 0054 D5E1     		b	.L99
 1045              	.L72:
 627:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     }
 628:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     if (pgrp->OSFlagType != OS_EVENT_TYPE_FLAG) {          /* Validate event block type            
 1046              		.loc 1 628 0
 1047 0056 FB68     		ldr	r3, [r7, #12]
 1048 0058 1B78     		ldrb	r3, [r3]
 1049 005a 052B     		cmp	r3, #5
 1050 005c 04D0     		beq	.L73
 629:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         *perr = OS_ERR_EVENT_TYPE;
 1051              		.loc 1 629 0
 1052 005e BB6C     		ldr	r3, [r7, #72]
 1053 0060 0122     		movs	r2, #1
 1054 0062 1A70     		strb	r2, [r3]
 630:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         return ((OS_FLAGS)0);
 1055              		.loc 1 630 0
 1056 0064 0023     		movs	r3, #0
 1057 0066 CCE1     		b	.L99
 1058              	.L73:
 631:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     }
 632:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     result = (INT8U)(wait_type & OS_FLAG_CONSUME);
 1059              		.loc 1 632 0
 1060 0068 2F23     		movs	r3, #47
 1061 006a FB18     		adds	r3, r7, r3
 1062 006c 0922     		movs	r2, #9
 1063 006e BA18     		adds	r2, r7, r2
 1064 0070 1278     		ldrb	r2, [r2]
 1065 0072 7F21     		movs	r1, #127
 1066 0074 8A43     		bics	r2, r1
 1067 0076 1A70     		strb	r2, [r3]
 633:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     if (result != (INT8U)0) {                              /* See if we need to consume the flags  
 1068              		.loc 1 633 0
 1069 0078 2F23     		movs	r3, #47
 1070 007a FB18     		adds	r3, r7, r3
 1071 007c 1B78     		ldrb	r3, [r3]
 1072 007e 002B     		cmp	r3, #0
 1073 0080 0CD0     		beq	.L74
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 31


 634:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         wait_type &= (INT8U)~(INT8U)OS_FLAG_CONSUME;
 1074              		.loc 1 634 0
 1075 0082 0923     		movs	r3, #9
 1076 0084 FB18     		adds	r3, r7, r3
 1077 0086 0922     		movs	r2, #9
 1078 0088 BA18     		adds	r2, r7, r2
 1079 008a 1278     		ldrb	r2, [r2]
 1080 008c 7F21     		movs	r1, #127
 1081 008e 0A40     		ands	r2, r1
 1082 0090 1A70     		strb	r2, [r3]
 635:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         consume    = OS_TRUE;
 1083              		.loc 1 635 0
 1084 0092 3723     		movs	r3, #55
 1085 0094 FB18     		adds	r3, r7, r3
 1086 0096 0122     		movs	r2, #1
 1087 0098 1A70     		strb	r2, [r3]
 1088 009a 03E0     		b	.L75
 1089              	.L74:
 636:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     } else {
 637:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         consume    = OS_FALSE;
 1090              		.loc 1 637 0
 1091 009c 3723     		movs	r3, #55
 1092 009e FB18     		adds	r3, r7, r3
 1093 00a0 0022     		movs	r2, #0
 1094 00a2 1A70     		strb	r2, [r3]
 1095              	.L75:
 638:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     }
 639:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** /*$PAGE*/
 640:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     OS_ENTER_CRITICAL();
 1096              		.loc 1 640 0
 1097 00a4 FFF7FEFF 		bl	OS_CPU_SR_Save
 1098 00a8 0300     		movs	r3, r0
 1099 00aa 3B63     		str	r3, [r7, #48]
 641:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     switch (wait_type) {
 1100              		.loc 1 641 0
 1101 00ac 0923     		movs	r3, #9
 1102 00ae FB18     		adds	r3, r7, r3
 1103 00b0 1B78     		ldrb	r3, [r3]
 1104 00b2 012B     		cmp	r3, #1
 1105 00b4 00D1     		bne	.LCB967
 1106 00b6 D5E0     		b	.L77	@long jump
 1107              	.LCB967:
 1108 00b8 03DC     		bgt	.L78
 1109 00ba 002B     		cmp	r3, #0
 1110 00bc 00D1     		bne	.LCB971
 1111 00be 8CE0     		b	.L79	@long jump
 1112              	.LCB971:
 1113 00c0 12E1     		b	.L76
 1114              	.L78:
 1115 00c2 022B     		cmp	r3, #2
 1116 00c4 02D0     		beq	.L80
 1117 00c6 032B     		cmp	r3, #3
 1118 00c8 45D0     		beq	.L81
 1119 00ca 0DE1     		b	.L76
 1120              	.L80:
 642:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         case OS_FLAG_WAIT_SET_ALL:                         /* See if all required flags are set    
 643:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              flags_rdy = (OS_FLAGS)(pgrp->OSFlagFlags & flags);   /* Extract only the bits we want 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 32


 1121              		.loc 1 643 0
 1122 00cc FB68     		ldr	r3, [r7, #12]
 1123 00ce 1A89     		ldrh	r2, [r3, #8]
 1124 00d0 2C23     		movs	r3, #44
 1125 00d2 FB18     		adds	r3, r7, r3
 1126 00d4 0A21     		movs	r1, #10
 1127 00d6 7918     		adds	r1, r7, r1
 1128 00d8 0988     		ldrh	r1, [r1]
 1129 00da 0A40     		ands	r2, r1
 1130 00dc 1A80     		strh	r2, [r3]
 644:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              if (flags_rdy == flags) {                     /* Must match ALL the bits that we want 
 1131              		.loc 1 644 0
 1132 00de 2C23     		movs	r3, #44
 1133 00e0 FA18     		adds	r2, r7, r3
 1134 00e2 0A23     		movs	r3, #10
 1135 00e4 FB18     		adds	r3, r7, r3
 1136 00e6 1288     		ldrh	r2, [r2]
 1137 00e8 1B88     		ldrh	r3, [r3]
 1138 00ea 9A42     		cmp	r2, r3
 1139 00ec 20D1     		bne	.L82
 645:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  if (consume == OS_TRUE) {                 /* See if we need to consume the flags  
 1140              		.loc 1 645 0
 1141 00ee 3723     		movs	r3, #55
 1142 00f0 FB18     		adds	r3, r7, r3
 1143 00f2 1B78     		ldrb	r3, [r3]
 1144 00f4 012B     		cmp	r3, #1
 1145 00f6 0AD1     		bne	.L83
 646:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                      pgrp->OSFlagFlags &= (OS_FLAGS)~flags_rdy;   /* Clear ONLY the flags we wanted
 1146              		.loc 1 646 0
 1147 00f8 FB68     		ldr	r3, [r7, #12]
 1148 00fa 1B89     		ldrh	r3, [r3, #8]
 1149 00fc 2C22     		movs	r2, #44
 1150 00fe BA18     		adds	r2, r7, r2
 1151 0100 1288     		ldrh	r2, [r2]
 1152 0102 D243     		mvns	r2, r2
 1153 0104 92B2     		uxth	r2, r2
 1154 0106 1340     		ands	r3, r2
 1155 0108 9AB2     		uxth	r2, r3
 1156 010a FB68     		ldr	r3, [r7, #12]
 1157 010c 1A81     		strh	r2, [r3, #8]
 1158              	.L83:
 647:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  }
 648:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  OSTCBCur->OSTCBFlagsRdy = flags_rdy;      /* Save flags that were ready           
 1159              		.loc 1 648 0
 1160 010e 994B     		ldr	r3, .L101+8
 1161 0110 1B68     		ldr	r3, [r3]
 1162 0112 2C22     		movs	r2, #44
 1163 0114 BA18     		adds	r2, r7, r2
 1164 0116 1288     		ldrh	r2, [r2]
 1165 0118 9A85     		strh	r2, [r3, #44]
 649:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  OS_EXIT_CRITICAL();                       /* Yes, condition met, return to caller 
 1166              		.loc 1 649 0
 1167 011a 3B6B     		ldr	r3, [r7, #48]
 1168 011c 1800     		movs	r0, r3
 1169 011e FFF7FEFF 		bl	OS_CPU_SR_Restore
 650:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  *perr                   = OS_ERR_NONE;
 1170              		.loc 1 650 0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 33


 1171 0122 BB6C     		ldr	r3, [r7, #72]
 1172 0124 0022     		movs	r2, #0
 1173 0126 1A70     		strb	r2, [r3]
 651:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  return (flags_rdy);
 1174              		.loc 1 651 0
 1175 0128 2C23     		movs	r3, #44
 1176 012a FB18     		adds	r3, r7, r3
 1177 012c 1B88     		ldrh	r3, [r3]
 1178 012e 68E1     		b	.L99
 1179              	.L82:
 652:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              } else {                                      /* Block task until events occur or time
 653:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  OS_FlagBlock(pgrp, &node, flags, wait_type, timeout);
 1180              		.loc 1 653 0
 1181 0130 0923     		movs	r3, #9
 1182 0132 FB18     		adds	r3, r7, r3
 1183 0134 1C78     		ldrb	r4, [r3]
 1184 0136 0A23     		movs	r3, #10
 1185 0138 FB18     		adds	r3, r7, r3
 1186 013a 1A88     		ldrh	r2, [r3]
 1187 013c 1423     		movs	r3, #20
 1188 013e F918     		adds	r1, r7, r3
 1189 0140 F868     		ldr	r0, [r7, #12]
 1190 0142 7B68     		ldr	r3, [r7, #4]
 1191 0144 0093     		str	r3, [sp]
 1192 0146 2300     		movs	r3, r4
 1193 0148 FFF7FEFF 		bl	OS_FlagBlock
 654:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  OS_EXIT_CRITICAL();
 1194              		.loc 1 654 0
 1195 014c 3B6B     		ldr	r3, [r7, #48]
 1196 014e 1800     		movs	r0, r3
 1197 0150 FFF7FEFF 		bl	OS_CPU_SR_Restore
 655:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              }
 656:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              break;
 1198              		.loc 1 656 0
 1199 0154 D7E0     		b	.L84
 1200              	.L81:
 657:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 658:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         case OS_FLAG_WAIT_SET_ANY:
 659:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              flags_rdy = (OS_FLAGS)(pgrp->OSFlagFlags & flags);    /* Extract only the bits we want
 1201              		.loc 1 659 0
 1202 0156 FB68     		ldr	r3, [r7, #12]
 1203 0158 1A89     		ldrh	r2, [r3, #8]
 1204 015a 2C23     		movs	r3, #44
 1205 015c FB18     		adds	r3, r7, r3
 1206 015e 0A21     		movs	r1, #10
 1207 0160 7918     		adds	r1, r7, r1
 1208 0162 0988     		ldrh	r1, [r1]
 1209 0164 0A40     		ands	r2, r1
 1210 0166 1A80     		strh	r2, [r3]
 660:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              if (flags_rdy != (OS_FLAGS)0) {               /* See if any flag set                  
 1211              		.loc 1 660 0
 1212 0168 2C23     		movs	r3, #44
 1213 016a FB18     		adds	r3, r7, r3
 1214 016c 1B88     		ldrh	r3, [r3]
 1215 016e 002B     		cmp	r3, #0
 1216 0170 20D0     		beq	.L85
 661:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  if (consume == OS_TRUE) {                 /* See if we need to consume the flags  
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 34


 1217              		.loc 1 661 0
 1218 0172 3723     		movs	r3, #55
 1219 0174 FB18     		adds	r3, r7, r3
 1220 0176 1B78     		ldrb	r3, [r3]
 1221 0178 012B     		cmp	r3, #1
 1222 017a 0AD1     		bne	.L86
 662:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                      pgrp->OSFlagFlags &= (OS_FLAGS)~flags_rdy;    /* Clear ONLY the flags that we 
 1223              		.loc 1 662 0
 1224 017c FB68     		ldr	r3, [r7, #12]
 1225 017e 1B89     		ldrh	r3, [r3, #8]
 1226 0180 2C22     		movs	r2, #44
 1227 0182 BA18     		adds	r2, r7, r2
 1228 0184 1288     		ldrh	r2, [r2]
 1229 0186 D243     		mvns	r2, r2
 1230 0188 92B2     		uxth	r2, r2
 1231 018a 1340     		ands	r3, r2
 1232 018c 9AB2     		uxth	r2, r3
 1233 018e FB68     		ldr	r3, [r7, #12]
 1234 0190 1A81     		strh	r2, [r3, #8]
 1235              	.L86:
 663:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  }
 664:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  OSTCBCur->OSTCBFlagsRdy = flags_rdy;      /* Save flags that were ready           
 1236              		.loc 1 664 0
 1237 0192 784B     		ldr	r3, .L101+8
 1238 0194 1B68     		ldr	r3, [r3]
 1239 0196 2C22     		movs	r2, #44
 1240 0198 BA18     		adds	r2, r7, r2
 1241 019a 1288     		ldrh	r2, [r2]
 1242 019c 9A85     		strh	r2, [r3, #44]
 665:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  OS_EXIT_CRITICAL();                       /* Yes, condition met, return to caller 
 1243              		.loc 1 665 0
 1244 019e 3B6B     		ldr	r3, [r7, #48]
 1245 01a0 1800     		movs	r0, r3
 1246 01a2 FFF7FEFF 		bl	OS_CPU_SR_Restore
 666:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  *perr                   = OS_ERR_NONE;
 1247              		.loc 1 666 0
 1248 01a6 BB6C     		ldr	r3, [r7, #72]
 1249 01a8 0022     		movs	r2, #0
 1250 01aa 1A70     		strb	r2, [r3]
 667:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  return (flags_rdy);
 1251              		.loc 1 667 0
 1252 01ac 2C23     		movs	r3, #44
 1253 01ae FB18     		adds	r3, r7, r3
 1254 01b0 1B88     		ldrh	r3, [r3]
 1255 01b2 26E1     		b	.L99
 1256              	.L85:
 668:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              } else {                                      /* Block task until events occur or time
 669:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  OS_FlagBlock(pgrp, &node, flags, wait_type, timeout);
 1257              		.loc 1 669 0
 1258 01b4 0923     		movs	r3, #9
 1259 01b6 FB18     		adds	r3, r7, r3
 1260 01b8 1C78     		ldrb	r4, [r3]
 1261 01ba 0A23     		movs	r3, #10
 1262 01bc FB18     		adds	r3, r7, r3
 1263 01be 1A88     		ldrh	r2, [r3]
 1264 01c0 1423     		movs	r3, #20
 1265 01c2 F918     		adds	r1, r7, r3
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 35


 1266 01c4 F868     		ldr	r0, [r7, #12]
 1267 01c6 7B68     		ldr	r3, [r7, #4]
 1268 01c8 0093     		str	r3, [sp]
 1269 01ca 2300     		movs	r3, r4
 1270 01cc FFF7FEFF 		bl	OS_FlagBlock
 670:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  OS_EXIT_CRITICAL();
 1271              		.loc 1 670 0
 1272 01d0 3B6B     		ldr	r3, [r7, #48]
 1273 01d2 1800     		movs	r0, r3
 1274 01d4 FFF7FEFF 		bl	OS_CPU_SR_Restore
 671:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              }
 672:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              break;
 1275              		.loc 1 672 0
 1276 01d8 95E0     		b	.L84
 1277              	.L79:
 673:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 674:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #if OS_FLAG_WAIT_CLR_EN > 0u
 675:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         case OS_FLAG_WAIT_CLR_ALL:                         /* See if all required flags are cleared
 676:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              flags_rdy = (OS_FLAGS)~pgrp->OSFlagFlags & flags;    /* Extract only the bits we want 
 1278              		.loc 1 676 0
 1279 01da FB68     		ldr	r3, [r7, #12]
 1280 01dc 1B89     		ldrh	r3, [r3, #8]
 1281 01de DB43     		mvns	r3, r3
 1282 01e0 9AB2     		uxth	r2, r3
 1283 01e2 2C23     		movs	r3, #44
 1284 01e4 FB18     		adds	r3, r7, r3
 1285 01e6 0A21     		movs	r1, #10
 1286 01e8 7918     		adds	r1, r7, r1
 1287 01ea 0988     		ldrh	r1, [r1]
 1288 01ec 0A40     		ands	r2, r1
 1289 01ee 1A80     		strh	r2, [r3]
 677:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              if (flags_rdy == flags) {                     /* Must match ALL the bits that we want 
 1290              		.loc 1 677 0
 1291 01f0 2C23     		movs	r3, #44
 1292 01f2 FA18     		adds	r2, r7, r3
 1293 01f4 0A23     		movs	r3, #10
 1294 01f6 FB18     		adds	r3, r7, r3
 1295 01f8 1288     		ldrh	r2, [r2]
 1296 01fa 1B88     		ldrh	r3, [r3]
 1297 01fc 9A42     		cmp	r2, r3
 1298 01fe 1ED1     		bne	.L87
 678:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  if (consume == OS_TRUE) {                 /* See if we need to consume the flags  
 1299              		.loc 1 678 0
 1300 0200 3723     		movs	r3, #55
 1301 0202 FB18     		adds	r3, r7, r3
 1302 0204 1B78     		ldrb	r3, [r3]
 1303 0206 012B     		cmp	r3, #1
 1304 0208 08D1     		bne	.L88
 679:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                      pgrp->OSFlagFlags |= flags_rdy;       /* Set ONLY the flags that we wanted    
 1305              		.loc 1 679 0
 1306 020a FB68     		ldr	r3, [r7, #12]
 1307 020c 1A89     		ldrh	r2, [r3, #8]
 1308 020e 2C23     		movs	r3, #44
 1309 0210 FB18     		adds	r3, r7, r3
 1310 0212 1B88     		ldrh	r3, [r3]
 1311 0214 1343     		orrs	r3, r2
 1312 0216 9AB2     		uxth	r2, r3
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 36


 1313 0218 FB68     		ldr	r3, [r7, #12]
 1314 021a 1A81     		strh	r2, [r3, #8]
 1315              	.L88:
 680:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  }
 681:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  OSTCBCur->OSTCBFlagsRdy = flags_rdy;      /* Save flags that were ready           
 1316              		.loc 1 681 0
 1317 021c 554B     		ldr	r3, .L101+8
 1318 021e 1B68     		ldr	r3, [r3]
 1319 0220 2C22     		movs	r2, #44
 1320 0222 BA18     		adds	r2, r7, r2
 1321 0224 1288     		ldrh	r2, [r2]
 1322 0226 9A85     		strh	r2, [r3, #44]
 682:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  OS_EXIT_CRITICAL();                       /* Yes, condition met, return to caller 
 1323              		.loc 1 682 0
 1324 0228 3B6B     		ldr	r3, [r7, #48]
 1325 022a 1800     		movs	r0, r3
 1326 022c FFF7FEFF 		bl	OS_CPU_SR_Restore
 683:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  *perr                   = OS_ERR_NONE;
 1327              		.loc 1 683 0
 1328 0230 BB6C     		ldr	r3, [r7, #72]
 1329 0232 0022     		movs	r2, #0
 1330 0234 1A70     		strb	r2, [r3]
 684:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  return (flags_rdy);
 1331              		.loc 1 684 0
 1332 0236 2C23     		movs	r3, #44
 1333 0238 FB18     		adds	r3, r7, r3
 1334 023a 1B88     		ldrh	r3, [r3]
 1335 023c E1E0     		b	.L99
 1336              	.L87:
 685:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              } else {                                      /* Block task until events occur or time
 686:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  OS_FlagBlock(pgrp, &node, flags, wait_type, timeout);
 1337              		.loc 1 686 0
 1338 023e 0923     		movs	r3, #9
 1339 0240 FB18     		adds	r3, r7, r3
 1340 0242 1C78     		ldrb	r4, [r3]
 1341 0244 0A23     		movs	r3, #10
 1342 0246 FB18     		adds	r3, r7, r3
 1343 0248 1A88     		ldrh	r2, [r3]
 1344 024a 1423     		movs	r3, #20
 1345 024c F918     		adds	r1, r7, r3
 1346 024e F868     		ldr	r0, [r7, #12]
 1347 0250 7B68     		ldr	r3, [r7, #4]
 1348 0252 0093     		str	r3, [sp]
 1349 0254 2300     		movs	r3, r4
 1350 0256 FFF7FEFF 		bl	OS_FlagBlock
 687:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  OS_EXIT_CRITICAL();
 1351              		.loc 1 687 0
 1352 025a 3B6B     		ldr	r3, [r7, #48]
 1353 025c 1800     		movs	r0, r3
 1354 025e FFF7FEFF 		bl	OS_CPU_SR_Restore
 688:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              }
 689:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              break;
 1355              		.loc 1 689 0
 1356 0262 50E0     		b	.L84
 1357              	.L77:
 690:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 691:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         case OS_FLAG_WAIT_CLR_ANY:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 37


 692:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              flags_rdy = (OS_FLAGS)~pgrp->OSFlagFlags & flags;   /* Extract only the bits we want  
 1358              		.loc 1 692 0
 1359 0264 FB68     		ldr	r3, [r7, #12]
 1360 0266 1B89     		ldrh	r3, [r3, #8]
 1361 0268 DB43     		mvns	r3, r3
 1362 026a 9AB2     		uxth	r2, r3
 1363 026c 2C23     		movs	r3, #44
 1364 026e FB18     		adds	r3, r7, r3
 1365 0270 0A21     		movs	r1, #10
 1366 0272 7918     		adds	r1, r7, r1
 1367 0274 0988     		ldrh	r1, [r1]
 1368 0276 0A40     		ands	r2, r1
 1369 0278 1A80     		strh	r2, [r3]
 693:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              if (flags_rdy != (OS_FLAGS)0) {               /* See if any flag cleared              
 1370              		.loc 1 693 0
 1371 027a 2C23     		movs	r3, #44
 1372 027c FB18     		adds	r3, r7, r3
 1373 027e 1B88     		ldrh	r3, [r3]
 1374 0280 002B     		cmp	r3, #0
 1375 0282 1ED0     		beq	.L89
 694:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  if (consume == OS_TRUE) {                 /* See if we need to consume the flags  
 1376              		.loc 1 694 0
 1377 0284 3723     		movs	r3, #55
 1378 0286 FB18     		adds	r3, r7, r3
 1379 0288 1B78     		ldrb	r3, [r3]
 1380 028a 012B     		cmp	r3, #1
 1381 028c 08D1     		bne	.L90
 695:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                      pgrp->OSFlagFlags |= flags_rdy;       /* Set ONLY the flags that we got       
 1382              		.loc 1 695 0
 1383 028e FB68     		ldr	r3, [r7, #12]
 1384 0290 1A89     		ldrh	r2, [r3, #8]
 1385 0292 2C23     		movs	r3, #44
 1386 0294 FB18     		adds	r3, r7, r3
 1387 0296 1B88     		ldrh	r3, [r3]
 1388 0298 1343     		orrs	r3, r2
 1389 029a 9AB2     		uxth	r2, r3
 1390 029c FB68     		ldr	r3, [r7, #12]
 1391 029e 1A81     		strh	r2, [r3, #8]
 1392              	.L90:
 696:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  }
 697:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  OSTCBCur->OSTCBFlagsRdy = flags_rdy;      /* Save flags that were ready           
 1393              		.loc 1 697 0
 1394 02a0 344B     		ldr	r3, .L101+8
 1395 02a2 1B68     		ldr	r3, [r3]
 1396 02a4 2C22     		movs	r2, #44
 1397 02a6 BA18     		adds	r2, r7, r2
 1398 02a8 1288     		ldrh	r2, [r2]
 1399 02aa 9A85     		strh	r2, [r3, #44]
 698:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  OS_EXIT_CRITICAL();                       /* Yes, condition met, return to caller 
 1400              		.loc 1 698 0
 1401 02ac 3B6B     		ldr	r3, [r7, #48]
 1402 02ae 1800     		movs	r0, r3
 1403 02b0 FFF7FEFF 		bl	OS_CPU_SR_Restore
 699:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  *perr                   = OS_ERR_NONE;
 1404              		.loc 1 699 0
 1405 02b4 BB6C     		ldr	r3, [r7, #72]
 1406 02b6 0022     		movs	r2, #0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 38


 1407 02b8 1A70     		strb	r2, [r3]
 700:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  return (flags_rdy);
 1408              		.loc 1 700 0
 1409 02ba 2C23     		movs	r3, #44
 1410 02bc FB18     		adds	r3, r7, r3
 1411 02be 1B88     		ldrh	r3, [r3]
 1412 02c0 9FE0     		b	.L99
 1413              	.L89:
 701:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              } else {                                      /* Block task until events occur or time
 702:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  OS_FlagBlock(pgrp, &node, flags, wait_type, timeout);
 1414              		.loc 1 702 0
 1415 02c2 0923     		movs	r3, #9
 1416 02c4 FB18     		adds	r3, r7, r3
 1417 02c6 1C78     		ldrb	r4, [r3]
 1418 02c8 0A23     		movs	r3, #10
 1419 02ca FB18     		adds	r3, r7, r3
 1420 02cc 1A88     		ldrh	r2, [r3]
 1421 02ce 1423     		movs	r3, #20
 1422 02d0 F918     		adds	r1, r7, r3
 1423 02d2 F868     		ldr	r0, [r7, #12]
 1424 02d4 7B68     		ldr	r3, [r7, #4]
 1425 02d6 0093     		str	r3, [sp]
 1426 02d8 2300     		movs	r3, r4
 1427 02da FFF7FEFF 		bl	OS_FlagBlock
 703:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  OS_EXIT_CRITICAL();
 1428              		.loc 1 703 0
 1429 02de 3B6B     		ldr	r3, [r7, #48]
 1430 02e0 1800     		movs	r0, r3
 1431 02e2 FFF7FEFF 		bl	OS_CPU_SR_Restore
 704:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              }
 705:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              break;
 1432              		.loc 1 705 0
 1433 02e6 0EE0     		b	.L84
 1434              	.L76:
 706:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #endif
 707:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 708:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         default:
 709:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              OS_EXIT_CRITICAL();
 1435              		.loc 1 709 0
 1436 02e8 3B6B     		ldr	r3, [r7, #48]
 1437 02ea 1800     		movs	r0, r3
 1438 02ec FFF7FEFF 		bl	OS_CPU_SR_Restore
 710:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              flags_rdy = (OS_FLAGS)0;
 1439              		.loc 1 710 0
 1440 02f0 2C23     		movs	r3, #44
 1441 02f2 FB18     		adds	r3, r7, r3
 1442 02f4 0022     		movs	r2, #0
 1443 02f6 1A80     		strh	r2, [r3]
 711:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              *perr      = OS_ERR_FLAG_WAIT_TYPE;
 1444              		.loc 1 711 0
 1445 02f8 BB6C     		ldr	r3, [r7, #72]
 1446 02fa 6F22     		movs	r2, #111
 1447 02fc 1A70     		strb	r2, [r3]
 712:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              return (flags_rdy);
 1448              		.loc 1 712 0
 1449 02fe 2C23     		movs	r3, #44
 1450 0300 FB18     		adds	r3, r7, r3
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 39


 1451 0302 1B88     		ldrh	r3, [r3]
 1452 0304 7DE0     		b	.L99
 1453              	.L84:
 713:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     }
 714:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** /*$PAGE*/
 715:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     OS_Sched();                                            /* Find next HPT ready to run           
 1454              		.loc 1 715 0
 1455 0306 FFF7FEFF 		bl	OS_Sched
 716:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     OS_ENTER_CRITICAL();
 1456              		.loc 1 716 0
 1457 030a FFF7FEFF 		bl	OS_CPU_SR_Save
 1458 030e 0300     		movs	r3, r0
 1459 0310 3B63     		str	r3, [r7, #48]
 717:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     if (OSTCBCur->OSTCBStatPend != OS_STAT_PEND_OK) {      /* Have we timed-out or aborted?        
 1460              		.loc 1 717 0
 1461 0312 184B     		ldr	r3, .L101+8
 1462 0314 1B68     		ldr	r3, [r3]
 1463 0316 3522     		movs	r2, #53
 1464 0318 9B5C     		ldrb	r3, [r3, r2]
 1465 031a 002B     		cmp	r3, #0
 1466 031c 34D0     		beq	.L91
 718:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         pend_stat                = OSTCBCur->OSTCBStatPend;
 1467              		.loc 1 718 0
 1468 031e 154B     		ldr	r3, .L101+8
 1469 0320 1A68     		ldr	r2, [r3]
 1470 0322 2B23     		movs	r3, #43
 1471 0324 FB18     		adds	r3, r7, r3
 1472 0326 3521     		movs	r1, #53
 1473 0328 525C     		ldrb	r2, [r2, r1]
 1474 032a 1A70     		strb	r2, [r3]
 719:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         OSTCBCur->OSTCBStatPend  = OS_STAT_PEND_OK;
 1475              		.loc 1 719 0
 1476 032c 114B     		ldr	r3, .L101+8
 1477 032e 1B68     		ldr	r3, [r3]
 1478 0330 3522     		movs	r2, #53
 1479 0332 0021     		movs	r1, #0
 1480 0334 9954     		strb	r1, [r3, r2]
 720:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         OS_FlagUnlink(&node);
 1481              		.loc 1 720 0
 1482 0336 1423     		movs	r3, #20
 1483 0338 FB18     		adds	r3, r7, r3
 1484 033a 1800     		movs	r0, r3
 1485 033c FFF7FEFF 		bl	OS_FlagUnlink
 721:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         OSTCBCur->OSTCBStat      = OS_STAT_RDY;            /* Yes, make task ready-to-run          
 1486              		.loc 1 721 0
 1487 0340 0C4B     		ldr	r3, .L101+8
 1488 0342 1B68     		ldr	r3, [r3]
 1489 0344 3422     		movs	r2, #52
 1490 0346 0021     		movs	r1, #0
 1491 0348 9954     		strb	r1, [r3, r2]
 722:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         OS_EXIT_CRITICAL();
 1492              		.loc 1 722 0
 1493 034a 3B6B     		ldr	r3, [r7, #48]
 1494 034c 1800     		movs	r0, r3
 1495 034e FFF7FEFF 		bl	OS_CPU_SR_Restore
 723:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         flags_rdy                = (OS_FLAGS)0;
 1496              		.loc 1 723 0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 40


 1497 0352 2C23     		movs	r3, #44
 1498 0354 FB18     		adds	r3, r7, r3
 1499 0356 0022     		movs	r2, #0
 1500 0358 1A80     		strh	r2, [r3]
 724:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         switch (pend_stat) {
 1501              		.loc 1 724 0
 1502 035a 2B23     		movs	r3, #43
 1503 035c FB18     		adds	r3, r7, r3
 1504 035e 1B78     		ldrb	r3, [r3]
 1505 0360 022B     		cmp	r3, #2
 1506 0362 09D1     		bne	.L100
 725:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****             case OS_STAT_PEND_ABORT:
 726:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  *perr = OS_ERR_PEND_ABORT;                /* Indicate that we aborted   waiting   
 1507              		.loc 1 726 0
 1508 0364 BB6C     		ldr	r3, [r7, #72]
 1509 0366 0E22     		movs	r2, #14
 1510 0368 1A70     		strb	r2, [r3]
 727:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  break;
 1511              		.loc 1 727 0
 1512 036a 09E0     		b	.L94
 1513              	.L102:
 1514              		.align	2
 1515              	.L101:
 1516 036c 00000000 		.word	OSIntNesting
 1517 0370 00000000 		.word	OSLockNesting
 1518 0374 00000000 		.word	OSTCBCur
 1519              	.L100:
 728:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 729:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****             case OS_STAT_PEND_TO:
 730:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****             default:
 731:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  *perr = OS_ERR_TIMEOUT;                   /* Indicate that we timed-out waiting   
 1520              		.loc 1 731 0
 1521 0378 BB6C     		ldr	r3, [r7, #72]
 1522 037a 0A22     		movs	r2, #10
 1523 037c 1A70     		strb	r2, [r3]
 732:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  break;
 1524              		.loc 1 732 0
 1525 037e C046     		nop
 1526              	.L94:
 733:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         }
 734:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         return (flags_rdy);
 1527              		.loc 1 734 0
 1528 0380 2C23     		movs	r3, #44
 1529 0382 FB18     		adds	r3, r7, r3
 1530 0384 1B88     		ldrh	r3, [r3]
 1531 0386 3CE0     		b	.L99
 1532              	.L91:
 735:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     }
 736:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     flags_rdy = OSTCBCur->OSTCBFlagsRdy;
 1533              		.loc 1 736 0
 1534 0388 204B     		ldr	r3, .L103
 1535 038a 1A68     		ldr	r2, [r3]
 1536 038c 2C23     		movs	r3, #44
 1537 038e FB18     		adds	r3, r7, r3
 1538 0390 928D     		ldrh	r2, [r2, #44]
 1539 0392 1A80     		strh	r2, [r3]
 737:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     if (consume == OS_TRUE) {                              /* See if we need to consume the flags  
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 41


 1540              		.loc 1 737 0
 1541 0394 3723     		movs	r3, #55
 1542 0396 FB18     		adds	r3, r7, r3
 1543 0398 1B78     		ldrb	r3, [r3]
 1544 039a 012B     		cmp	r3, #1
 1545 039c 27D1     		bne	.L95
 738:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         switch (wait_type) {
 1546              		.loc 1 738 0
 1547 039e 0923     		movs	r3, #9
 1548 03a0 FB18     		adds	r3, r7, r3
 1549 03a2 1B78     		ldrb	r3, [r3]
 1550 03a4 002B     		cmp	r3, #0
 1551 03a6 19DB     		blt	.L96
 1552 03a8 012B     		cmp	r3, #1
 1553 03aa 0DDD     		ble	.L97
 1554 03ac 032B     		cmp	r3, #3
 1555 03ae 15DC     		bgt	.L96
 739:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****             case OS_FLAG_WAIT_SET_ALL:
 740:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****             case OS_FLAG_WAIT_SET_ANY:                     /* Clear ONLY the flags we got          
 741:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  pgrp->OSFlagFlags &= (OS_FLAGS)~flags_rdy;
 1556              		.loc 1 741 0
 1557 03b0 FB68     		ldr	r3, [r7, #12]
 1558 03b2 1B89     		ldrh	r3, [r3, #8]
 1559 03b4 2C22     		movs	r2, #44
 1560 03b6 BA18     		adds	r2, r7, r2
 1561 03b8 1288     		ldrh	r2, [r2]
 1562 03ba D243     		mvns	r2, r2
 1563 03bc 92B2     		uxth	r2, r2
 1564 03be 1340     		ands	r3, r2
 1565 03c0 9AB2     		uxth	r2, r3
 1566 03c2 FB68     		ldr	r3, [r7, #12]
 1567 03c4 1A81     		strh	r2, [r3, #8]
 742:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  break;
 1568              		.loc 1 742 0
 1569 03c6 12E0     		b	.L95
 1570              	.L97:
 743:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 744:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #if OS_FLAG_WAIT_CLR_EN > 0u
 745:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****             case OS_FLAG_WAIT_CLR_ALL:
 746:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****             case OS_FLAG_WAIT_CLR_ANY:                     /* Set   ONLY the flags we got          
 747:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  pgrp->OSFlagFlags |=  flags_rdy;
 1571              		.loc 1 747 0
 1572 03c8 FB68     		ldr	r3, [r7, #12]
 1573 03ca 1A89     		ldrh	r2, [r3, #8]
 1574 03cc 2C23     		movs	r3, #44
 1575 03ce FB18     		adds	r3, r7, r3
 1576 03d0 1B88     		ldrh	r3, [r3]
 1577 03d2 1343     		orrs	r3, r2
 1578 03d4 9AB2     		uxth	r2, r3
 1579 03d6 FB68     		ldr	r3, [r7, #12]
 1580 03d8 1A81     		strh	r2, [r3, #8]
 748:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  break;
 1581              		.loc 1 748 0
 1582 03da 08E0     		b	.L95
 1583              	.L96:
 749:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #endif
 750:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****             default:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 42


 751:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  OS_EXIT_CRITICAL();
 1584              		.loc 1 751 0
 1585 03dc 3B6B     		ldr	r3, [r7, #48]
 1586 03de 1800     		movs	r0, r3
 1587 03e0 FFF7FEFF 		bl	OS_CPU_SR_Restore
 752:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  *perr = OS_ERR_FLAG_WAIT_TYPE;
 1588              		.loc 1 752 0
 1589 03e4 BB6C     		ldr	r3, [r7, #72]
 1590 03e6 6F22     		movs	r2, #111
 1591 03e8 1A70     		strb	r2, [r3]
 753:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  return ((OS_FLAGS)0);
 1592              		.loc 1 753 0
 1593 03ea 0023     		movs	r3, #0
 1594 03ec 09E0     		b	.L99
 1595              	.L95:
 754:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         }
 755:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     }
 756:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     OS_EXIT_CRITICAL();
 1596              		.loc 1 756 0
 1597 03ee 3B6B     		ldr	r3, [r7, #48]
 1598 03f0 1800     		movs	r0, r3
 1599 03f2 FFF7FEFF 		bl	OS_CPU_SR_Restore
 757:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     *perr = OS_ERR_NONE;                                   /* Event(s) must have occurred          
 1600              		.loc 1 757 0
 1601 03f6 BB6C     		ldr	r3, [r7, #72]
 1602 03f8 0022     		movs	r2, #0
 1603 03fa 1A70     		strb	r2, [r3]
 758:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     return (flags_rdy);
 1604              		.loc 1 758 0
 1605 03fc 2C23     		movs	r3, #44
 1606 03fe FB18     		adds	r3, r7, r3
 1607 0400 1B88     		ldrh	r3, [r3]
 1608              	.L99:
 759:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** }
 1609              		.loc 1 759 0 discriminator 1
 1610 0402 1800     		movs	r0, r3
 1611 0404 BD46     		mov	sp, r7
 1612 0406 0FB0     		add	sp, sp, #60
 1613              		@ sp needed
 1614 0408 90BD     		pop	{r4, r7, pc}
 1615              	.L104:
 1616 040a C046     		.align	2
 1617              	.L103:
 1618 040c 00000000 		.word	OSTCBCur
 1619              		.cfi_endproc
 1620              	.LFE6:
 1621              		.size	OSFlagPend, .-OSFlagPend
 1622              		.section	.text.OSFlagPendGetFlagsRdy,"ax",%progbits
 1623              		.align	2
 1624              		.global	OSFlagPendGetFlagsRdy
 1625              		.code	16
 1626              		.thumb_func
 1627              		.type	OSFlagPendGetFlagsRdy, %function
 1628              	OSFlagPendGetFlagsRdy:
 1629              	.LFB7:
 760:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** /*$PAGE*/
 761:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** /*
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 43


 762:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** ***************************************************************************************************
 763:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                              GET FLAGS WHO CAUSED TASK TO BECOME READY
 764:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
 765:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * Description: This function is called to obtain the flags that caused the task to become ready to 
 766:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *              In other words, this function allows you to tell "Who done it!".
 767:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
 768:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * Arguments  : None
 769:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
 770:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * Returns    : The flags that caused the task to be ready.
 771:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
 772:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * Called from: Task ONLY
 773:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** ***************************************************************************************************
 774:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** */
 775:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 776:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** OS_FLAGS  OSFlagPendGetFlagsRdy (void)
 777:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** {
 1630              		.loc 1 777 0
 1631              		.cfi_startproc
 1632              		@ args = 0, pretend = 0, frame = 8
 1633              		@ frame_needed = 1, uses_anonymous_args = 0
 1634 0000 80B5     		push	{r7, lr}
 1635              		.cfi_def_cfa_offset 8
 1636              		.cfi_offset 7, -8
 1637              		.cfi_offset 14, -4
 1638 0002 82B0     		sub	sp, sp, #8
 1639              		.cfi_def_cfa_offset 16
 1640 0004 00AF     		add	r7, sp, #0
 1641              		.cfi_def_cfa_register 7
 778:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     OS_FLAGS      flags;
 779:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #if OS_CRITICAL_METHOD == 3u                               /* Allocate storage for CPU status regis
 780:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     OS_CPU_SR     cpu_sr = 0u;
 1642              		.loc 1 780 0
 1643 0006 0023     		movs	r3, #0
 1644 0008 7B60     		str	r3, [r7, #4]
 781:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #endif
 782:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 783:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 784:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 785:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     OS_ENTER_CRITICAL();
 1645              		.loc 1 785 0
 1646 000a FFF7FEFF 		bl	OS_CPU_SR_Save
 1647 000e 0300     		movs	r3, r0
 1648 0010 7B60     		str	r3, [r7, #4]
 786:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     flags = OSTCBCur->OSTCBFlagsRdy;
 1649              		.loc 1 786 0
 1650 0012 074B     		ldr	r3, .L107
 1651 0014 1A68     		ldr	r2, [r3]
 1652 0016 BB1C     		adds	r3, r7, #2
 1653 0018 928D     		ldrh	r2, [r2, #44]
 1654 001a 1A80     		strh	r2, [r3]
 787:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     OS_EXIT_CRITICAL();
 1655              		.loc 1 787 0
 1656 001c 7B68     		ldr	r3, [r7, #4]
 1657 001e 1800     		movs	r0, r3
 1658 0020 FFF7FEFF 		bl	OS_CPU_SR_Restore
 788:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     return (flags);
 1659              		.loc 1 788 0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 44


 1660 0024 BB1C     		adds	r3, r7, #2
 1661 0026 1B88     		ldrh	r3, [r3]
 789:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** }
 1662              		.loc 1 789 0
 1663 0028 1800     		movs	r0, r3
 1664 002a BD46     		mov	sp, r7
 1665 002c 02B0     		add	sp, sp, #8
 1666              		@ sp needed
 1667 002e 80BD     		pop	{r7, pc}
 1668              	.L108:
 1669              		.align	2
 1670              	.L107:
 1671 0030 00000000 		.word	OSTCBCur
 1672              		.cfi_endproc
 1673              	.LFE7:
 1674              		.size	OSFlagPendGetFlagsRdy, .-OSFlagPendGetFlagsRdy
 1675              		.section	.text.OSFlagPost,"ax",%progbits
 1676              		.align	2
 1677              		.global	OSFlagPost
 1678              		.code	16
 1679              		.thumb_func
 1680              		.type	OSFlagPost, %function
 1681              	OSFlagPost:
 1682              	.LFB8:
 790:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 791:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** /*$PAGE*/
 792:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** /*
 793:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** ***************************************************************************************************
 794:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                                       POST EVENT FLAG BIT(S)
 795:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
 796:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * Description: This function is called to set or clear some bits in an event flag group.  The bits 
 797:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *              set or clear are specified by a 'bit mask'.
 798:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
 799:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * Arguments  : pgrp          is a pointer to the desired event flag group.
 800:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
 801:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *              flags         If 'opt' (see below) is OS_FLAG_SET, each bit that is set in 'flags' w
 802:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            set the corresponding bit in the event flag group.  e.g. to set bits 0
 803:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            and 5 you would set 'flags' to:
 804:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
 805:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                                0x31     (note, bit 0 is least significant bit)
 806:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
 807:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            If 'opt' (see below) is OS_FLAG_CLR, each bit that is set in 'flags' w
 808:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            CLEAR the corresponding bit in the event flag group.  e.g. to clear bi
 809:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            4 and 5 you would specify 'flags' as:
 810:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
 811:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                                0x31     (note, bit 0 is least significant bit)
 812:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
 813:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *              opt           indicates whether the flags will be:
 814:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                                set     (OS_FLAG_SET) or
 815:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                                cleared (OS_FLAG_CLR)
 816:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
 817:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *              perr          is a pointer to an error code and can be:
 818:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            OS_ERR_NONE                The call was successfull
 819:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            OS_ERR_FLAG_INVALID_PGRP   You passed a NULL pointer
 820:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            OS_ERR_EVENT_TYPE          You are not pointing to an event flag group
 821:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            OS_ERR_FLAG_INVALID_OPT    You specified an invalid option
 822:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 45


 823:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * Returns    : the new value of the event flags bits that are still set.
 824:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
 825:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * Called From: Task or ISR
 826:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
 827:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * WARNING(s) : 1) The execution time of this function depends on the number of tasks waiting on the
 828:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                 flag group.
 829:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *              2) The amount of time interrupts are DISABLED depends on the number of tasks waiting
 830:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                 the event flag group.
 831:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** ***************************************************************************************************
 832:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** */
 833:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** OS_FLAGS  OSFlagPost (OS_FLAG_GRP  *pgrp,
 834:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                       OS_FLAGS      flags,
 835:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                       INT8U         opt,
 836:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                       INT8U        *perr)
 837:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** {
 1683              		.loc 1 837 0
 1684              		.cfi_startproc
 1685              		@ args = 0, pretend = 0, frame = 40
 1686              		@ frame_needed = 1, uses_anonymous_args = 0
 1687 0000 90B5     		push	{r4, r7, lr}
 1688              		.cfi_def_cfa_offset 12
 1689              		.cfi_offset 4, -12
 1690              		.cfi_offset 7, -8
 1691              		.cfi_offset 14, -4
 1692 0002 8BB0     		sub	sp, sp, #44
 1693              		.cfi_def_cfa_offset 56
 1694 0004 00AF     		add	r7, sp, #0
 1695              		.cfi_def_cfa_register 7
 1696 0006 F860     		str	r0, [r7, #12]
 1697 0008 0800     		movs	r0, r1
 1698 000a 1100     		movs	r1, r2
 1699 000c 7B60     		str	r3, [r7, #4]
 1700 000e 0A23     		movs	r3, #10
 1701 0010 FB18     		adds	r3, r7, r3
 1702 0012 021C     		adds	r2, r0, #0
 1703 0014 1A80     		strh	r2, [r3]
 1704 0016 0923     		movs	r3, #9
 1705 0018 FB18     		adds	r3, r7, r3
 1706 001a 0A1C     		adds	r2, r1, #0
 1707 001c 1A70     		strb	r2, [r3]
 838:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     OS_FLAG_NODE *pnode;
 839:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     BOOLEAN       sched;
 840:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     OS_FLAGS      flags_cur;
 841:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     OS_FLAGS      flags_rdy;
 842:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     BOOLEAN       rdy;
 843:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #if OS_CRITICAL_METHOD == 3u                         /* Allocate storage for CPU status register   
 844:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     OS_CPU_SR     cpu_sr = 0u;
 1708              		.loc 1 844 0
 1709 001e 0023     		movs	r3, #0
 1710 0020 FB61     		str	r3, [r7, #28]
 845:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #endif
 846:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 847:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 848:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 849:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #ifdef OS_SAFETY_CRITICAL
 850:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     if (perr == (INT8U *)0) {
 851:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 46


 852:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         return ((OS_FLAGS)0);
 853:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     }
 854:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #endif
 855:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 856:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #if OS_ARG_CHK_EN > 0u
 857:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     if (pgrp == (OS_FLAG_GRP *)0) {                  /* Validate 'pgrp'                            
 1711              		.loc 1 857 0
 1712 0022 FB68     		ldr	r3, [r7, #12]
 1713 0024 002B     		cmp	r3, #0
 1714 0026 04D1     		bne	.L110
 858:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         *perr = OS_ERR_FLAG_INVALID_PGRP;
 1715              		.loc 1 858 0
 1716 0028 7B68     		ldr	r3, [r7, #4]
 1717 002a 6E22     		movs	r2, #110
 1718 002c 1A70     		strb	r2, [r3]
 859:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         return ((OS_FLAGS)0);
 1719              		.loc 1 859 0
 1720 002e 0023     		movs	r3, #0
 1721 0030 15E1     		b	.L111
 1722              	.L110:
 860:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     }
 861:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #endif
 862:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     if (pgrp->OSFlagType != OS_EVENT_TYPE_FLAG) {    /* Make sure we are pointing to an event flag 
 1723              		.loc 1 862 0
 1724 0032 FB68     		ldr	r3, [r7, #12]
 1725 0034 1B78     		ldrb	r3, [r3]
 1726 0036 052B     		cmp	r3, #5
 1727 0038 04D0     		beq	.L112
 863:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         *perr = OS_ERR_EVENT_TYPE;
 1728              		.loc 1 863 0
 1729 003a 7B68     		ldr	r3, [r7, #4]
 1730 003c 0122     		movs	r2, #1
 1731 003e 1A70     		strb	r2, [r3]
 864:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         return ((OS_FLAGS)0);
 1732              		.loc 1 864 0
 1733 0040 0023     		movs	r3, #0
 1734 0042 0CE1     		b	.L111
 1735              	.L112:
 865:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     }
 866:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** /*$PAGE*/
 867:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     OS_ENTER_CRITICAL();
 1736              		.loc 1 867 0
 1737 0044 FFF7FEFF 		bl	OS_CPU_SR_Save
 1738 0048 0300     		movs	r3, r0
 1739 004a FB61     		str	r3, [r7, #28]
 868:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     switch (opt) {
 1740              		.loc 1 868 0
 1741 004c 0923     		movs	r3, #9
 1742 004e FB18     		adds	r3, r7, r3
 1743 0050 1B78     		ldrb	r3, [r3]
 1744 0052 002B     		cmp	r3, #0
 1745 0054 02D0     		beq	.L114
 1746 0056 012B     		cmp	r3, #1
 1747 0058 0CD0     		beq	.L115
 1748 005a 15E0     		b	.L131
 1749              	.L114:
 869:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         case OS_FLAG_CLR:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 47


 870:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              pgrp->OSFlagFlags &= (OS_FLAGS)~flags;  /* Clear the flags specified in the group     
 1750              		.loc 1 870 0
 1751 005c FB68     		ldr	r3, [r7, #12]
 1752 005e 1B89     		ldrh	r3, [r3, #8]
 1753 0060 0A22     		movs	r2, #10
 1754 0062 BA18     		adds	r2, r7, r2
 1755 0064 1288     		ldrh	r2, [r2]
 1756 0066 D243     		mvns	r2, r2
 1757 0068 92B2     		uxth	r2, r2
 1758 006a 1340     		ands	r3, r2
 1759 006c 9AB2     		uxth	r2, r3
 1760 006e FB68     		ldr	r3, [r7, #12]
 1761 0070 1A81     		strh	r2, [r3, #8]
 871:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              break;
 1762              		.loc 1 871 0
 1763 0072 12E0     		b	.L116
 1764              	.L115:
 872:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 873:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         case OS_FLAG_SET:
 874:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              pgrp->OSFlagFlags |=  flags;            /* Set   the flags specified in the group     
 1765              		.loc 1 874 0
 1766 0074 FB68     		ldr	r3, [r7, #12]
 1767 0076 1A89     		ldrh	r2, [r3, #8]
 1768 0078 0A23     		movs	r3, #10
 1769 007a FB18     		adds	r3, r7, r3
 1770 007c 1B88     		ldrh	r3, [r3]
 1771 007e 1343     		orrs	r3, r2
 1772 0080 9AB2     		uxth	r2, r3
 1773 0082 FB68     		ldr	r3, [r7, #12]
 1774 0084 1A81     		strh	r2, [r3, #8]
 875:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              break;
 1775              		.loc 1 875 0
 1776 0086 08E0     		b	.L116
 1777              	.L131:
 876:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 877:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         default:
 878:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              OS_EXIT_CRITICAL();                     /* INVALID option                             
 1778              		.loc 1 878 0
 1779 0088 FB69     		ldr	r3, [r7, #28]
 1780 008a 1800     		movs	r0, r3
 1781 008c FFF7FEFF 		bl	OS_CPU_SR_Restore
 879:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              *perr = OS_ERR_FLAG_INVALID_OPT;
 1782              		.loc 1 879 0
 1783 0090 7B68     		ldr	r3, [r7, #4]
 1784 0092 7122     		movs	r2, #113
 1785 0094 1A70     		strb	r2, [r3]
 880:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****              return ((OS_FLAGS)0);
 1786              		.loc 1 880 0
 1787 0096 0023     		movs	r3, #0
 1788 0098 E1E0     		b	.L111
 1789              	.L116:
 881:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     }
 882:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     sched = OS_FALSE;                                /* Indicate that we don't need rescheduling   
 1790              		.loc 1 882 0
 1791 009a 2323     		movs	r3, #35
 1792 009c FB18     		adds	r3, r7, r3
 1793 009e 0022     		movs	r2, #0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 48


 1794 00a0 1A70     		strb	r2, [r3]
 883:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     pnode = (OS_FLAG_NODE *)pgrp->OSFlagWaitList;
 1795              		.loc 1 883 0
 1796 00a2 FB68     		ldr	r3, [r7, #12]
 1797 00a4 5B68     		ldr	r3, [r3, #4]
 1798 00a6 7B62     		str	r3, [r7, #36]
 884:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     while (pnode != (OS_FLAG_NODE *)0) {             /* Go through all tasks waiting on event flag(
 1799              		.loc 1 884 0
 1800 00a8 B7E0     		b	.L117
 1801              	.L129:
 885:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         switch (pnode->OSFlagNodeWaitType) {
 1802              		.loc 1 885 0
 1803 00aa 7B6A     		ldr	r3, [r7, #36]
 1804 00ac 9B7C     		ldrb	r3, [r3, #18]
 1805 00ae 012B     		cmp	r3, #1
 1806 00b0 00D1     		bne	.LCB1611
 1807 00b2 7AE0     		b	.L119	@long jump
 1808              	.LCB1611:
 1809 00b4 02DC     		bgt	.L120
 1810 00b6 002B     		cmp	r3, #0
 1811 00b8 50D0     		beq	.L121
 1812 00ba 9BE0     		b	.L118
 1813              	.L120:
 1814 00bc 022B     		cmp	r3, #2
 1815 00be 02D0     		beq	.L122
 1816 00c0 032B     		cmp	r3, #3
 1817 00c2 27D0     		beq	.L123
 1818 00c4 96E0     		b	.L118
 1819              	.L122:
 886:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****             case OS_FLAG_WAIT_SET_ALL:               /* See if all req. flags are set for current n
 887:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  flags_rdy = (OS_FLAGS)(pgrp->OSFlagFlags & pnode->OSFlagNodeFlags);
 1820              		.loc 1 887 0
 1821 00c6 FB68     		ldr	r3, [r7, #12]
 1822 00c8 1A89     		ldrh	r2, [r3, #8]
 1823 00ca 7B6A     		ldr	r3, [r7, #36]
 1824 00cc 198A     		ldrh	r1, [r3, #16]
 1825 00ce 1A23     		movs	r3, #26
 1826 00d0 FB18     		adds	r3, r7, r3
 1827 00d2 0A40     		ands	r2, r1
 1828 00d4 1A80     		strh	r2, [r3]
 888:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  if (flags_rdy == pnode->OSFlagNodeFlags) {   /* Make task RTR, event(s) Rx'd      
 1829              		.loc 1 888 0
 1830 00d6 7B6A     		ldr	r3, [r7, #36]
 1831 00d8 1B8A     		ldrh	r3, [r3, #16]
 1832 00da 1A22     		movs	r2, #26
 1833 00dc BA18     		adds	r2, r7, r2
 1834 00de 1288     		ldrh	r2, [r2]
 1835 00e0 9A42     		cmp	r2, r3
 1836 00e2 00D0     		beq	.LCB1642
 1837 00e4 8FE0     		b	.L132	@long jump
 1838              	.LCB1642:
 889:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                      rdy = OS_FlagTaskRdy(pnode, flags_rdy, OS_STAT_PEND_OK);  
 1839              		.loc 1 889 0
 1840 00e6 1923     		movs	r3, #25
 1841 00e8 FC18     		adds	r4, r7, r3
 1842 00ea 1A23     		movs	r3, #26
 1843 00ec FB18     		adds	r3, r7, r3
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 49


 1844 00ee 1988     		ldrh	r1, [r3]
 1845 00f0 7B6A     		ldr	r3, [r7, #36]
 1846 00f2 0022     		movs	r2, #0
 1847 00f4 1800     		movs	r0, r3
 1848 00f6 FFF7FEFF 		bl	OS_FlagTaskRdy
 1849 00fa 0300     		movs	r3, r0
 1850 00fc 2370     		strb	r3, [r4]
 890:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                      if (rdy == OS_TRUE) {
 1851              		.loc 1 890 0
 1852 00fe 1923     		movs	r3, #25
 1853 0100 FB18     		adds	r3, r7, r3
 1854 0102 1B78     		ldrb	r3, [r3]
 1855 0104 012B     		cmp	r3, #1
 1856 0106 00D0     		beq	.LCB1658
 1857 0108 7DE0     		b	.L132	@long jump
 1858              	.LCB1658:
 891:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                          sched = OS_TRUE;                     /* When done we will reschedule      
 1859              		.loc 1 891 0
 1860 010a 2323     		movs	r3, #35
 1861 010c FB18     		adds	r3, r7, r3
 1862 010e 0122     		movs	r2, #1
 1863 0110 1A70     		strb	r2, [r3]
 892:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                      }
 893:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  }
 894:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  break;
 1864              		.loc 1 894 0
 1865 0112 78E0     		b	.L132
 1866              	.L123:
 895:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 896:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****             case OS_FLAG_WAIT_SET_ANY:               /* See if any flag set                        
 897:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  flags_rdy = (OS_FLAGS)(pgrp->OSFlagFlags & pnode->OSFlagNodeFlags);
 1867              		.loc 1 897 0
 1868 0114 FB68     		ldr	r3, [r7, #12]
 1869 0116 1A89     		ldrh	r2, [r3, #8]
 1870 0118 7B6A     		ldr	r3, [r7, #36]
 1871 011a 198A     		ldrh	r1, [r3, #16]
 1872 011c 1A23     		movs	r3, #26
 1873 011e FB18     		adds	r3, r7, r3
 1874 0120 0A40     		ands	r2, r1
 1875 0122 1A80     		strh	r2, [r3]
 898:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  if (flags_rdy != (OS_FLAGS)0) {              /* Make task RTR, event(s) Rx'd      
 1876              		.loc 1 898 0
 1877 0124 1A23     		movs	r3, #26
 1878 0126 FB18     		adds	r3, r7, r3
 1879 0128 1B88     		ldrh	r3, [r3]
 1880 012a 002B     		cmp	r3, #0
 1881 012c 00D1     		bne	.LCB1679
 1882 012e 6CE0     		b	.L133	@long jump
 1883              	.LCB1679:
 899:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                      rdy = OS_FlagTaskRdy(pnode, flags_rdy, OS_STAT_PEND_OK);  
 1884              		.loc 1 899 0
 1885 0130 1923     		movs	r3, #25
 1886 0132 FC18     		adds	r4, r7, r3
 1887 0134 1A23     		movs	r3, #26
 1888 0136 FB18     		adds	r3, r7, r3
 1889 0138 1988     		ldrh	r1, [r3]
 1890 013a 7B6A     		ldr	r3, [r7, #36]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 50


 1891 013c 0022     		movs	r2, #0
 1892 013e 1800     		movs	r0, r3
 1893 0140 FFF7FEFF 		bl	OS_FlagTaskRdy
 1894 0144 0300     		movs	r3, r0
 1895 0146 2370     		strb	r3, [r4]
 900:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                      if (rdy == OS_TRUE) {
 1896              		.loc 1 900 0
 1897 0148 1923     		movs	r3, #25
 1898 014a FB18     		adds	r3, r7, r3
 1899 014c 1B78     		ldrb	r3, [r3]
 1900 014e 012B     		cmp	r3, #1
 1901 0150 5BD1     		bne	.L133
 901:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                          sched = OS_TRUE;                     /* When done we will reschedule      
 1902              		.loc 1 901 0
 1903 0152 2323     		movs	r3, #35
 1904 0154 FB18     		adds	r3, r7, r3
 1905 0156 0122     		movs	r2, #1
 1906 0158 1A70     		strb	r2, [r3]
 902:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                      }
 903:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  }
 904:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  break;
 1907              		.loc 1 904 0
 1908 015a 56E0     		b	.L133
 1909              	.L121:
 905:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 906:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #if OS_FLAG_WAIT_CLR_EN > 0u
 907:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****             case OS_FLAG_WAIT_CLR_ALL:               /* See if all req. flags are set for current n
 908:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  flags_rdy = (OS_FLAGS)~pgrp->OSFlagFlags & pnode->OSFlagNodeFlags;
 1910              		.loc 1 908 0
 1911 015c FB68     		ldr	r3, [r7, #12]
 1912 015e 1B89     		ldrh	r3, [r3, #8]
 1913 0160 DB43     		mvns	r3, r3
 1914 0162 9AB2     		uxth	r2, r3
 1915 0164 7B6A     		ldr	r3, [r7, #36]
 1916 0166 198A     		ldrh	r1, [r3, #16]
 1917 0168 1A23     		movs	r3, #26
 1918 016a FB18     		adds	r3, r7, r3
 1919 016c 0A40     		ands	r2, r1
 1920 016e 1A80     		strh	r2, [r3]
 909:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  if (flags_rdy == pnode->OSFlagNodeFlags) {   /* Make task RTR, event(s) Rx'd      
 1921              		.loc 1 909 0
 1922 0170 7B6A     		ldr	r3, [r7, #36]
 1923 0172 1B8A     		ldrh	r3, [r3, #16]
 1924 0174 1A22     		movs	r2, #26
 1925 0176 BA18     		adds	r2, r7, r2
 1926 0178 1288     		ldrh	r2, [r2]
 1927 017a 9A42     		cmp	r2, r3
 1928 017c 47D1     		bne	.L134
 910:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                      rdy = OS_FlagTaskRdy(pnode, flags_rdy, OS_STAT_PEND_OK);  
 1929              		.loc 1 910 0
 1930 017e 1923     		movs	r3, #25
 1931 0180 FC18     		adds	r4, r7, r3
 1932 0182 1A23     		movs	r3, #26
 1933 0184 FB18     		adds	r3, r7, r3
 1934 0186 1988     		ldrh	r1, [r3]
 1935 0188 7B6A     		ldr	r3, [r7, #36]
 1936 018a 0022     		movs	r2, #0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 51


 1937 018c 1800     		movs	r0, r3
 1938 018e FFF7FEFF 		bl	OS_FlagTaskRdy
 1939 0192 0300     		movs	r3, r0
 1940 0194 2370     		strb	r3, [r4]
 911:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                      if (rdy == OS_TRUE) {
 1941              		.loc 1 911 0
 1942 0196 1923     		movs	r3, #25
 1943 0198 FB18     		adds	r3, r7, r3
 1944 019a 1B78     		ldrb	r3, [r3]
 1945 019c 012B     		cmp	r3, #1
 1946 019e 36D1     		bne	.L134
 912:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                          sched = OS_TRUE;                     /* When done we will reschedule      
 1947              		.loc 1 912 0
 1948 01a0 2323     		movs	r3, #35
 1949 01a2 FB18     		adds	r3, r7, r3
 1950 01a4 0122     		movs	r2, #1
 1951 01a6 1A70     		strb	r2, [r3]
 913:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                      }
 914:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  }
 915:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  break;
 1952              		.loc 1 915 0
 1953 01a8 31E0     		b	.L134
 1954              	.L119:
 916:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 917:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****             case OS_FLAG_WAIT_CLR_ANY:               /* See if any flag set                        
 918:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  flags_rdy = (OS_FLAGS)~pgrp->OSFlagFlags & pnode->OSFlagNodeFlags;
 1955              		.loc 1 918 0
 1956 01aa FB68     		ldr	r3, [r7, #12]
 1957 01ac 1B89     		ldrh	r3, [r3, #8]
 1958 01ae DB43     		mvns	r3, r3
 1959 01b0 9AB2     		uxth	r2, r3
 1960 01b2 7B6A     		ldr	r3, [r7, #36]
 1961 01b4 198A     		ldrh	r1, [r3, #16]
 1962 01b6 1A23     		movs	r3, #26
 1963 01b8 FB18     		adds	r3, r7, r3
 1964 01ba 0A40     		ands	r2, r1
 1965 01bc 1A80     		strh	r2, [r3]
 919:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  if (flags_rdy != (OS_FLAGS)0) {              /* Make task RTR, event(s) Rx'd      
 1966              		.loc 1 919 0
 1967 01be 1A23     		movs	r3, #26
 1968 01c0 FB18     		adds	r3, r7, r3
 1969 01c2 1B88     		ldrh	r3, [r3]
 1970 01c4 002B     		cmp	r3, #0
 1971 01c6 24D0     		beq	.L135
 920:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                      rdy = OS_FlagTaskRdy(pnode, flags_rdy, OS_STAT_PEND_OK);  
 1972              		.loc 1 920 0
 1973 01c8 1923     		movs	r3, #25
 1974 01ca FC18     		adds	r4, r7, r3
 1975 01cc 1A23     		movs	r3, #26
 1976 01ce FB18     		adds	r3, r7, r3
 1977 01d0 1988     		ldrh	r1, [r3]
 1978 01d2 7B6A     		ldr	r3, [r7, #36]
 1979 01d4 0022     		movs	r2, #0
 1980 01d6 1800     		movs	r0, r3
 1981 01d8 FFF7FEFF 		bl	OS_FlagTaskRdy
 1982 01dc 0300     		movs	r3, r0
 1983 01de 2370     		strb	r3, [r4]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 52


 921:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                      if (rdy == OS_TRUE) {
 1984              		.loc 1 921 0
 1985 01e0 1923     		movs	r3, #25
 1986 01e2 FB18     		adds	r3, r7, r3
 1987 01e4 1B78     		ldrb	r3, [r3]
 1988 01e6 012B     		cmp	r3, #1
 1989 01e8 13D1     		bne	.L135
 922:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                          sched = OS_TRUE;                     /* When done we will reschedule      
 1990              		.loc 1 922 0
 1991 01ea 2323     		movs	r3, #35
 1992 01ec FB18     		adds	r3, r7, r3
 1993 01ee 0122     		movs	r2, #1
 1994 01f0 1A70     		strb	r2, [r3]
 923:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                      }
 924:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  }
 925:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  break;
 1995              		.loc 1 925 0
 1996 01f2 0EE0     		b	.L135
 1997              	.L118:
 926:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #endif
 927:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****             default:
 928:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  OS_EXIT_CRITICAL();
 1998              		.loc 1 928 0
 1999 01f4 FB69     		ldr	r3, [r7, #28]
 2000 01f6 1800     		movs	r0, r3
 2001 01f8 FFF7FEFF 		bl	OS_CPU_SR_Restore
 929:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  *perr = OS_ERR_FLAG_WAIT_TYPE;
 2002              		.loc 1 929 0
 2003 01fc 7B68     		ldr	r3, [r7, #4]
 2004 01fe 6F22     		movs	r2, #111
 2005 0200 1A70     		strb	r2, [r3]
 930:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                  return ((OS_FLAGS)0);
 2006              		.loc 1 930 0
 2007 0202 0023     		movs	r3, #0
 2008 0204 2BE0     		b	.L111
 2009              	.L132:
 894:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 2010              		.loc 1 894 0
 2011 0206 C046     		nop
 2012 0208 04E0     		b	.L125
 2013              	.L133:
 904:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 2014              		.loc 1 904 0
 2015 020a C046     		nop
 2016 020c 02E0     		b	.L125
 2017              	.L134:
 915:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 2018              		.loc 1 915 0
 2019 020e C046     		nop
 2020 0210 00E0     		b	.L125
 2021              	.L135:
 925:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #endif
 2022              		.loc 1 925 0
 2023 0212 C046     		nop
 2024              	.L125:
 931:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         }
 932:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         pnode = (OS_FLAG_NODE *)pnode->OSFlagNodeNext; /* Point to next task waiting for event flag
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 53


 2025              		.loc 1 932 0
 2026 0214 7B6A     		ldr	r3, [r7, #36]
 2027 0216 1B68     		ldr	r3, [r3]
 2028 0218 7B62     		str	r3, [r7, #36]
 2029              	.L117:
 884:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         switch (pnode->OSFlagNodeWaitType) {
 2030              		.loc 1 884 0
 2031 021a 7B6A     		ldr	r3, [r7, #36]
 2032 021c 002B     		cmp	r3, #0
 2033 021e 00D0     		beq	.LCB1820
 2034 0220 43E7     		b	.L129	@long jump
 2035              	.LCB1820:
 933:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     }
 934:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     OS_EXIT_CRITICAL();
 2036              		.loc 1 934 0
 2037 0222 FB69     		ldr	r3, [r7, #28]
 2038 0224 1800     		movs	r0, r3
 2039 0226 FFF7FEFF 		bl	OS_CPU_SR_Restore
 935:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     if (sched == OS_TRUE) {
 2040              		.loc 1 935 0
 2041 022a 2323     		movs	r3, #35
 2042 022c FB18     		adds	r3, r7, r3
 2043 022e 1B78     		ldrb	r3, [r3]
 2044 0230 012B     		cmp	r3, #1
 2045 0232 01D1     		bne	.L130
 936:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         OS_Sched();
 2046              		.loc 1 936 0
 2047 0234 FFF7FEFF 		bl	OS_Sched
 2048              	.L130:
 937:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     }
 938:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     OS_ENTER_CRITICAL();
 2049              		.loc 1 938 0
 2050 0238 FFF7FEFF 		bl	OS_CPU_SR_Save
 2051 023c 0300     		movs	r3, r0
 2052 023e FB61     		str	r3, [r7, #28]
 939:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     flags_cur = pgrp->OSFlagFlags;
 2053              		.loc 1 939 0
 2054 0240 1623     		movs	r3, #22
 2055 0242 FB18     		adds	r3, r7, r3
 2056 0244 FA68     		ldr	r2, [r7, #12]
 2057 0246 1289     		ldrh	r2, [r2, #8]
 2058 0248 1A80     		strh	r2, [r3]
 940:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     OS_EXIT_CRITICAL();
 2059              		.loc 1 940 0
 2060 024a FB69     		ldr	r3, [r7, #28]
 2061 024c 1800     		movs	r0, r3
 2062 024e FFF7FEFF 		bl	OS_CPU_SR_Restore
 941:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     *perr     = OS_ERR_NONE;
 2063              		.loc 1 941 0
 2064 0252 7B68     		ldr	r3, [r7, #4]
 2065 0254 0022     		movs	r2, #0
 2066 0256 1A70     		strb	r2, [r3]
 942:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     return (flags_cur);
 2067              		.loc 1 942 0
 2068 0258 1623     		movs	r3, #22
 2069 025a FB18     		adds	r3, r7, r3
 2070 025c 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 54


 2071              	.L111:
 943:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** }
 2072              		.loc 1 943 0
 2073 025e 1800     		movs	r0, r3
 2074 0260 BD46     		mov	sp, r7
 2075 0262 0BB0     		add	sp, sp, #44
 2076              		@ sp needed
 2077 0264 90BD     		pop	{r4, r7, pc}
 2078              		.cfi_endproc
 2079              	.LFE8:
 2080              		.size	OSFlagPost, .-OSFlagPost
 2081 0266 C046     		.section	.text.OSFlagQuery,"ax",%progbits
 2082              		.align	2
 2083              		.global	OSFlagQuery
 2084              		.code	16
 2085              		.thumb_func
 2086              		.type	OSFlagQuery, %function
 2087              	OSFlagQuery:
 2088              	.LFB9:
 944:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** /*$PAGE*/
 945:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** /*
 946:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** ***************************************************************************************************
 947:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                                          QUERY EVENT FLAG
 948:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
 949:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * Description: This function is used to check the value of the event flag group.
 950:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
 951:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * Arguments  : pgrp         is a pointer to the desired event flag group.
 952:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
 953:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *              perr          is a pointer to an error code returned to the called:
 954:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            OS_ERR_NONE                The call was successfull
 955:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            OS_ERR_FLAG_INVALID_PGRP   You passed a NULL pointer
 956:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            OS_ERR_EVENT_TYPE          You are not pointing to an event flag group
 957:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
 958:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * Returns    : The current value of the event flag group.
 959:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
 960:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * Called From: Task or ISR
 961:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** ***************************************************************************************************
 962:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** */
 963:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 964:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #if OS_FLAG_QUERY_EN > 0u
 965:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** OS_FLAGS  OSFlagQuery (OS_FLAG_GRP  *pgrp,
 966:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                        INT8U        *perr)
 967:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** {
 2089              		.loc 1 967 0
 2090              		.cfi_startproc
 2091              		@ args = 0, pretend = 0, frame = 16
 2092              		@ frame_needed = 1, uses_anonymous_args = 0
 2093 0000 80B5     		push	{r7, lr}
 2094              		.cfi_def_cfa_offset 8
 2095              		.cfi_offset 7, -8
 2096              		.cfi_offset 14, -4
 2097 0002 84B0     		sub	sp, sp, #16
 2098              		.cfi_def_cfa_offset 24
 2099 0004 00AF     		add	r7, sp, #0
 2100              		.cfi_def_cfa_register 7
 2101 0006 7860     		str	r0, [r7, #4]
 2102 0008 3960     		str	r1, [r7]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 55


 968:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     OS_FLAGS   flags;
 969:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #if OS_CRITICAL_METHOD == 3u                      /* Allocate storage for CPU status register      
 970:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     OS_CPU_SR  cpu_sr = 0u;
 2103              		.loc 1 970 0
 2104 000a 0023     		movs	r3, #0
 2105 000c FB60     		str	r3, [r7, #12]
 971:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #endif
 972:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 973:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 974:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 975:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #ifdef OS_SAFETY_CRITICAL
 976:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     if (perr == (INT8U *)0) {
 977:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
 978:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         return ((OS_FLAGS)0);
 979:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     }
 980:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #endif
 981:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
 982:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #if OS_ARG_CHK_EN > 0u
 983:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     if (pgrp == (OS_FLAG_GRP *)0) {               /* Validate 'pgrp'                               
 2106              		.loc 1 983 0
 2107 000e 7B68     		ldr	r3, [r7, #4]
 2108 0010 002B     		cmp	r3, #0
 2109 0012 04D1     		bne	.L137
 984:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         *perr = OS_ERR_FLAG_INVALID_PGRP;
 2110              		.loc 1 984 0
 2111 0014 3B68     		ldr	r3, [r7]
 2112 0016 6E22     		movs	r2, #110
 2113 0018 1A70     		strb	r2, [r3]
 985:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         return ((OS_FLAGS)0);
 2114              		.loc 1 985 0
 2115 001a 0023     		movs	r3, #0
 2116 001c 1BE0     		b	.L138
 2117              	.L137:
 986:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     }
 987:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #endif
 988:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     if (pgrp->OSFlagType != OS_EVENT_TYPE_FLAG) { /* Validate event block type                     
 2118              		.loc 1 988 0
 2119 001e 7B68     		ldr	r3, [r7, #4]
 2120 0020 1B78     		ldrb	r3, [r3]
 2121 0022 052B     		cmp	r3, #5
 2122 0024 04D0     		beq	.L139
 989:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         *perr = OS_ERR_EVENT_TYPE;
 2123              		.loc 1 989 0
 2124 0026 3B68     		ldr	r3, [r7]
 2125 0028 0122     		movs	r2, #1
 2126 002a 1A70     		strb	r2, [r3]
 990:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         return ((OS_FLAGS)0);
 2127              		.loc 1 990 0
 2128 002c 0023     		movs	r3, #0
 2129 002e 12E0     		b	.L138
 2130              	.L139:
 991:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     }
 992:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     OS_ENTER_CRITICAL();
 2131              		.loc 1 992 0
 2132 0030 FFF7FEFF 		bl	OS_CPU_SR_Save
 2133 0034 0300     		movs	r3, r0
 2134 0036 FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 56


 993:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     flags = pgrp->OSFlagFlags;
 2135              		.loc 1 993 0
 2136 0038 0A23     		movs	r3, #10
 2137 003a FB18     		adds	r3, r7, r3
 2138 003c 7A68     		ldr	r2, [r7, #4]
 2139 003e 1289     		ldrh	r2, [r2, #8]
 2140 0040 1A80     		strh	r2, [r3]
 994:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     OS_EXIT_CRITICAL();
 2141              		.loc 1 994 0
 2142 0042 FB68     		ldr	r3, [r7, #12]
 2143 0044 1800     		movs	r0, r3
 2144 0046 FFF7FEFF 		bl	OS_CPU_SR_Restore
 995:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     *perr = OS_ERR_NONE;
 2145              		.loc 1 995 0
 2146 004a 3B68     		ldr	r3, [r7]
 2147 004c 0022     		movs	r2, #0
 2148 004e 1A70     		strb	r2, [r3]
 996:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     return (flags);                               /* Return the current value of the event flags   
 2149              		.loc 1 996 0
 2150 0050 0A23     		movs	r3, #10
 2151 0052 FB18     		adds	r3, r7, r3
 2152 0054 1B88     		ldrh	r3, [r3]
 2153              	.L138:
 997:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** }
 2154              		.loc 1 997 0
 2155 0056 1800     		movs	r0, r3
 2156 0058 BD46     		mov	sp, r7
 2157 005a 04B0     		add	sp, sp, #16
 2158              		@ sp needed
 2159 005c 80BD     		pop	{r7, pc}
 2160              		.cfi_endproc
 2161              	.LFE9:
 2162              		.size	OSFlagQuery, .-OSFlagQuery
 2163 005e C046     		.section	.text.OS_FlagBlock,"ax",%progbits
 2164              		.align	2
 2165              		.code	16
 2166              		.thumb_func
 2167              		.type	OS_FlagBlock, %function
 2168              	OS_FlagBlock:
 2169              	.LFB10:
 998:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #endif
 999:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
1000:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** /*$PAGE*/
1001:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** /*
1002:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** ***************************************************************************************************
1003:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                     SUSPEND TASK UNTIL EVENT FLAG(s) RECEIVED OR TIMEOUT OCCURS
1004:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
1005:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * Description: This function is internal to uC/OS-II and is used to put a task to sleep until the d
1006:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *              event flag bit(s) are set.
1007:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
1008:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * Arguments  : pgrp          is a pointer to the desired event flag group.
1009:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
1010:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *              pnode         is a pointer to a structure which contains data about the task waiting
1011:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            event flag bit(s) to be set.
1012:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
1013:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *              flags         Is a bit pattern indicating which bit(s) (i.e. flags) you wish to chec
1014:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            The bits you want are specified by setting the corresponding bits in
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 57


1015:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            'flags'.  e.g. if your application wants to wait for bits 0 and 1 then
1016:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            'flags' would contain 0x03.
1017:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
1018:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *              wait_type     specifies whether you want ALL bits to be set/cleared or ANY of the bi
1019:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            to be set/cleared.
1020:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            You can specify the following argument:
1021:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
1022:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            OS_FLAG_WAIT_CLR_ALL   You will check ALL bits in 'mask' to be clear (
1023:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            OS_FLAG_WAIT_CLR_ANY   You will check ANY bit  in 'mask' to be clear (
1024:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            OS_FLAG_WAIT_SET_ALL   You will check ALL bits in 'mask' to be set   (
1025:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            OS_FLAG_WAIT_SET_ANY   You will check ANY bit  in 'mask' to be set   (
1026:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
1027:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *              timeout       is the desired amount of time that the task will wait for the event fl
1028:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            bit(s) to be set.
1029:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
1030:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * Returns    : none
1031:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
1032:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * Called by  : OSFlagPend()  OS_FLAG.C
1033:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
1034:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * Note(s)    : This function is INTERNAL to uC/OS-II and your application should not call it.
1035:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** ***************************************************************************************************
1036:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** */
1037:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
1038:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** static  void  OS_FlagBlock (OS_FLAG_GRP  *pgrp,
1039:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                             OS_FLAG_NODE *pnode,
1040:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                             OS_FLAGS      flags,
1041:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                             INT8U         wait_type,
1042:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                             INT32U        timeout)
1043:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** {
 2170              		.loc 1 1043 0
 2171              		.cfi_startproc
 2172              		@ args = 4, pretend = 0, frame = 24
 2173              		@ frame_needed = 1, uses_anonymous_args = 0
 2174 0000 80B5     		push	{r7, lr}
 2175              		.cfi_def_cfa_offset 8
 2176              		.cfi_offset 7, -8
 2177              		.cfi_offset 14, -4
 2178 0002 86B0     		sub	sp, sp, #24
 2179              		.cfi_def_cfa_offset 32
 2180 0004 00AF     		add	r7, sp, #0
 2181              		.cfi_def_cfa_register 7
 2182 0006 F860     		str	r0, [r7, #12]
 2183 0008 B960     		str	r1, [r7, #8]
 2184 000a 1900     		movs	r1, r3
 2185 000c BB1D     		adds	r3, r7, #6
 2186 000e 1A80     		strh	r2, [r3]
 2187 0010 7B1D     		adds	r3, r7, #5
 2188 0012 0A1C     		adds	r2, r1, #0
 2189 0014 1A70     		strb	r2, [r3]
1044:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     OS_FLAG_NODE  *pnode_next;
1045:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     INT8U          y;
1046:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
1047:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
1048:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     OSTCBCur->OSTCBStat      |= OS_STAT_FLAG;
 2190              		.loc 1 1048 0
 2191 0016 354B     		ldr	r3, .L144
 2192 0018 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 58


 2193 001a 344B     		ldr	r3, .L144
 2194 001c 1B68     		ldr	r3, [r3]
 2195 001e 3421     		movs	r1, #52
 2196 0020 5B5C     		ldrb	r3, [r3, r1]
 2197 0022 2021     		movs	r1, #32
 2198 0024 0B43     		orrs	r3, r1
 2199 0026 D9B2     		uxtb	r1, r3
 2200 0028 3423     		movs	r3, #52
 2201 002a D154     		strb	r1, [r2, r3]
1049:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     OSTCBCur->OSTCBStatPend   = OS_STAT_PEND_OK;
 2202              		.loc 1 1049 0
 2203 002c 2F4B     		ldr	r3, .L144
 2204 002e 1B68     		ldr	r3, [r3]
 2205 0030 3522     		movs	r2, #53
 2206 0032 0021     		movs	r1, #0
 2207 0034 9954     		strb	r1, [r3, r2]
1050:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     OSTCBCur->OSTCBDly        = timeout;              /* Store timeout in task's TCB               
 2208              		.loc 1 1050 0
 2209 0036 2D4B     		ldr	r3, .L144
 2210 0038 1B68     		ldr	r3, [r3]
 2211 003a 3A6A     		ldr	r2, [r7, #32]
 2212 003c 1A63     		str	r2, [r3, #48]
1051:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #if OS_TASK_DEL_EN > 0u
1052:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     OSTCBCur->OSTCBFlagNode   = pnode;                /* TCB to link to node                       
 2213              		.loc 1 1052 0
 2214 003e 2B4B     		ldr	r3, .L144
 2215 0040 1B68     		ldr	r3, [r3]
 2216 0042 BA68     		ldr	r2, [r7, #8]
 2217 0044 9A62     		str	r2, [r3, #40]
1053:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #endif
1054:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     pnode->OSFlagNodeFlags    = flags;                /* Save the flags that we need to wait for   
 2218              		.loc 1 1054 0
 2219 0046 BB68     		ldr	r3, [r7, #8]
 2220 0048 BA1D     		adds	r2, r7, #6
 2221 004a 1288     		ldrh	r2, [r2]
 2222 004c 1A82     		strh	r2, [r3, #16]
1055:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     pnode->OSFlagNodeWaitType = wait_type;            /* Save the type of wait we are doing        
 2223              		.loc 1 1055 0
 2224 004e BB68     		ldr	r3, [r7, #8]
 2225 0050 7A1D     		adds	r2, r7, #5
 2226 0052 1278     		ldrb	r2, [r2]
 2227 0054 9A74     		strb	r2, [r3, #18]
1056:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     pnode->OSFlagNodeTCB      = (void *)OSTCBCur;     /* Link to task's TCB                        
 2228              		.loc 1 1056 0
 2229 0056 254B     		ldr	r3, .L144
 2230 0058 1A68     		ldr	r2, [r3]
 2231 005a BB68     		ldr	r3, [r7, #8]
 2232 005c 9A60     		str	r2, [r3, #8]
1057:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     pnode->OSFlagNodeNext     = pgrp->OSFlagWaitList; /* Add node at beginning of event flag wait l
 2233              		.loc 1 1057 0
 2234 005e FB68     		ldr	r3, [r7, #12]
 2235 0060 5A68     		ldr	r2, [r3, #4]
 2236 0062 BB68     		ldr	r3, [r7, #8]
 2237 0064 1A60     		str	r2, [r3]
1058:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     pnode->OSFlagNodePrev     = (void *)0;
 2238              		.loc 1 1058 0
 2239 0066 BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 59


 2240 0068 0022     		movs	r2, #0
 2241 006a 5A60     		str	r2, [r3, #4]
1059:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     pnode->OSFlagNodeFlagGrp  = (void *)pgrp;         /* Link to Event Flag Group                  
 2242              		.loc 1 1059 0
 2243 006c BB68     		ldr	r3, [r7, #8]
 2244 006e FA68     		ldr	r2, [r7, #12]
 2245 0070 DA60     		str	r2, [r3, #12]
1060:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     pnode_next                = (OS_FLAG_NODE *)pgrp->OSFlagWaitList;
 2246              		.loc 1 1060 0
 2247 0072 FB68     		ldr	r3, [r7, #12]
 2248 0074 5B68     		ldr	r3, [r3, #4]
 2249 0076 7B61     		str	r3, [r7, #20]
1061:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     if (pnode_next != (void *)0) {                    /* Is this the first NODE to insert?         
 2250              		.loc 1 1061 0
 2251 0078 7B69     		ldr	r3, [r7, #20]
 2252 007a 002B     		cmp	r3, #0
 2253 007c 02D0     		beq	.L141
1062:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         pnode_next->OSFlagNodePrev = pnode;           /* No, link in doubly linked list            
 2254              		.loc 1 1062 0
 2255 007e 7B69     		ldr	r3, [r7, #20]
 2256 0080 BA68     		ldr	r2, [r7, #8]
 2257 0082 5A60     		str	r2, [r3, #4]
 2258              	.L141:
1063:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     }
1064:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     pgrp->OSFlagWaitList = (void *)pnode;
 2259              		.loc 1 1064 0
 2260 0084 FB68     		ldr	r3, [r7, #12]
 2261 0086 BA68     		ldr	r2, [r7, #8]
 2262 0088 5A60     		str	r2, [r3, #4]
1065:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
1066:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     y            =  OSTCBCur->OSTCBY;                 /* Suspend current task until flag(s) receive
 2263              		.loc 1 1066 0
 2264 008a 184B     		ldr	r3, .L144
 2265 008c 1A68     		ldr	r2, [r3]
 2266 008e 1323     		movs	r3, #19
 2267 0090 FB18     		adds	r3, r7, r3
 2268 0092 3821     		movs	r1, #56
 2269 0094 525C     		ldrb	r2, [r2, r1]
 2270 0096 1A70     		strb	r2, [r3]
1067:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     OSRdyTbl[y] &= (OS_PRIO)~OSTCBCur->OSTCBBitX;
 2271              		.loc 1 1067 0
 2272 0098 1323     		movs	r3, #19
 2273 009a FB18     		adds	r3, r7, r3
 2274 009c 1A78     		ldrb	r2, [r3]
 2275 009e 1323     		movs	r3, #19
 2276 00a0 FB18     		adds	r3, r7, r3
 2277 00a2 1B78     		ldrb	r3, [r3]
 2278 00a4 1249     		ldr	r1, .L144+4
 2279 00a6 C95C     		ldrb	r1, [r1, r3]
 2280 00a8 104B     		ldr	r3, .L144
 2281 00aa 1B68     		ldr	r3, [r3]
 2282 00ac 3920     		movs	r0, #57
 2283 00ae 1B5C     		ldrb	r3, [r3, r0]
 2284 00b0 DB43     		mvns	r3, r3
 2285 00b2 DBB2     		uxtb	r3, r3
 2286 00b4 0B40     		ands	r3, r1
 2287 00b6 D9B2     		uxtb	r1, r3
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 60


 2288 00b8 0D4B     		ldr	r3, .L144+4
 2289 00ba 9954     		strb	r1, [r3, r2]
1068:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     if (OSRdyTbl[y] == 0x00u) {
 2290              		.loc 1 1068 0
 2291 00bc 1323     		movs	r3, #19
 2292 00be FB18     		adds	r3, r7, r3
 2293 00c0 1B78     		ldrb	r3, [r3]
 2294 00c2 0B4A     		ldr	r2, .L144+4
 2295 00c4 D35C     		ldrb	r3, [r2, r3]
 2296 00c6 002B     		cmp	r3, #0
 2297 00c8 0BD1     		bne	.L143
1069:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         OSRdyGrp &= (OS_PRIO)~OSTCBCur->OSTCBBitY;
 2298              		.loc 1 1069 0
 2299 00ca 084B     		ldr	r3, .L144
 2300 00cc 1B68     		ldr	r3, [r3]
 2301 00ce 3A22     		movs	r2, #58
 2302 00d0 9B5C     		ldrb	r3, [r3, r2]
 2303 00d2 DB43     		mvns	r3, r3
 2304 00d4 DBB2     		uxtb	r3, r3
 2305 00d6 074A     		ldr	r2, .L144+8
 2306 00d8 1278     		ldrb	r2, [r2]
 2307 00da 1340     		ands	r3, r2
 2308 00dc DAB2     		uxtb	r2, r3
 2309 00de 054B     		ldr	r3, .L144+8
 2310 00e0 1A70     		strb	r2, [r3]
 2311              	.L143:
1070:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     }
1071:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** }
 2312              		.loc 1 1071 0
 2313 00e2 C046     		nop
 2314 00e4 BD46     		mov	sp, r7
 2315 00e6 06B0     		add	sp, sp, #24
 2316              		@ sp needed
 2317 00e8 80BD     		pop	{r7, pc}
 2318              	.L145:
 2319 00ea C046     		.align	2
 2320              	.L144:
 2321 00ec 00000000 		.word	OSTCBCur
 2322 00f0 00000000 		.word	OSRdyTbl
 2323 00f4 00000000 		.word	OSRdyGrp
 2324              		.cfi_endproc
 2325              	.LFE10:
 2326              		.size	OS_FlagBlock, .-OS_FlagBlock
 2327              		.section	.text.OS_FlagInit,"ax",%progbits
 2328              		.align	2
 2329              		.global	OS_FlagInit
 2330              		.code	16
 2331              		.thumb_func
 2332              		.type	OS_FlagInit, %function
 2333              	OS_FlagInit:
 2334              	.LFB11:
1072:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
1073:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** /*$PAGE*/
1074:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** /*
1075:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** ***************************************************************************************************
1076:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                                  INITIALIZE THE EVENT FLAG MODULE
1077:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 61


1078:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * Description: This function is called by uC/OS-II to initialize the event flag module.  Your appli
1079:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *              MUST NOT call this function.  In other words, this function is internal to uC/OS-II.
1080:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
1081:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * Arguments  : none
1082:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
1083:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * Returns    : none
1084:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
1085:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * WARNING    : You MUST NOT call this function from your code.  This is an INTERNAL function to uC/
1086:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** ***************************************************************************************************
1087:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** */
1088:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
1089:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** void  OS_FlagInit (void)
1090:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** {
 2335              		.loc 1 1090 0
 2336              		.cfi_startproc
 2337              		@ args = 0, pretend = 0, frame = 16
 2338              		@ frame_needed = 1, uses_anonymous_args = 0
 2339 0000 80B5     		push	{r7, lr}
 2340              		.cfi_def_cfa_offset 8
 2341              		.cfi_offset 7, -8
 2342              		.cfi_offset 14, -4
 2343 0002 84B0     		sub	sp, sp, #16
 2344              		.cfi_def_cfa_offset 24
 2345 0004 00AF     		add	r7, sp, #0
 2346              		.cfi_def_cfa_register 7
1091:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #if OS_MAX_FLAGS == 1u
1092:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     OSFlagFreeList                 = (OS_FLAG_GRP *)&OSFlagTbl[0];  /* Only ONE event flag group!  
1093:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     OSFlagFreeList->OSFlagType     = OS_EVENT_TYPE_UNUSED;
1094:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     OSFlagFreeList->OSFlagWaitList = (void *)0;
1095:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     OSFlagFreeList->OSFlagFlags    = (OS_FLAGS)0;
1096:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #if OS_FLAG_NAME_EN > 0u
1097:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     OSFlagFreeList->OSFlagName     = (INT8U *)"?";
1098:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #endif
1099:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #endif
1100:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
1101:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #if OS_MAX_FLAGS >= 2u
1102:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     INT16U        ix;
1103:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     INT16U        ix_next;
1104:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     OS_FLAG_GRP  *pgrp1;
1105:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     OS_FLAG_GRP  *pgrp2;
1106:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
1107:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
1108:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     OS_MemClr((INT8U *)&OSFlagTbl[0], sizeof(OSFlagTbl));           /* Clear the flag group table  
 2347              		.loc 1 1108 0
 2348 0006 254B     		ldr	r3, .L149
 2349 0008 5021     		movs	r1, #80
 2350 000a 1800     		movs	r0, r3
 2351 000c FFF7FEFF 		bl	OS_MemClr
1109:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     for (ix = 0u; ix < (OS_MAX_FLAGS - 1u); ix++) {                 /* Init. list of free EVENT FLA
 2352              		.loc 1 1109 0
 2353 0010 0E23     		movs	r3, #14
 2354 0012 FB18     		adds	r3, r7, r3
 2355 0014 0022     		movs	r2, #0
 2356 0016 1A80     		strh	r2, [r3]
 2357 0018 24E0     		b	.L147
 2358              	.L148:
1110:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         ix_next = ix + 1u;
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 62


 2359              		.loc 1 1110 0 discriminator 3
 2360 001a 0C23     		movs	r3, #12
 2361 001c FB18     		adds	r3, r7, r3
 2362 001e 0E22     		movs	r2, #14
 2363 0020 BA18     		adds	r2, r7, r2
 2364 0022 1288     		ldrh	r2, [r2]
 2365 0024 0132     		adds	r2, r2, #1
 2366 0026 1A80     		strh	r2, [r3]
1111:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         pgrp1 = &OSFlagTbl[ix];
 2367              		.loc 1 1111 0 discriminator 3
 2368 0028 0E23     		movs	r3, #14
 2369 002a FB18     		adds	r3, r7, r3
 2370 002c 1B88     		ldrh	r3, [r3]
 2371 002e 1A01     		lsls	r2, r3, #4
 2372 0030 1A4B     		ldr	r3, .L149
 2373 0032 D318     		adds	r3, r2, r3
 2374 0034 BB60     		str	r3, [r7, #8]
1112:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         pgrp2 = &OSFlagTbl[ix_next];
 2375              		.loc 1 1112 0 discriminator 3
 2376 0036 0C23     		movs	r3, #12
 2377 0038 FB18     		adds	r3, r7, r3
 2378 003a 1B88     		ldrh	r3, [r3]
 2379 003c 1A01     		lsls	r2, r3, #4
 2380 003e 174B     		ldr	r3, .L149
 2381 0040 D318     		adds	r3, r2, r3
 2382 0042 7B60     		str	r3, [r7, #4]
1113:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         pgrp1->OSFlagType     = OS_EVENT_TYPE_UNUSED;
 2383              		.loc 1 1113 0 discriminator 3
 2384 0044 BB68     		ldr	r3, [r7, #8]
 2385 0046 0022     		movs	r2, #0
 2386 0048 1A70     		strb	r2, [r3]
1114:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         pgrp1->OSFlagWaitList = (void *)pgrp2;
 2387              		.loc 1 1114 0 discriminator 3
 2388 004a BB68     		ldr	r3, [r7, #8]
 2389 004c 7A68     		ldr	r2, [r7, #4]
 2390 004e 5A60     		str	r2, [r3, #4]
1115:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #if OS_FLAG_NAME_EN > 0u
1116:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         pgrp1->OSFlagName     = (INT8U *)(void *)"?";               /* Unknown name                
 2391              		.loc 1 1116 0 discriminator 3
 2392 0050 BB68     		ldr	r3, [r7, #8]
 2393 0052 134A     		ldr	r2, .L149+4
 2394 0054 DA60     		str	r2, [r3, #12]
1109:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         ix_next = ix + 1u;
 2395              		.loc 1 1109 0 discriminator 3
 2396 0056 0E23     		movs	r3, #14
 2397 0058 FB18     		adds	r3, r7, r3
 2398 005a 1A88     		ldrh	r2, [r3]
 2399 005c 0E23     		movs	r3, #14
 2400 005e FB18     		adds	r3, r7, r3
 2401 0060 0132     		adds	r2, r2, #1
 2402 0062 1A80     		strh	r2, [r3]
 2403              	.L147:
1109:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         ix_next = ix + 1u;
 2404              		.loc 1 1109 0 is_stmt 0 discriminator 1
 2405 0064 0E23     		movs	r3, #14
 2406 0066 FB18     		adds	r3, r7, r3
 2407 0068 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 63


 2408 006a 032B     		cmp	r3, #3
 2409 006c D5D9     		bls	.L148
1117:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #endif
1118:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     }
1119:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     pgrp1                 = &OSFlagTbl[ix];
 2410              		.loc 1 1119 0 is_stmt 1
 2411 006e 0E23     		movs	r3, #14
 2412 0070 FB18     		adds	r3, r7, r3
 2413 0072 1B88     		ldrh	r3, [r3]
 2414 0074 1A01     		lsls	r2, r3, #4
 2415 0076 094B     		ldr	r3, .L149
 2416 0078 D318     		adds	r3, r2, r3
 2417 007a BB60     		str	r3, [r7, #8]
1120:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     pgrp1->OSFlagType     = OS_EVENT_TYPE_UNUSED;
 2418              		.loc 1 1120 0
 2419 007c BB68     		ldr	r3, [r7, #8]
 2420 007e 0022     		movs	r2, #0
 2421 0080 1A70     		strb	r2, [r3]
1121:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     pgrp1->OSFlagWaitList = (void *)0;
 2422              		.loc 1 1121 0
 2423 0082 BB68     		ldr	r3, [r7, #8]
 2424 0084 0022     		movs	r2, #0
 2425 0086 5A60     		str	r2, [r3, #4]
1122:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #if OS_FLAG_NAME_EN > 0u
1123:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     pgrp1->OSFlagName     = (INT8U *)(void *)"?";                   /* Unknown name                
 2426              		.loc 1 1123 0
 2427 0088 BB68     		ldr	r3, [r7, #8]
 2428 008a 054A     		ldr	r2, .L149+4
 2429 008c DA60     		str	r2, [r3, #12]
1124:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #endif
1125:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     OSFlagFreeList        = &OSFlagTbl[0];
 2430              		.loc 1 1125 0
 2431 008e 054B     		ldr	r3, .L149+8
 2432 0090 024A     		ldr	r2, .L149
 2433 0092 1A60     		str	r2, [r3]
1126:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #endif
1127:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** }
 2434              		.loc 1 1127 0
 2435 0094 C046     		nop
 2436 0096 BD46     		mov	sp, r7
 2437 0098 04B0     		add	sp, sp, #16
 2438              		@ sp needed
 2439 009a 80BD     		pop	{r7, pc}
 2440              	.L150:
 2441              		.align	2
 2442              	.L149:
 2443 009c 00000000 		.word	OSFlagTbl
 2444 00a0 00000000 		.word	.LC2
 2445 00a4 00000000 		.word	OSFlagFreeList
 2446              		.cfi_endproc
 2447              	.LFE11:
 2448              		.size	OS_FlagInit, .-OS_FlagInit
 2449              		.section	.text.OS_FlagTaskRdy,"ax",%progbits
 2450              		.align	2
 2451              		.code	16
 2452              		.thumb_func
 2453              		.type	OS_FlagTaskRdy, %function
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 64


 2454              	OS_FlagTaskRdy:
 2455              	.LFB12:
1128:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
1129:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** /*$PAGE*/
1130:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** /*
1131:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** ***************************************************************************************************
1132:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                              MAKE TASK READY-TO-RUN, EVENT(s) OCCURRED
1133:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
1134:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * Description: This function is internal to uC/OS-II and is used to make a task ready-to-run becaus
1135:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *              desired event flag bits have been set.
1136:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
1137:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * Arguments  : pnode         is a pointer to a structure which contains data about the task waiting
1138:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            event flag bit(s) to be set.
1139:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
1140:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *              flags_rdy     contains the bit pattern of the event flags that cause the task to bec
1141:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            ready-to-run.
1142:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
1143:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *              pend_stat   is used to indicate the readied task's pending status:
1144:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
1145:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
1146:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * Returns    : OS_TRUE       If the task has been placed in the ready list and thus needs schedulin
1147:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *              OS_FALSE      The task is still not ready to run and thus scheduling is not necessar
1148:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
1149:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * Called by  : OSFlagsPost() OS_FLAG.C
1150:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
1151:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * Note(s)    : 1) This function assumes that interrupts are disabled.
1152:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *              2) This function is INTERNAL to uC/OS-II and your application should not call it.
1153:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** ***************************************************************************************************
1154:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** */
1155:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
1156:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** static  BOOLEAN  OS_FlagTaskRdy (OS_FLAG_NODE *pnode,
1157:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                                  OS_FLAGS      flags_rdy,
1158:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****                                  INT8U         pend_stat)
1159:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** {
 2456              		.loc 1 1159 0
 2457              		.cfi_startproc
 2458              		@ args = 0, pretend = 0, frame = 16
 2459              		@ frame_needed = 1, uses_anonymous_args = 0
 2460 0000 80B5     		push	{r7, lr}
 2461              		.cfi_def_cfa_offset 8
 2462              		.cfi_offset 7, -8
 2463              		.cfi_offset 14, -4
 2464 0002 84B0     		sub	sp, sp, #16
 2465              		.cfi_def_cfa_offset 24
 2466 0004 00AF     		add	r7, sp, #0
 2467              		.cfi_def_cfa_register 7
 2468 0006 7860     		str	r0, [r7, #4]
 2469 0008 0800     		movs	r0, r1
 2470 000a 1100     		movs	r1, r2
 2471 000c BB1C     		adds	r3, r7, #2
 2472 000e 021C     		adds	r2, r0, #0
 2473 0010 1A80     		strh	r2, [r3]
 2474 0012 7B1C     		adds	r3, r7, #1
 2475 0014 0A1C     		adds	r2, r1, #0
 2476 0016 1A70     		strb	r2, [r3]
1160:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     OS_TCB   *ptcb;
1161:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     BOOLEAN   sched;
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 65


1162:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
1163:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
1164:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     ptcb                 = (OS_TCB *)pnode->OSFlagNodeTCB; /* Point to TCB of waiting task         
 2477              		.loc 1 1164 0
 2478 0018 7B68     		ldr	r3, [r7, #4]
 2479 001a 9B68     		ldr	r3, [r3, #8]
 2480 001c BB60     		str	r3, [r7, #8]
1165:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     ptcb->OSTCBDly       = 0u;
 2481              		.loc 1 1165 0
 2482 001e BB68     		ldr	r3, [r7, #8]
 2483 0020 0022     		movs	r2, #0
 2484 0022 1A63     		str	r2, [r3, #48]
1166:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     ptcb->OSTCBFlagsRdy  = flags_rdy;
 2485              		.loc 1 1166 0
 2486 0024 BB68     		ldr	r3, [r7, #8]
 2487 0026 BA1C     		adds	r2, r7, #2
 2488 0028 1288     		ldrh	r2, [r2]
 2489 002a 9A85     		strh	r2, [r3, #44]
1167:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     ptcb->OSTCBStat     &= (INT8U)~(INT8U)OS_STAT_FLAG;
 2490              		.loc 1 1167 0
 2491 002c BB68     		ldr	r3, [r7, #8]
 2492 002e 3422     		movs	r2, #52
 2493 0030 9B5C     		ldrb	r3, [r3, r2]
 2494 0032 2022     		movs	r2, #32
 2495 0034 9343     		bics	r3, r2
 2496 0036 D9B2     		uxtb	r1, r3
 2497 0038 BB68     		ldr	r3, [r7, #8]
 2498 003a 3422     		movs	r2, #52
 2499 003c 9954     		strb	r1, [r3, r2]
1168:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     ptcb->OSTCBStatPend  = pend_stat;
 2500              		.loc 1 1168 0
 2501 003e BB68     		ldr	r3, [r7, #8]
 2502 0040 7A1C     		adds	r2, r7, #1
 2503 0042 3521     		movs	r1, #53
 2504 0044 1278     		ldrb	r2, [r2]
 2505 0046 5A54     		strb	r2, [r3, r1]
1169:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     if (ptcb->OSTCBStat == OS_STAT_RDY) {                  /* Task now ready?                      
 2506              		.loc 1 1169 0
 2507 0048 BB68     		ldr	r3, [r7, #8]
 2508 004a 3422     		movs	r2, #52
 2509 004c 9B5C     		ldrb	r3, [r3, r2]
 2510 004e 002B     		cmp	r3, #0
 2511 0050 1ED1     		bne	.L152
1170:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         OSRdyGrp               |= ptcb->OSTCBBitY;         /* Put task into ready list             
 2512              		.loc 1 1170 0
 2513 0052 BB68     		ldr	r3, [r7, #8]
 2514 0054 3A22     		movs	r2, #58
 2515 0056 9A5C     		ldrb	r2, [r3, r2]
 2516 0058 154B     		ldr	r3, .L155
 2517 005a 1B78     		ldrb	r3, [r3]
 2518 005c 1343     		orrs	r3, r2
 2519 005e DAB2     		uxtb	r2, r3
 2520 0060 134B     		ldr	r3, .L155
 2521 0062 1A70     		strb	r2, [r3]
1171:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         OSRdyTbl[ptcb->OSTCBY] |= ptcb->OSTCBBitX;
 2522              		.loc 1 1171 0
 2523 0064 BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 66


 2524 0066 3822     		movs	r2, #56
 2525 0068 9B5C     		ldrb	r3, [r3, r2]
 2526 006a 1800     		movs	r0, r3
 2527 006c BB68     		ldr	r3, [r7, #8]
 2528 006e 3822     		movs	r2, #56
 2529 0070 9B5C     		ldrb	r3, [r3, r2]
 2530 0072 1A00     		movs	r2, r3
 2531 0074 0F4B     		ldr	r3, .L155+4
 2532 0076 9A5C     		ldrb	r2, [r3, r2]
 2533 0078 BB68     		ldr	r3, [r7, #8]
 2534 007a 3921     		movs	r1, #57
 2535 007c 5B5C     		ldrb	r3, [r3, r1]
 2536 007e 1343     		orrs	r3, r2
 2537 0080 DAB2     		uxtb	r2, r3
 2538 0082 0C4B     		ldr	r3, .L155+4
 2539 0084 1A54     		strb	r2, [r3, r0]
1172:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         sched                   = OS_TRUE;
 2540              		.loc 1 1172 0
 2541 0086 0F23     		movs	r3, #15
 2542 0088 FB18     		adds	r3, r7, r3
 2543 008a 0122     		movs	r2, #1
 2544 008c 1A70     		strb	r2, [r3]
 2545 008e 03E0     		b	.L153
 2546              	.L152:
1173:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     } else {
1174:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         sched                   = OS_FALSE;
 2547              		.loc 1 1174 0
 2548 0090 0F23     		movs	r3, #15
 2549 0092 FB18     		adds	r3, r7, r3
 2550 0094 0022     		movs	r2, #0
 2551 0096 1A70     		strb	r2, [r3]
 2552              	.L153:
1175:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     }
1176:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     OS_FlagUnlink(pnode);
 2553              		.loc 1 1176 0
 2554 0098 7B68     		ldr	r3, [r7, #4]
 2555 009a 1800     		movs	r0, r3
 2556 009c FFF7FEFF 		bl	OS_FlagUnlink
1177:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     return (sched);
 2557              		.loc 1 1177 0
 2558 00a0 0F23     		movs	r3, #15
 2559 00a2 FB18     		adds	r3, r7, r3
 2560 00a4 1B78     		ldrb	r3, [r3]
1178:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** }
 2561              		.loc 1 1178 0
 2562 00a6 1800     		movs	r0, r3
 2563 00a8 BD46     		mov	sp, r7
 2564 00aa 04B0     		add	sp, sp, #16
 2565              		@ sp needed
 2566 00ac 80BD     		pop	{r7, pc}
 2567              	.L156:
 2568 00ae C046     		.align	2
 2569              	.L155:
 2570 00b0 00000000 		.word	OSRdyGrp
 2571 00b4 00000000 		.word	OSRdyTbl
 2572              		.cfi_endproc
 2573              	.LFE12:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 67


 2574              		.size	OS_FlagTaskRdy, .-OS_FlagTaskRdy
 2575              		.section	.text.OS_FlagUnlink,"ax",%progbits
 2576              		.align	2
 2577              		.global	OS_FlagUnlink
 2578              		.code	16
 2579              		.thumb_func
 2580              		.type	OS_FlagUnlink, %function
 2581              	OS_FlagUnlink:
 2582              	.LFB13:
1179:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
1180:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** /*$PAGE*/
1181:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** /*
1182:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** ***************************************************************************************************
1183:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                              UNLINK EVENT FLAG NODE FROM WAITING LIST
1184:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
1185:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * Description: This function is internal to uC/OS-II and is used to unlink an event flag node from 
1186:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *              list of tasks waiting for the event flag.
1187:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
1188:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * Arguments  : pnode         is a pointer to a structure which contains data about the task waiting
1189:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *                            event flag bit(s) to be set.
1190:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
1191:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * Returns    : none
1192:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
1193:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * Called by  : OS_FlagTaskRdy() OS_FLAG.C
1194:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *              OSFlagPend()     OS_FLAG.C
1195:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *              OSTaskDel()      OS_TASK.C
1196:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *
1197:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** * Note(s)    : 1) This function assumes that interrupts are disabled.
1198:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** *              2) This function is INTERNAL to uC/OS-II and your application should not call it.
1199:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** ***************************************************************************************************
1200:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** */
1201:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
1202:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** void  OS_FlagUnlink (OS_FLAG_NODE *pnode)
1203:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** {
 2583              		.loc 1 1203 0
 2584              		.cfi_startproc
 2585              		@ args = 0, pretend = 0, frame = 24
 2586              		@ frame_needed = 1, uses_anonymous_args = 0
 2587 0000 80B5     		push	{r7, lr}
 2588              		.cfi_def_cfa_offset 8
 2589              		.cfi_offset 7, -8
 2590              		.cfi_offset 14, -4
 2591 0002 86B0     		sub	sp, sp, #24
 2592              		.cfi_def_cfa_offset 32
 2593 0004 00AF     		add	r7, sp, #0
 2594              		.cfi_def_cfa_register 7
 2595 0006 7860     		str	r0, [r7, #4]
1204:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #if OS_TASK_DEL_EN > 0u
1205:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     OS_TCB       *ptcb;
1206:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #endif
1207:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     OS_FLAG_GRP  *pgrp;
1208:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     OS_FLAG_NODE *pnode_prev;
1209:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     OS_FLAG_NODE *pnode_next;
1210:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
1211:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** 
1212:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     pnode_prev = (OS_FLAG_NODE *)pnode->OSFlagNodePrev;
 2596              		.loc 1 1212 0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 68


 2597 0008 7B68     		ldr	r3, [r7, #4]
 2598 000a 5B68     		ldr	r3, [r3, #4]
 2599 000c 7B61     		str	r3, [r7, #20]
1213:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     pnode_next = (OS_FLAG_NODE *)pnode->OSFlagNodeNext;
 2600              		.loc 1 1213 0
 2601 000e 7B68     		ldr	r3, [r7, #4]
 2602 0010 1B68     		ldr	r3, [r3]
 2603 0012 3B61     		str	r3, [r7, #16]
1214:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     if (pnode_prev == (OS_FLAG_NODE *)0) {                      /* Is it first node in wait list?  
 2604              		.loc 1 1214 0
 2605 0014 7B69     		ldr	r3, [r7, #20]
 2606 0016 002B     		cmp	r3, #0
 2607 0018 0CD1     		bne	.L158
1215:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         pgrp                 = (OS_FLAG_GRP *)pnode->OSFlagNodeFlagGrp;
 2608              		.loc 1 1215 0
 2609 001a 7B68     		ldr	r3, [r7, #4]
 2610 001c DB68     		ldr	r3, [r3, #12]
 2611 001e FB60     		str	r3, [r7, #12]
1216:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         pgrp->OSFlagWaitList = (void *)pnode_next;              /*      Update list for new 1st nod
 2612              		.loc 1 1216 0
 2613 0020 FB68     		ldr	r3, [r7, #12]
 2614 0022 3A69     		ldr	r2, [r7, #16]
 2615 0024 5A60     		str	r2, [r3, #4]
1217:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         if (pnode_next != (OS_FLAG_NODE *)0) {
 2616              		.loc 1 1217 0
 2617 0026 3B69     		ldr	r3, [r7, #16]
 2618 0028 002B     		cmp	r3, #0
 2619 002a 0CD0     		beq	.L160
1218:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****             pnode_next->OSFlagNodePrev = (OS_FLAG_NODE *)0;     /*      Link new 1st node PREV to N
 2620              		.loc 1 1218 0
 2621 002c 3B69     		ldr	r3, [r7, #16]
 2622 002e 0022     		movs	r2, #0
 2623 0030 5A60     		str	r2, [r3, #4]
 2624 0032 08E0     		b	.L160
 2625              	.L158:
1219:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         }
1220:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     } else {                                                    /* No,  A node somewhere in the lis
1221:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         pnode_prev->OSFlagNodeNext = pnode_next;                /*      Link around the node to unl
 2626              		.loc 1 1221 0
 2627 0034 7B69     		ldr	r3, [r7, #20]
 2628 0036 3A69     		ldr	r2, [r7, #16]
 2629 0038 1A60     		str	r2, [r3]
1222:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         if (pnode_next != (OS_FLAG_NODE *)0) {                  /*      Was this the LAST node?    
 2630              		.loc 1 1222 0
 2631 003a 3B69     		ldr	r3, [r7, #16]
 2632 003c 002B     		cmp	r3, #0
 2633 003e 02D0     		beq	.L160
1223:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****             pnode_next->OSFlagNodePrev = pnode_prev;            /*      No, Link around current nod
 2634              		.loc 1 1223 0
 2635 0040 3B69     		ldr	r3, [r7, #16]
 2636 0042 7A69     		ldr	r2, [r7, #20]
 2637 0044 5A60     		str	r2, [r3, #4]
 2638              	.L160:
1224:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****         }
1225:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     }
1226:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #if OS_TASK_DEL_EN > 0u
1227:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     ptcb                = (OS_TCB *)pnode->OSFlagNodeTCB;
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 69


 2639              		.loc 1 1227 0
 2640 0046 7B68     		ldr	r3, [r7, #4]
 2641 0048 9B68     		ldr	r3, [r3, #8]
 2642 004a BB60     		str	r3, [r7, #8]
1228:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c ****     ptcb->OSTCBFlagNode = (OS_FLAG_NODE *)0;
 2643              		.loc 1 1228 0
 2644 004c BB68     		ldr	r3, [r7, #8]
 2645 004e 0022     		movs	r2, #0
 2646 0050 9A62     		str	r2, [r3, #40]
1229:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** #endif
1230:..\..\..\..\..\..\Software\uCOS-II\Source/os_flag.c **** }
 2647              		.loc 1 1230 0
 2648 0052 C046     		nop
 2649 0054 BD46     		mov	sp, r7
 2650 0056 06B0     		add	sp, sp, #24
 2651              		@ sp needed
 2652 0058 80BD     		pop	{r7, pc}
 2653              		.cfi_endproc
 2654              	.LFE13:
 2655              		.size	OS_FlagUnlink, .-OS_FlagUnlink
 2656 005a C046     		.text
 2657              	.Letext0:
 2658              		.file 2 "..\\..\\..\\..\\..\\..\\Software\\uCOS-II\\Ports\\ARM-Cortex-M0\\Generic\\GNU/os_cpu.h"
 2659              		.file 3 "..\\..\\..\\..\\..\\..\\Software\\uCOS-II\\Source/ucos_ii.h"
 2660              		.section	.debug_info,"",%progbits
 2661              	.Ldebug_info0:
 2662 0000 050A0000 		.4byte	0xa05
 2663 0004 0400     		.2byte	0x4
 2664 0006 00000000 		.4byte	.Ldebug_abbrev0
 2665 000a 04       		.byte	0x4
 2666 000b 01       		.uleb128 0x1
 2667 000c BF020000 		.4byte	.LASF116
 2668 0010 0C       		.byte	0xc
 2669 0011 33000000 		.4byte	.LASF117
 2670 0015 4B050000 		.4byte	.LASF118
 2671 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2672 001d 00000000 		.4byte	0
 2673 0021 00000000 		.4byte	.Ldebug_line0
 2674 0025 02       		.uleb128 0x2
 2675 0026 01       		.byte	0x1
 2676 0027 06       		.byte	0x6
 2677 0028 1A010000 		.4byte	.LASF0
 2678 002c 02       		.uleb128 0x2
 2679 002d 01       		.byte	0x1
 2680 002e 08       		.byte	0x8
 2681 002f 1C040000 		.4byte	.LASF1
 2682 0033 02       		.uleb128 0x2
 2683 0034 02       		.byte	0x2
 2684 0035 05       		.byte	0x5
 2685 0036 4D040000 		.4byte	.LASF2
 2686 003a 02       		.uleb128 0x2
 2687 003b 02       		.byte	0x2
 2688 003c 07       		.byte	0x7
 2689 003d 54020000 		.4byte	.LASF3
 2690 0041 02       		.uleb128 0x2
 2691 0042 04       		.byte	0x4
 2692 0043 05       		.byte	0x5
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 70


 2693 0044 76000000 		.4byte	.LASF4
 2694 0048 02       		.uleb128 0x2
 2695 0049 04       		.byte	0x4
 2696 004a 07       		.byte	0x7
 2697 004b 12020000 		.4byte	.LASF5
 2698 004f 02       		.uleb128 0x2
 2699 0050 08       		.byte	0x8
 2700 0051 05       		.byte	0x5
 2701 0052 0C010000 		.4byte	.LASF6
 2702 0056 02       		.uleb128 0x2
 2703 0057 08       		.byte	0x8
 2704 0058 07       		.byte	0x7
 2705 0059 B0000000 		.4byte	.LASF7
 2706 005d 03       		.uleb128 0x3
 2707 005e 04       		.byte	0x4
 2708 005f 05       		.byte	0x5
 2709 0060 696E7400 		.ascii	"int\000"
 2710 0064 02       		.uleb128 0x2
 2711 0065 04       		.byte	0x4
 2712 0066 07       		.byte	0x7
 2713 0067 05020000 		.4byte	.LASF8
 2714 006b 02       		.uleb128 0x2
 2715 006c 08       		.byte	0x8
 2716 006d 04       		.byte	0x4
 2717 006e FF040000 		.4byte	.LASF9
 2718 0072 04       		.uleb128 0x4
 2719 0073 04       		.byte	0x4
 2720 0074 02       		.uleb128 0x2
 2721 0075 04       		.byte	0x4
 2722 0076 07       		.byte	0x7
 2723 0077 94030000 		.4byte	.LASF10
 2724 007b 02       		.uleb128 0x2
 2725 007c 01       		.byte	0x1
 2726 007d 08       		.byte	0x8
 2727 007e 16050000 		.4byte	.LASF11
 2728 0082 05       		.uleb128 0x5
 2729 0083 70040000 		.4byte	.LASF12
 2730 0087 02       		.byte	0x2
 2731 0088 72       		.byte	0x72
 2732 0089 2C000000 		.4byte	0x2c
 2733 008d 05       		.uleb128 0x5
 2734 008e A5050000 		.4byte	.LASF13
 2735 0092 02       		.byte	0x2
 2736 0093 73       		.byte	0x73
 2737 0094 2C000000 		.4byte	0x2c
 2738 0098 05       		.uleb128 0x5
 2739 0099 E6000000 		.4byte	.LASF14
 2740 009d 02       		.byte	0x2
 2741 009e 75       		.byte	0x75
 2742 009f 3A000000 		.4byte	0x3a
 2743 00a3 05       		.uleb128 0x5
 2744 00a4 9B010000 		.4byte	.LASF15
 2745 00a8 02       		.byte	0x2
 2746 00a9 77       		.byte	0x77
 2747 00aa 64000000 		.4byte	0x64
 2748 00ae 02       		.uleb128 0x2
 2749 00af 04       		.byte	0x4
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 71


 2750 00b0 04       		.byte	0x4
 2751 00b1 02040000 		.4byte	.LASF16
 2752 00b5 02       		.uleb128 0x2
 2753 00b6 08       		.byte	0x8
 2754 00b7 04       		.byte	0x4
 2755 00b8 94010000 		.4byte	.LASF17
 2756 00bc 05       		.uleb128 0x5
 2757 00bd 4F010000 		.4byte	.LASF18
 2758 00c1 02       		.byte	0x2
 2759 00c2 7C       		.byte	0x7c
 2760 00c3 64000000 		.4byte	0x64
 2761 00c7 05       		.uleb128 0x5
 2762 00c8 7F030000 		.4byte	.LASF19
 2763 00cc 02       		.byte	0x2
 2764 00cd 7D       		.byte	0x7d
 2765 00ce 64000000 		.4byte	0x64
 2766 00d2 06       		.uleb128 0x6
 2767 00d3 1B050000 		.4byte	.LASF20
 2768 00d7 03       		.byte	0x3
 2769 00d8 7201     		.2byte	0x172
 2770 00da 8D000000 		.4byte	0x8d
 2771 00de 07       		.uleb128 0x7
 2772 00df D5010000 		.4byte	.LASF29
 2773 00e3 18       		.byte	0x18
 2774 00e4 03       		.byte	0x3
 2775 00e5 7801     		.2byte	0x178
 2776 00e7 3A010000 		.4byte	0x13a
 2777 00eb 08       		.uleb128 0x8
 2778 00ec 64030000 		.4byte	.LASF21
 2779 00f0 03       		.byte	0x3
 2780 00f1 7901     		.2byte	0x179
 2781 00f3 8D000000 		.4byte	0x8d
 2782 00f7 00       		.byte	0
 2783 00f8 08       		.uleb128 0x8
 2784 00f9 01010000 		.4byte	.LASF22
 2785 00fd 03       		.byte	0x3
 2786 00fe 7A01     		.2byte	0x17a
 2787 0100 72000000 		.4byte	0x72
 2788 0104 04       		.byte	0x4
 2789 0105 08       		.uleb128 0x8
 2790 0106 78040000 		.4byte	.LASF23
 2791 010a 03       		.byte	0x3
 2792 010b 7B01     		.2byte	0x17b
 2793 010d 98000000 		.4byte	0x98
 2794 0111 08       		.byte	0x8
 2795 0112 08       		.uleb128 0x8
 2796 0113 89030000 		.4byte	.LASF24
 2797 0117 03       		.byte	0x3
 2798 0118 7C01     		.2byte	0x17c
 2799 011a D2000000 		.4byte	0xd2
 2800 011e 0A       		.byte	0xa
 2801 011f 08       		.uleb128 0x8
 2802 0120 21000000 		.4byte	.LASF25
 2803 0124 03       		.byte	0x3
 2804 0125 7D01     		.2byte	0x17d
 2805 0127 3A010000 		.4byte	0x13a
 2806 012b 0B       		.byte	0xb
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 72


 2807 012c 08       		.uleb128 0x8
 2808 012d 90000000 		.4byte	.LASF26
 2809 0131 03       		.byte	0x3
 2810 0132 8001     		.2byte	0x180
 2811 0134 4A010000 		.4byte	0x14a
 2812 0138 14       		.byte	0x14
 2813 0139 00       		.byte	0
 2814 013a 09       		.uleb128 0x9
 2815 013b D2000000 		.4byte	0xd2
 2816 013f 4A010000 		.4byte	0x14a
 2817 0143 0A       		.uleb128 0xa
 2818 0144 74000000 		.4byte	0x74
 2819 0148 07       		.byte	0x7
 2820 0149 00       		.byte	0
 2821 014a 0B       		.uleb128 0xb
 2822 014b 04       		.byte	0x4
 2823 014c 8D000000 		.4byte	0x8d
 2824 0150 06       		.uleb128 0x6
 2825 0151 13040000 		.4byte	.LASF27
 2826 0155 03       		.byte	0x3
 2827 0156 8201     		.2byte	0x182
 2828 0158 DE000000 		.4byte	0xde
 2829 015c 06       		.uleb128 0x6
 2830 015d 9D040000 		.4byte	.LASF28
 2831 0161 03       		.byte	0x3
 2832 0162 9301     		.2byte	0x193
 2833 0164 98000000 		.4byte	0x98
 2834 0168 07       		.uleb128 0x7
 2835 0169 A4020000 		.4byte	.LASF30
 2836 016d 10       		.byte	0x10
 2837 016e 03       		.byte	0x3
 2838 016f 9B01     		.2byte	0x19b
 2839 0171 AA010000 		.4byte	0x1aa
 2840 0175 08       		.uleb128 0x8
 2841 0176 0B050000 		.4byte	.LASF31
 2842 017a 03       		.byte	0x3
 2843 017b 9C01     		.2byte	0x19c
 2844 017d 8D000000 		.4byte	0x8d
 2845 0181 00       		.byte	0
 2846 0182 08       		.uleb128 0x8
 2847 0183 2B060000 		.4byte	.LASF32
 2848 0187 03       		.byte	0x3
 2849 0188 9D01     		.2byte	0x19d
 2850 018a 72000000 		.4byte	0x72
 2851 018e 04       		.byte	0x4
 2852 018f 08       		.uleb128 0x8
 2853 0190 E8030000 		.4byte	.LASF33
 2854 0194 03       		.byte	0x3
 2855 0195 9E01     		.2byte	0x19e
 2856 0197 5C010000 		.4byte	0x15c
 2857 019b 08       		.byte	0x8
 2858 019c 08       		.uleb128 0x8
 2859 019d 24020000 		.4byte	.LASF34
 2860 01a1 03       		.byte	0x3
 2861 01a2 A001     		.2byte	0x1a0
 2862 01a4 4A010000 		.4byte	0x14a
 2863 01a8 0C       		.byte	0xc
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 73


 2864 01a9 00       		.byte	0
 2865 01aa 06       		.uleb128 0x6
 2866 01ab CA040000 		.4byte	.LASF35
 2867 01af 03       		.byte	0x3
 2868 01b0 A201     		.2byte	0x1a2
 2869 01b2 68010000 		.4byte	0x168
 2870 01b6 07       		.uleb128 0x7
 2871 01b7 A2010000 		.4byte	.LASF36
 2872 01bb 14       		.byte	0x14
 2873 01bc 03       		.byte	0x3
 2874 01bd A601     		.2byte	0x1a6
 2875 01bf 12020000 		.4byte	0x212
 2876 01c3 08       		.uleb128 0x8
 2877 01c4 B0020000 		.4byte	.LASF37
 2878 01c8 03       		.byte	0x3
 2879 01c9 A701     		.2byte	0x1a7
 2880 01cb 72000000 		.4byte	0x72
 2881 01cf 00       		.byte	0
 2882 01d0 08       		.uleb128 0x8
 2883 01d1 45020000 		.4byte	.LASF38
 2884 01d5 03       		.byte	0x3
 2885 01d6 A801     		.2byte	0x1a8
 2886 01d8 72000000 		.4byte	0x72
 2887 01dc 04       		.byte	0x4
 2888 01dd 08       		.uleb128 0x8
 2889 01de 00000000 		.4byte	.LASF39
 2890 01e2 03       		.byte	0x3
 2891 01e3 A901     		.2byte	0x1a9
 2892 01e5 72000000 		.4byte	0x72
 2893 01e9 08       		.byte	0x8
 2894 01ea 08       		.uleb128 0x8
 2895 01eb 3D010000 		.4byte	.LASF40
 2896 01ef 03       		.byte	0x3
 2897 01f0 AA01     		.2byte	0x1aa
 2898 01f2 72000000 		.4byte	0x72
 2899 01f6 0C       		.byte	0xc
 2900 01f7 08       		.uleb128 0x8
 2901 01f8 2F040000 		.4byte	.LASF41
 2902 01fc 03       		.byte	0x3
 2903 01fd AB01     		.2byte	0x1ab
 2904 01ff 5C010000 		.4byte	0x15c
 2905 0203 10       		.byte	0x10
 2906 0204 08       		.uleb128 0x8
 2907 0205 29050000 		.4byte	.LASF42
 2908 0209 03       		.byte	0x3
 2909 020a AC01     		.2byte	0x1ac
 2910 020c 8D000000 		.4byte	0x8d
 2911 0210 12       		.byte	0x12
 2912 0211 00       		.byte	0
 2913 0212 06       		.uleb128 0x6
 2914 0213 14000000 		.4byte	.LASF43
 2915 0217 03       		.byte	0x3
 2916 0218 B101     		.2byte	0x1b1
 2917 021a B6010000 		.4byte	0x1b6
 2918 021e 07       		.uleb128 0x7
 2919 021f CE010000 		.4byte	.LASF44
 2920 0223 58       		.byte	0x58
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 74


 2921 0224 03       		.byte	0x3
 2922 0225 2E02     		.2byte	0x22e
 2923 0227 A5030000 		.4byte	0x3a5
 2924 022b 08       		.uleb128 0x8
 2925 022c 98020000 		.4byte	.LASF45
 2926 0230 03       		.byte	0x3
 2927 0231 2F02     		.2byte	0x22f
 2928 0233 A5030000 		.4byte	0x3a5
 2929 0237 00       		.byte	0
 2930 0238 08       		.uleb128 0x8
 2931 0239 D4030000 		.4byte	.LASF46
 2932 023d 03       		.byte	0x3
 2933 023e 3202     		.2byte	0x232
 2934 0240 72000000 		.4byte	0x72
 2935 0244 04       		.byte	0x4
 2936 0245 08       		.uleb128 0x8
 2937 0246 3C050000 		.4byte	.LASF47
 2938 024a 03       		.byte	0x3
 2939 024b 3302     		.2byte	0x233
 2940 024d A5030000 		.4byte	0x3a5
 2941 0251 08       		.byte	0x8
 2942 0252 08       		.uleb128 0x8
 2943 0253 EA010000 		.4byte	.LASF48
 2944 0257 03       		.byte	0x3
 2945 0258 3402     		.2byte	0x234
 2946 025a A3000000 		.4byte	0xa3
 2947 025e 0C       		.byte	0xc
 2948 025f 08       		.uleb128 0x8
 2949 0260 E8040000 		.4byte	.LASF49
 2950 0264 03       		.byte	0x3
 2951 0265 3502     		.2byte	0x235
 2952 0267 98000000 		.4byte	0x98
 2953 026b 10       		.byte	0x10
 2954 026c 08       		.uleb128 0x8
 2955 026d AF010000 		.4byte	.LASF50
 2956 0271 03       		.byte	0x3
 2957 0272 3602     		.2byte	0x236
 2958 0274 98000000 		.4byte	0x98
 2959 0278 12       		.byte	0x12
 2960 0279 08       		.uleb128 0x8
 2961 027a 9D030000 		.4byte	.LASF51
 2962 027e 03       		.byte	0x3
 2963 027f 3902     		.2byte	0x239
 2964 0281 AB030000 		.4byte	0x3ab
 2965 0285 14       		.byte	0x14
 2966 0286 08       		.uleb128 0x8
 2967 0287 AB050000 		.4byte	.LASF52
 2968 028b 03       		.byte	0x3
 2969 028c 3A02     		.2byte	0x23a
 2970 028e AB030000 		.4byte	0x3ab
 2971 0292 18       		.byte	0x18
 2972 0293 08       		.uleb128 0x8
 2973 0294 EB050000 		.4byte	.LASF53
 2974 0298 03       		.byte	0x3
 2975 0299 4302     		.2byte	0x243
 2976 029b B1030000 		.4byte	0x3b1
 2977 029f 1C       		.byte	0x1c
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 75


 2978 02a0 08       		.uleb128 0x8
 2979 02a1 03060000 		.4byte	.LASF54
 2980 02a5 03       		.byte	0x3
 2981 02a6 4702     		.2byte	0x247
 2982 02a8 B7030000 		.4byte	0x3b7
 2983 02ac 20       		.byte	0x20
 2984 02ad 08       		.uleb128 0x8
 2985 02ae 5B030000 		.4byte	.LASF55
 2986 02b2 03       		.byte	0x3
 2987 02b3 4B02     		.2byte	0x24b
 2988 02b5 72000000 		.4byte	0x72
 2989 02b9 24       		.byte	0x24
 2990 02ba 08       		.uleb128 0x8
 2991 02bb 4D030000 		.4byte	.LASF56
 2992 02bf 03       		.byte	0x3
 2993 02c0 5002     		.2byte	0x250
 2994 02c2 BD030000 		.4byte	0x3bd
 2995 02c6 28       		.byte	0x28
 2996 02c7 08       		.uleb128 0x8
 2997 02c8 3F040000 		.4byte	.LASF57
 2998 02cc 03       		.byte	0x3
 2999 02cd 5202     		.2byte	0x252
 3000 02cf 5C010000 		.4byte	0x15c
 3001 02d3 2C       		.byte	0x2c
 3002 02d4 08       		.uleb128 0x8
 3003 02d5 6E010000 		.4byte	.LASF58
 3004 02d9 03       		.byte	0x3
 3005 02da 5502     		.2byte	0x255
 3006 02dc A3000000 		.4byte	0xa3
 3007 02e0 30       		.byte	0x30
 3008 02e1 08       		.uleb128 0x8
 3009 02e2 83010000 		.4byte	.LASF59
 3010 02e6 03       		.byte	0x3
 3011 02e7 5602     		.2byte	0x256
 3012 02e9 8D000000 		.4byte	0x8d
 3013 02ed 34       		.byte	0x34
 3014 02ee 08       		.uleb128 0x8
 3015 02ef F7010000 		.4byte	.LASF60
 3016 02f3 03       		.byte	0x3
 3017 02f4 5702     		.2byte	0x257
 3018 02f6 8D000000 		.4byte	0x8d
 3019 02fa 35       		.byte	0x35
 3020 02fb 08       		.uleb128 0x8
 3021 02fc F9050000 		.4byte	.LASF61
 3022 0300 03       		.byte	0x3
 3023 0301 5802     		.2byte	0x258
 3024 0303 8D000000 		.4byte	0x8d
 3025 0307 36       		.byte	0x36
 3026 0308 08       		.uleb128 0x8
 3027 0309 DD050000 		.4byte	.LASF62
 3028 030d 03       		.byte	0x3
 3029 030e 5A02     		.2byte	0x25a
 3030 0310 8D000000 		.4byte	0x8d
 3031 0314 37       		.byte	0x37
 3032 0315 08       		.uleb128 0x8
 3033 0316 E4050000 		.4byte	.LASF63
 3034 031a 03       		.byte	0x3
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 76


 3035 031b 5B02     		.2byte	0x25b
 3036 031d 8D000000 		.4byte	0x8d
 3037 0321 38       		.byte	0x38
 3038 0322 08       		.uleb128 0x8
 3039 0323 A6000000 		.4byte	.LASF64
 3040 0327 03       		.byte	0x3
 3041 0328 5C02     		.2byte	0x25c
 3042 032a D2000000 		.4byte	0xd2
 3043 032e 39       		.byte	0x39
 3044 032f 08       		.uleb128 0x8
 3045 0330 BF030000 		.4byte	.LASF65
 3046 0334 03       		.byte	0x3
 3047 0335 5D02     		.2byte	0x25d
 3048 0337 D2000000 		.4byte	0xd2
 3049 033b 3A       		.byte	0x3a
 3050 033c 08       		.uleb128 0x8
 3051 033d 77010000 		.4byte	.LASF66
 3052 0341 03       		.byte	0x3
 3053 0342 6002     		.2byte	0x260
 3054 0344 8D000000 		.4byte	0x8d
 3055 0348 3B       		.byte	0x3b
 3056 0349 08       		.uleb128 0x8
 3057 034a 6C020000 		.4byte	.LASF67
 3058 034e 03       		.byte	0x3
 3059 034f 6402     		.2byte	0x264
 3060 0351 A3000000 		.4byte	0xa3
 3061 0355 3C       		.byte	0x3c
 3062 0356 08       		.uleb128 0x8
 3063 0357 70030000 		.4byte	.LASF68
 3064 035b 03       		.byte	0x3
 3065 035c 6502     		.2byte	0x265
 3066 035e A3000000 		.4byte	0xa3
 3067 0362 40       		.byte	0x40
 3068 0363 08       		.uleb128 0x8
 3069 0364 7F000000 		.4byte	.LASF69
 3070 0368 03       		.byte	0x3
 3071 0369 6602     		.2byte	0x266
 3072 036b A3000000 		.4byte	0xa3
 3073 036f 44       		.byte	0x44
 3074 0370 08       		.uleb128 0x8
 3075 0371 90040000 		.4byte	.LASF70
 3076 0375 03       		.byte	0x3
 3077 0376 6702     		.2byte	0x267
 3078 0378 A5030000 		.4byte	0x3a5
 3079 037c 48       		.byte	0x48
 3080 037d 08       		.uleb128 0x8
 3081 037e A7030000 		.4byte	.LASF71
 3082 0382 03       		.byte	0x3
 3083 0383 6802     		.2byte	0x268
 3084 0385 A3000000 		.4byte	0xa3
 3085 0389 4C       		.byte	0x4c
 3086 038a 08       		.uleb128 0x8
 3087 038b C7000000 		.4byte	.LASF72
 3088 038f 03       		.byte	0x3
 3089 0390 6C02     		.2byte	0x26c
 3090 0392 4A010000 		.4byte	0x14a
 3091 0396 50       		.byte	0x50
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 77


 3092 0397 08       		.uleb128 0x8
 3093 0398 D1050000 		.4byte	.LASF73
 3094 039c 03       		.byte	0x3
 3095 039d 7002     		.2byte	0x270
 3096 039f C3030000 		.4byte	0x3c3
 3097 03a3 54       		.byte	0x54
 3098 03a4 00       		.byte	0
 3099 03a5 0B       		.uleb128 0xb
 3100 03a6 04       		.byte	0x4
 3101 03a7 BC000000 		.4byte	0xbc
 3102 03ab 0B       		.uleb128 0xb
 3103 03ac 04       		.byte	0x4
 3104 03ad 1E020000 		.4byte	0x21e
 3105 03b1 0B       		.uleb128 0xb
 3106 03b2 04       		.byte	0x4
 3107 03b3 50010000 		.4byte	0x150
 3108 03b7 0B       		.uleb128 0xb
 3109 03b8 04       		.byte	0x4
 3110 03b9 B1030000 		.4byte	0x3b1
 3111 03bd 0B       		.uleb128 0xb
 3112 03be 04       		.byte	0x4
 3113 03bf 12020000 		.4byte	0x212
 3114 03c3 09       		.uleb128 0x9
 3115 03c4 A3000000 		.4byte	0xa3
 3116 03c8 D3030000 		.4byte	0x3d3
 3117 03cc 0A       		.uleb128 0xa
 3118 03cd 74000000 		.4byte	0x74
 3119 03d1 00       		.byte	0
 3120 03d2 00       		.byte	0
 3121 03d3 06       		.uleb128 0x6
 3122 03d4 2C000000 		.4byte	.LASF74
 3123 03d8 03       		.byte	0x3
 3124 03d9 7202     		.2byte	0x272
 3125 03db 1E020000 		.4byte	0x21e
 3126 03df 0C       		.uleb128 0xc
 3127 03e0 83040000 		.4byte	.LASF83
 3128 03e4 01       		.byte	0x1
 3129 03e5 5E       		.byte	0x5e
 3130 03e6 5C010000 		.4byte	0x15c
 3131 03ea 00000000 		.4byte	.LFB1
 3132 03ee 16020000 		.4byte	.LFE1-.LFB1
 3133 03f2 01       		.uleb128 0x1
 3134 03f3 9C       		.byte	0x9c
 3135 03f4 69040000 		.4byte	0x469
 3136 03f8 0D       		.uleb128 0xd
 3137 03f9 F1040000 		.4byte	.LASF75
 3138 03fd 01       		.byte	0x1
 3139 03fe 5E       		.byte	0x5e
 3140 03ff 69040000 		.4byte	0x469
 3141 0403 02       		.uleb128 0x2
 3142 0404 91       		.byte	0x91
 3143 0405 64       		.sleb128 -28
 3144 0406 0D       		.uleb128 0xd
 3145 0407 CB050000 		.4byte	.LASF76
 3146 040b 01       		.byte	0x1
 3147 040c 5F       		.byte	0x5f
 3148 040d 5C010000 		.4byte	0x15c
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 78


 3149 0411 02       		.uleb128 0x2
 3150 0412 91       		.byte	0x91
 3151 0413 62       		.sleb128 -30
 3152 0414 0D       		.uleb128 0xd
 3153 0415 ED000000 		.4byte	.LASF77
 3154 0419 01       		.byte	0x1
 3155 041a 60       		.byte	0x60
 3156 041b 8D000000 		.4byte	0x8d
 3157 041f 02       		.uleb128 0x2
 3158 0420 91       		.byte	0x91
 3159 0421 61       		.sleb128 -31
 3160 0422 0D       		.uleb128 0xd
 3161 0423 D5000000 		.4byte	.LASF78
 3162 0427 01       		.byte	0x1
 3163 0428 61       		.byte	0x61
 3164 0429 4A010000 		.4byte	0x14a
 3165 042d 02       		.uleb128 0x2
 3166 042e 91       		.byte	0x91
 3167 042f 5C       		.sleb128 -36
 3168 0430 0E       		.uleb128 0xe
 3169 0431 B7010000 		.4byte	.LASF79
 3170 0435 01       		.byte	0x1
 3171 0436 63       		.byte	0x63
 3172 0437 5C010000 		.4byte	0x15c
 3173 043b 02       		.uleb128 0x2
 3174 043c 91       		.byte	0x91
 3175 043d 76       		.sleb128 -10
 3176 043e 0E       		.uleb128 0xe
 3177 043f 16060000 		.4byte	.LASF80
 3178 0443 01       		.byte	0x1
 3179 0444 64       		.byte	0x64
 3180 0445 8D000000 		.4byte	0x8d
 3181 0449 02       		.uleb128 0x2
 3182 044a 91       		.byte	0x91
 3183 044b 6F       		.sleb128 -17
 3184 044c 0E       		.uleb128 0xe
 3185 044d E0030000 		.4byte	.LASF81
 3186 0451 01       		.byte	0x1
 3187 0452 65       		.byte	0x65
 3188 0453 82000000 		.4byte	0x82
 3189 0457 02       		.uleb128 0x2
 3190 0458 91       		.byte	0x91
 3191 0459 75       		.sleb128 -11
 3192 045a 0E       		.uleb128 0xe
 3193 045b 8D010000 		.4byte	.LASF82
 3194 045f 01       		.byte	0x1
 3195 0460 67       		.byte	0x67
 3196 0461 C7000000 		.4byte	0xc7
 3197 0465 02       		.uleb128 0x2
 3198 0466 91       		.byte	0x91
 3199 0467 70       		.sleb128 -16
 3200 0468 00       		.byte	0
 3201 0469 0B       		.uleb128 0xb
 3202 046a 04       		.byte	0x4
 3203 046b AA010000 		.4byte	0x1aa
 3204 046f 0C       		.uleb128 0xc
 3205 0470 63040000 		.4byte	.LASF84
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 79


 3206 0474 01       		.byte	0x1
 3207 0475 D9       		.byte	0xd9
 3208 0476 69040000 		.4byte	0x469
 3209 047a 00000000 		.4byte	.LFB2
 3210 047e 90000000 		.4byte	.LFE2-.LFB2
 3211 0482 01       		.uleb128 0x1
 3212 0483 9C       		.byte	0x9c
 3213 0484 C1040000 		.4byte	0x4c1
 3214 0488 0D       		.uleb128 0xd
 3215 0489 CB050000 		.4byte	.LASF76
 3216 048d 01       		.byte	0x1
 3217 048e D9       		.byte	0xd9
 3218 048f 5C010000 		.4byte	0x15c
 3219 0493 02       		.uleb128 0x2
 3220 0494 91       		.byte	0x91
 3221 0495 6E       		.sleb128 -18
 3222 0496 0D       		.uleb128 0xd
 3223 0497 D5000000 		.4byte	.LASF78
 3224 049b 01       		.byte	0x1
 3225 049c DA       		.byte	0xda
 3226 049d 4A010000 		.4byte	0x14a
 3227 04a1 02       		.uleb128 0x2
 3228 04a2 91       		.byte	0x91
 3229 04a3 68       		.sleb128 -24
 3230 04a4 0E       		.uleb128 0xe
 3231 04a5 F1040000 		.4byte	.LASF75
 3232 04a9 01       		.byte	0x1
 3233 04aa DC       		.byte	0xdc
 3234 04ab 69040000 		.4byte	0x469
 3235 04af 02       		.uleb128 0x2
 3236 04b0 91       		.byte	0x91
 3237 04b1 70       		.sleb128 -16
 3238 04b2 0E       		.uleb128 0xe
 3239 04b3 8D010000 		.4byte	.LASF82
 3240 04b7 01       		.byte	0x1
 3241 04b8 DE       		.byte	0xde
 3242 04b9 C7000000 		.4byte	0xc7
 3243 04bd 02       		.uleb128 0x2
 3244 04be 91       		.byte	0x91
 3245 04bf 74       		.sleb128 -12
 3246 04c0 00       		.byte	0
 3247 04c1 0F       		.uleb128 0xf
 3248 04c2 7A020000 		.4byte	.LASF85
 3249 04c6 01       		.byte	0x1
 3250 04c7 3101     		.2byte	0x131
 3251 04c9 69040000 		.4byte	0x469
 3252 04cd 00000000 		.4byte	.LFB3
 3253 04d1 5C010000 		.4byte	.LFE3-.LFB3
 3254 04d5 01       		.uleb128 0x1
 3255 04d6 9C       		.byte	0x9c
 3256 04d7 45050000 		.4byte	0x545
 3257 04db 10       		.uleb128 0x10
 3258 04dc F1040000 		.4byte	.LASF75
 3259 04e0 01       		.byte	0x1
 3260 04e1 3101     		.2byte	0x131
 3261 04e3 69040000 		.4byte	0x469
 3262 04e7 02       		.uleb128 0x2
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 80


 3263 04e8 91       		.byte	0x91
 3264 04e9 64       		.sleb128 -28
 3265 04ea 11       		.uleb128 0x11
 3266 04eb 6F707400 		.ascii	"opt\000"
 3267 04ef 01       		.byte	0x1
 3268 04f0 3201     		.2byte	0x132
 3269 04f2 8D000000 		.4byte	0x8d
 3270 04f6 02       		.uleb128 0x2
 3271 04f7 91       		.byte	0x91
 3272 04f8 63       		.sleb128 -29
 3273 04f9 10       		.uleb128 0x10
 3274 04fa D5000000 		.4byte	.LASF78
 3275 04fe 01       		.byte	0x1
 3276 04ff 3301     		.2byte	0x133
 3277 0501 4A010000 		.4byte	0x14a
 3278 0505 02       		.uleb128 0x2
 3279 0506 91       		.byte	0x91
 3280 0507 5C       		.sleb128 -36
 3281 0508 12       		.uleb128 0x12
 3282 0509 A6040000 		.4byte	.LASF86
 3283 050d 01       		.byte	0x1
 3284 050e 3501     		.2byte	0x135
 3285 0510 82000000 		.4byte	0x82
 3286 0514 02       		.uleb128 0x2
 3287 0515 91       		.byte	0x91
 3288 0516 77       		.sleb128 -9
 3289 0517 12       		.uleb128 0x12
 3290 0518 0E000000 		.4byte	.LASF87
 3291 051c 01       		.byte	0x1
 3292 051d 3601     		.2byte	0x136
 3293 051f BD030000 		.4byte	0x3bd
 3294 0523 02       		.uleb128 0x2
 3295 0524 91       		.byte	0x91
 3296 0525 70       		.sleb128 -16
 3297 0526 12       		.uleb128 0x12
 3298 0527 57040000 		.4byte	.LASF88
 3299 052b 01       		.byte	0x1
 3300 052c 3701     		.2byte	0x137
 3301 052e 69040000 		.4byte	0x469
 3302 0532 02       		.uleb128 0x2
 3303 0533 91       		.byte	0x91
 3304 0534 6C       		.sleb128 -20
 3305 0535 12       		.uleb128 0x12
 3306 0536 8D010000 		.4byte	.LASF82
 3307 053a 01       		.byte	0x1
 3308 053b 3901     		.2byte	0x139
 3309 053d C7000000 		.4byte	0xc7
 3310 0541 02       		.uleb128 0x2
 3311 0542 91       		.byte	0x91
 3312 0543 68       		.sleb128 -24
 3313 0544 00       		.byte	0
 3314 0545 0F       		.uleb128 0xf
 3315 0546 37020000 		.4byte	.LASF89
 3316 054a 01       		.byte	0x1
 3317 054b A401     		.2byte	0x1a4
 3318 054d 8D000000 		.4byte	0x8d
 3319 0551 00000000 		.4byte	.LFB4
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 81


 3320 0555 A0000000 		.4byte	.LFE4-.LFB4
 3321 0559 01       		.uleb128 0x1
 3322 055a 9C       		.byte	0x9c
 3323 055b AB050000 		.4byte	0x5ab
 3324 055f 10       		.uleb128 0x10
 3325 0560 F1040000 		.4byte	.LASF75
 3326 0564 01       		.byte	0x1
 3327 0565 A401     		.2byte	0x1a4
 3328 0567 69040000 		.4byte	0x469
 3329 056b 02       		.uleb128 0x2
 3330 056c 91       		.byte	0x91
 3331 056d 64       		.sleb128 -28
 3332 056e 10       		.uleb128 0x10
 3333 056f E2040000 		.4byte	.LASF90
 3334 0573 01       		.byte	0x1
 3335 0574 A501     		.2byte	0x1a5
 3336 0576 AB050000 		.4byte	0x5ab
 3337 057a 02       		.uleb128 0x2
 3338 057b 91       		.byte	0x91
 3339 057c 60       		.sleb128 -32
 3340 057d 10       		.uleb128 0x10
 3341 057e D5000000 		.4byte	.LASF78
 3342 0582 01       		.byte	0x1
 3343 0583 A601     		.2byte	0x1a6
 3344 0585 4A010000 		.4byte	0x14a
 3345 0589 02       		.uleb128 0x2
 3346 058a 91       		.byte	0x91
 3347 058b 5C       		.sleb128 -36
 3348 058c 13       		.uleb128 0x13
 3349 058d 6C656E00 		.ascii	"len\000"
 3350 0591 01       		.byte	0x1
 3351 0592 A801     		.2byte	0x1a8
 3352 0594 8D000000 		.4byte	0x8d
 3353 0598 02       		.uleb128 0x2
 3354 0599 91       		.byte	0x91
 3355 059a 6B       		.sleb128 -21
 3356 059b 12       		.uleb128 0x12
 3357 059c 8D010000 		.4byte	.LASF82
 3358 05a0 01       		.byte	0x1
 3359 05a1 AA01     		.2byte	0x1aa
 3360 05a3 C7000000 		.4byte	0xc7
 3361 05a7 02       		.uleb128 0x2
 3362 05a8 91       		.byte	0x91
 3363 05a9 6C       		.sleb128 -20
 3364 05aa 00       		.byte	0
 3365 05ab 0B       		.uleb128 0xb
 3366 05ac 04       		.byte	0x4
 3367 05ad 4A010000 		.4byte	0x14a
 3368 05b1 14       		.uleb128 0x14
 3369 05b2 56010000 		.4byte	.LASF101
 3370 05b6 01       		.byte	0x1
 3371 05b7 EB01     		.2byte	0x1eb
 3372 05b9 00000000 		.4byte	.LFB5
 3373 05bd 7C000000 		.4byte	.LFE5-.LFB5
 3374 05c1 01       		.uleb128 0x1
 3375 05c2 9C       		.byte	0x9c
 3376 05c3 04060000 		.4byte	0x604
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 82


 3377 05c7 10       		.uleb128 0x10
 3378 05c8 F1040000 		.4byte	.LASF75
 3379 05cc 01       		.byte	0x1
 3380 05cd EB01     		.2byte	0x1eb
 3381 05cf 69040000 		.4byte	0x469
 3382 05d3 02       		.uleb128 0x2
 3383 05d4 91       		.byte	0x91
 3384 05d5 6C       		.sleb128 -20
 3385 05d6 10       		.uleb128 0x10
 3386 05d7 E2040000 		.4byte	.LASF90
 3387 05db 01       		.byte	0x1
 3388 05dc EC01     		.2byte	0x1ec
 3389 05de 4A010000 		.4byte	0x14a
 3390 05e2 02       		.uleb128 0x2
 3391 05e3 91       		.byte	0x91
 3392 05e4 68       		.sleb128 -24
 3393 05e5 10       		.uleb128 0x10
 3394 05e6 D5000000 		.4byte	.LASF78
 3395 05ea 01       		.byte	0x1
 3396 05eb ED01     		.2byte	0x1ed
 3397 05ed 4A010000 		.4byte	0x14a
 3398 05f1 02       		.uleb128 0x2
 3399 05f2 91       		.byte	0x91
 3400 05f3 64       		.sleb128 -28
 3401 05f4 12       		.uleb128 0x12
 3402 05f5 8D010000 		.4byte	.LASF82
 3403 05f9 01       		.byte	0x1
 3404 05fa F001     		.2byte	0x1f0
 3405 05fc C7000000 		.4byte	0xc7
 3406 0600 02       		.uleb128 0x2
 3407 0601 91       		.byte	0x91
 3408 0602 74       		.sleb128 -12
 3409 0603 00       		.byte	0
 3410 0604 0F       		.uleb128 0xf
 3411 0605 C9030000 		.4byte	.LASF91
 3412 0609 01       		.byte	0x1
 3413 060a 4E02     		.2byte	0x24e
 3414 060c 5C010000 		.4byte	0x15c
 3415 0610 00000000 		.4byte	.LFB6
 3416 0614 10040000 		.4byte	.LFE6-.LFB6
 3417 0618 01       		.uleb128 0x1
 3418 0619 9C       		.byte	0x9c
 3419 061a C5060000 		.4byte	0x6c5
 3420 061e 10       		.uleb128 0x10
 3421 061f F1040000 		.4byte	.LASF75
 3422 0623 01       		.byte	0x1
 3423 0624 4E02     		.2byte	0x24e
 3424 0626 69040000 		.4byte	0x469
 3425 062a 02       		.uleb128 0x2
 3426 062b 91       		.byte	0x91
 3427 062c 44       		.sleb128 -60
 3428 062d 10       		.uleb128 0x10
 3429 062e CB050000 		.4byte	.LASF76
 3430 0632 01       		.byte	0x1
 3431 0633 4F02     		.2byte	0x24f
 3432 0635 5C010000 		.4byte	0x15c
 3433 0639 02       		.uleb128 0x2
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 83


 3434 063a 91       		.byte	0x91
 3435 063b 42       		.sleb128 -62
 3436 063c 10       		.uleb128 0x10
 3437 063d ED000000 		.4byte	.LASF77
 3438 0641 01       		.byte	0x1
 3439 0642 5002     		.2byte	0x250
 3440 0644 8D000000 		.4byte	0x8d
 3441 0648 02       		.uleb128 0x2
 3442 0649 91       		.byte	0x91
 3443 064a 41       		.sleb128 -63
 3444 064b 10       		.uleb128 0x10
 3445 064c 2F020000 		.4byte	.LASF92
 3446 0650 01       		.byte	0x1
 3447 0651 5102     		.2byte	0x251
 3448 0653 A3000000 		.4byte	0xa3
 3449 0657 03       		.uleb128 0x3
 3450 0658 91       		.byte	0x91
 3451 0659 BC7F     		.sleb128 -68
 3452 065b 10       		.uleb128 0x10
 3453 065c D5000000 		.4byte	.LASF78
 3454 0660 01       		.byte	0x1
 3455 0661 5202     		.2byte	0x252
 3456 0663 4A010000 		.4byte	0x14a
 3457 0667 02       		.uleb128 0x2
 3458 0668 91       		.byte	0x91
 3459 0669 00       		.sleb128 0
 3460 066a 12       		.uleb128 0x12
 3461 066b 2A040000 		.4byte	.LASF93
 3462 066f 01       		.byte	0x1
 3463 0670 5402     		.2byte	0x254
 3464 0672 12020000 		.4byte	0x212
 3465 0676 02       		.uleb128 0x2
 3466 0677 91       		.byte	0x91
 3467 0678 4C       		.sleb128 -52
 3468 0679 12       		.uleb128 0x12
 3469 067a B7010000 		.4byte	.LASF79
 3470 067e 01       		.byte	0x1
 3471 067f 5502     		.2byte	0x255
 3472 0681 5C010000 		.4byte	0x15c
 3473 0685 02       		.uleb128 0x2
 3474 0686 91       		.byte	0x91
 3475 0687 64       		.sleb128 -28
 3476 0688 12       		.uleb128 0x12
 3477 0689 16060000 		.4byte	.LASF80
 3478 068d 01       		.byte	0x1
 3479 068e 5602     		.2byte	0x256
 3480 0690 8D000000 		.4byte	0x8d
 3481 0694 02       		.uleb128 0x2
 3482 0695 91       		.byte	0x91
 3483 0696 67       		.sleb128 -25
 3484 0697 12       		.uleb128 0x12
 3485 0698 9C000000 		.4byte	.LASF94
 3486 069c 01       		.byte	0x1
 3487 069d 5702     		.2byte	0x257
 3488 069f 8D000000 		.4byte	0x8d
 3489 06a3 02       		.uleb128 0x2
 3490 06a4 91       		.byte	0x91
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 84


 3491 06a5 63       		.sleb128 -29
 3492 06a6 12       		.uleb128 0x12
 3493 06a7 E0030000 		.4byte	.LASF81
 3494 06ab 01       		.byte	0x1
 3495 06ac 5802     		.2byte	0x258
 3496 06ae 82000000 		.4byte	0x82
 3497 06b2 02       		.uleb128 0x2
 3498 06b3 91       		.byte	0x91
 3499 06b4 6F       		.sleb128 -17
 3500 06b5 12       		.uleb128 0x12
 3501 06b6 8D010000 		.4byte	.LASF82
 3502 06ba 01       		.byte	0x1
 3503 06bb 5A02     		.2byte	0x25a
 3504 06bd C7000000 		.4byte	0xc7
 3505 06c1 02       		.uleb128 0x2
 3506 06c2 91       		.byte	0x91
 3507 06c3 68       		.sleb128 -24
 3508 06c4 00       		.byte	0
 3509 06c5 0F       		.uleb128 0xf
 3510 06c6 B4040000 		.4byte	.LASF95
 3511 06ca 01       		.byte	0x1
 3512 06cb 0803     		.2byte	0x308
 3513 06cd 5C010000 		.4byte	0x15c
 3514 06d1 00000000 		.4byte	.LFB7
 3515 06d5 34000000 		.4byte	.LFE7-.LFB7
 3516 06d9 01       		.uleb128 0x1
 3517 06da 9C       		.byte	0x9c
 3518 06db FE060000 		.4byte	0x6fe
 3519 06df 12       		.uleb128 0x12
 3520 06e0 CB050000 		.4byte	.LASF76
 3521 06e4 01       		.byte	0x1
 3522 06e5 0A03     		.2byte	0x30a
 3523 06e7 5C010000 		.4byte	0x15c
 3524 06eb 02       		.uleb128 0x2
 3525 06ec 91       		.byte	0x91
 3526 06ed 72       		.sleb128 -14
 3527 06ee 12       		.uleb128 0x12
 3528 06ef 8D010000 		.4byte	.LASF82
 3529 06f3 01       		.byte	0x1
 3530 06f4 0C03     		.2byte	0x30c
 3531 06f6 C7000000 		.4byte	0xc7
 3532 06fa 02       		.uleb128 0x2
 3533 06fb 91       		.byte	0x91
 3534 06fc 74       		.sleb128 -12
 3535 06fd 00       		.byte	0
 3536 06fe 0F       		.uleb128 0xf
 3537 06ff 84020000 		.4byte	.LASF96
 3538 0703 01       		.byte	0x1
 3539 0704 4103     		.2byte	0x341
 3540 0706 5C010000 		.4byte	0x15c
 3541 070a 00000000 		.4byte	.LFB8
 3542 070e 66020000 		.4byte	.LFE8-.LFB8
 3543 0712 01       		.uleb128 0x1
 3544 0713 9C       		.byte	0x9c
 3545 0714 AF070000 		.4byte	0x7af
 3546 0718 10       		.uleb128 0x10
 3547 0719 F1040000 		.4byte	.LASF75
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 85


 3548 071d 01       		.byte	0x1
 3549 071e 4103     		.2byte	0x341
 3550 0720 69040000 		.4byte	0x469
 3551 0724 02       		.uleb128 0x2
 3552 0725 91       		.byte	0x91
 3553 0726 54       		.sleb128 -44
 3554 0727 10       		.uleb128 0x10
 3555 0728 CB050000 		.4byte	.LASF76
 3556 072c 01       		.byte	0x1
 3557 072d 4203     		.2byte	0x342
 3558 072f 5C010000 		.4byte	0x15c
 3559 0733 02       		.uleb128 0x2
 3560 0734 91       		.byte	0x91
 3561 0735 52       		.sleb128 -46
 3562 0736 11       		.uleb128 0x11
 3563 0737 6F707400 		.ascii	"opt\000"
 3564 073b 01       		.byte	0x1
 3565 073c 4303     		.2byte	0x343
 3566 073e 8D000000 		.4byte	0x8d
 3567 0742 02       		.uleb128 0x2
 3568 0743 91       		.byte	0x91
 3569 0744 51       		.sleb128 -47
 3570 0745 10       		.uleb128 0x10
 3571 0746 D5000000 		.4byte	.LASF78
 3572 074a 01       		.byte	0x1
 3573 074b 4403     		.2byte	0x344
 3574 074d 4A010000 		.4byte	0x14a
 3575 0751 02       		.uleb128 0x2
 3576 0752 91       		.byte	0x91
 3577 0753 4C       		.sleb128 -52
 3578 0754 12       		.uleb128 0x12
 3579 0755 0E000000 		.4byte	.LASF87
 3580 0759 01       		.byte	0x1
 3581 075a 4603     		.2byte	0x346
 3582 075c BD030000 		.4byte	0x3bd
 3583 0760 02       		.uleb128 0x2
 3584 0761 91       		.byte	0x91
 3585 0762 6C       		.sleb128 -20
 3586 0763 12       		.uleb128 0x12
 3587 0764 23050000 		.4byte	.LASF97
 3588 0768 01       		.byte	0x1
 3589 0769 4703     		.2byte	0x347
 3590 076b 82000000 		.4byte	0x82
 3591 076f 02       		.uleb128 0x2
 3592 0770 91       		.byte	0x91
 3593 0771 6B       		.sleb128 -21
 3594 0772 12       		.uleb128 0x12
 3595 0773 64010000 		.4byte	.LASF98
 3596 0777 01       		.byte	0x1
 3597 0778 4803     		.2byte	0x348
 3598 077a 5C010000 		.4byte	0x15c
 3599 077e 02       		.uleb128 0x2
 3600 077f 91       		.byte	0x91
 3601 0780 5E       		.sleb128 -34
 3602 0781 12       		.uleb128 0x12
 3603 0782 B7010000 		.4byte	.LASF79
 3604 0786 01       		.byte	0x1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 86


 3605 0787 4903     		.2byte	0x349
 3606 0789 5C010000 		.4byte	0x15c
 3607 078d 02       		.uleb128 0x2
 3608 078e 91       		.byte	0x91
 3609 078f 62       		.sleb128 -30
 3610 0790 13       		.uleb128 0x13
 3611 0791 72647900 		.ascii	"rdy\000"
 3612 0795 01       		.byte	0x1
 3613 0796 4A03     		.2byte	0x34a
 3614 0798 82000000 		.4byte	0x82
 3615 079c 02       		.uleb128 0x2
 3616 079d 91       		.byte	0x91
 3617 079e 61       		.sleb128 -31
 3618 079f 12       		.uleb128 0x12
 3619 07a0 8D010000 		.4byte	.LASF82
 3620 07a4 01       		.byte	0x1
 3621 07a5 4C03     		.2byte	0x34c
 3622 07a7 C7000000 		.4byte	0xc7
 3623 07ab 02       		.uleb128 0x2
 3624 07ac 91       		.byte	0x91
 3625 07ad 64       		.sleb128 -28
 3626 07ae 00       		.byte	0
 3627 07af 0F       		.uleb128 0xf
 3628 07b0 DA000000 		.4byte	.LASF99
 3629 07b4 01       		.byte	0x1
 3630 07b5 C503     		.2byte	0x3c5
 3631 07b7 5C010000 		.4byte	0x15c
 3632 07bb 00000000 		.4byte	.LFB9
 3633 07bf 5E000000 		.4byte	.LFE9-.LFB9
 3634 07c3 01       		.uleb128 0x1
 3635 07c4 9C       		.byte	0x9c
 3636 07c5 06080000 		.4byte	0x806
 3637 07c9 10       		.uleb128 0x10
 3638 07ca F1040000 		.4byte	.LASF75
 3639 07ce 01       		.byte	0x1
 3640 07cf C503     		.2byte	0x3c5
 3641 07d1 69040000 		.4byte	0x469
 3642 07d5 02       		.uleb128 0x2
 3643 07d6 91       		.byte	0x91
 3644 07d7 6C       		.sleb128 -20
 3645 07d8 10       		.uleb128 0x10
 3646 07d9 D5000000 		.4byte	.LASF78
 3647 07dd 01       		.byte	0x1
 3648 07de C603     		.2byte	0x3c6
 3649 07e0 4A010000 		.4byte	0x14a
 3650 07e4 02       		.uleb128 0x2
 3651 07e5 91       		.byte	0x91
 3652 07e6 68       		.sleb128 -24
 3653 07e7 12       		.uleb128 0x12
 3654 07e8 CB050000 		.4byte	.LASF76
 3655 07ec 01       		.byte	0x1
 3656 07ed C803     		.2byte	0x3c8
 3657 07ef 5C010000 		.4byte	0x15c
 3658 07f3 02       		.uleb128 0x2
 3659 07f4 91       		.byte	0x91
 3660 07f5 72       		.sleb128 -14
 3661 07f6 12       		.uleb128 0x12
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 87


 3662 07f7 8D010000 		.4byte	.LASF82
 3663 07fb 01       		.byte	0x1
 3664 07fc CA03     		.2byte	0x3ca
 3665 07fe C7000000 		.4byte	0xc7
 3666 0802 02       		.uleb128 0x2
 3667 0803 91       		.byte	0x91
 3668 0804 74       		.sleb128 -12
 3669 0805 00       		.byte	0
 3670 0806 15       		.uleb128 0x15
 3671 0807 C1010000 		.4byte	.LASF119
 3672 080b 01       		.byte	0x1
 3673 080c 0E04     		.2byte	0x40e
 3674 080e 00000000 		.4byte	.LFB10
 3675 0812 F8000000 		.4byte	.LFE10-.LFB10
 3676 0816 01       		.uleb128 0x1
 3677 0817 9C       		.byte	0x9c
 3678 0818 84080000 		.4byte	0x884
 3679 081c 10       		.uleb128 0x10
 3680 081d F1040000 		.4byte	.LASF75
 3681 0821 01       		.byte	0x1
 3682 0822 0E04     		.2byte	0x40e
 3683 0824 69040000 		.4byte	0x469
 3684 0828 02       		.uleb128 0x2
 3685 0829 91       		.byte	0x91
 3686 082a 6C       		.sleb128 -20
 3687 082b 10       		.uleb128 0x10
 3688 082c 0E000000 		.4byte	.LASF87
 3689 0830 01       		.byte	0x1
 3690 0831 0F04     		.2byte	0x40f
 3691 0833 BD030000 		.4byte	0x3bd
 3692 0837 02       		.uleb128 0x2
 3693 0838 91       		.byte	0x91
 3694 0839 68       		.sleb128 -24
 3695 083a 10       		.uleb128 0x10
 3696 083b CB050000 		.4byte	.LASF76
 3697 083f 01       		.byte	0x1
 3698 0840 1004     		.2byte	0x410
 3699 0842 5C010000 		.4byte	0x15c
 3700 0846 02       		.uleb128 0x2
 3701 0847 91       		.byte	0x91
 3702 0848 66       		.sleb128 -26
 3703 0849 10       		.uleb128 0x10
 3704 084a ED000000 		.4byte	.LASF77
 3705 084e 01       		.byte	0x1
 3706 084f 1104     		.2byte	0x411
 3707 0851 8D000000 		.4byte	0x8d
 3708 0855 02       		.uleb128 0x2
 3709 0856 91       		.byte	0x91
 3710 0857 65       		.sleb128 -27
 3711 0858 10       		.uleb128 0x10
 3712 0859 2F020000 		.4byte	.LASF92
 3713 085d 01       		.byte	0x1
 3714 085e 1204     		.2byte	0x412
 3715 0860 A3000000 		.4byte	0xa3
 3716 0864 02       		.uleb128 0x2
 3717 0865 91       		.byte	0x91
 3718 0866 00       		.sleb128 0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 88


 3719 0867 12       		.uleb128 0x12
 3720 0868 08040000 		.4byte	.LASF100
 3721 086c 01       		.byte	0x1
 3722 086d 1404     		.2byte	0x414
 3723 086f BD030000 		.4byte	0x3bd
 3724 0873 02       		.uleb128 0x2
 3725 0874 91       		.byte	0x91
 3726 0875 74       		.sleb128 -12
 3727 0876 13       		.uleb128 0x13
 3728 0877 7900     		.ascii	"y\000"
 3729 0879 01       		.byte	0x1
 3730 087a 1504     		.2byte	0x415
 3731 087c 8D000000 		.4byte	0x8d
 3732 0880 02       		.uleb128 0x2
 3733 0881 91       		.byte	0x91
 3734 0882 73       		.sleb128 -13
 3735 0883 00       		.byte	0
 3736 0884 14       		.uleb128 0x14
 3737 0885 DE010000 		.4byte	.LASF102
 3738 0889 01       		.byte	0x1
 3739 088a 4104     		.2byte	0x441
 3740 088c 00000000 		.4byte	.LFB11
 3741 0890 A8000000 		.4byte	.LFE11-.LFB11
 3742 0894 01       		.uleb128 0x1
 3743 0895 9C       		.byte	0x9c
 3744 0896 D6080000 		.4byte	0x8d6
 3745 089a 13       		.uleb128 0x13
 3746 089b 697800   		.ascii	"ix\000"
 3747 089e 01       		.byte	0x1
 3748 089f 4E04     		.2byte	0x44e
 3749 08a1 98000000 		.4byte	0x98
 3750 08a5 02       		.uleb128 0x2
 3751 08a6 91       		.byte	0x91
 3752 08a7 76       		.sleb128 -10
 3753 08a8 12       		.uleb128 0x12
 3754 08a9 26010000 		.4byte	.LASF103
 3755 08ad 01       		.byte	0x1
 3756 08ae 4F04     		.2byte	0x44f
 3757 08b0 98000000 		.4byte	0x98
 3758 08b4 02       		.uleb128 0x2
 3759 08b5 91       		.byte	0x91
 3760 08b6 74       		.sleb128 -12
 3761 08b7 12       		.uleb128 0x12
 3762 08b8 D6040000 		.4byte	.LASF104
 3763 08bc 01       		.byte	0x1
 3764 08bd 5004     		.2byte	0x450
 3765 08bf 69040000 		.4byte	0x469
 3766 08c3 02       		.uleb128 0x2
 3767 08c4 91       		.byte	0x91
 3768 08c5 70       		.sleb128 -16
 3769 08c6 12       		.uleb128 0x12
 3770 08c7 DC040000 		.4byte	.LASF105
 3771 08cb 01       		.byte	0x1
 3772 08cc 5104     		.2byte	0x451
 3773 08ce 69040000 		.4byte	0x469
 3774 08d2 02       		.uleb128 0x2
 3775 08d3 91       		.byte	0x91
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 89


 3776 08d4 6C       		.sleb128 -20
 3777 08d5 00       		.byte	0
 3778 08d6 16       		.uleb128 0x16
 3779 08d7 2E010000 		.4byte	.LASF120
 3780 08db 01       		.byte	0x1
 3781 08dc 8404     		.2byte	0x484
 3782 08de 82000000 		.4byte	0x82
 3783 08e2 00000000 		.4byte	.LFB12
 3784 08e6 B8000000 		.4byte	.LFE12-.LFB12
 3785 08ea 01       		.uleb128 0x1
 3786 08eb 9C       		.byte	0x9c
 3787 08ec 3C090000 		.4byte	0x93c
 3788 08f0 10       		.uleb128 0x10
 3789 08f1 0E000000 		.4byte	.LASF87
 3790 08f5 01       		.byte	0x1
 3791 08f6 8404     		.2byte	0x484
 3792 08f8 BD030000 		.4byte	0x3bd
 3793 08fc 02       		.uleb128 0x2
 3794 08fd 91       		.byte	0x91
 3795 08fe 6C       		.sleb128 -20
 3796 08ff 10       		.uleb128 0x10
 3797 0900 B7010000 		.4byte	.LASF79
 3798 0904 01       		.byte	0x1
 3799 0905 8504     		.2byte	0x485
 3800 0907 5C010000 		.4byte	0x15c
 3801 090b 02       		.uleb128 0x2
 3802 090c 91       		.byte	0x91
 3803 090d 6A       		.sleb128 -22
 3804 090e 10       		.uleb128 0x10
 3805 090f 9C000000 		.4byte	.LASF94
 3806 0913 01       		.byte	0x1
 3807 0914 8604     		.2byte	0x486
 3808 0916 8D000000 		.4byte	0x8d
 3809 091a 02       		.uleb128 0x2
 3810 091b 91       		.byte	0x91
 3811 091c 69       		.sleb128 -23
 3812 091d 12       		.uleb128 0x12
 3813 091e 67020000 		.4byte	.LASF106
 3814 0922 01       		.byte	0x1
 3815 0923 8804     		.2byte	0x488
 3816 0925 3C090000 		.4byte	0x93c
 3817 0929 02       		.uleb128 0x2
 3818 092a 91       		.byte	0x91
 3819 092b 70       		.sleb128 -16
 3820 092c 12       		.uleb128 0x12
 3821 092d 23050000 		.4byte	.LASF97
 3822 0931 01       		.byte	0x1
 3823 0932 8904     		.2byte	0x489
 3824 0934 82000000 		.4byte	0x82
 3825 0938 02       		.uleb128 0x2
 3826 0939 91       		.byte	0x91
 3827 093a 77       		.sleb128 -9
 3828 093b 00       		.byte	0
 3829 093c 0B       		.uleb128 0xb
 3830 093d 04       		.byte	0x4
 3831 093e D3030000 		.4byte	0x3d3
 3832 0942 17       		.uleb128 0x17
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 90


 3833 0943 F4030000 		.4byte	.LASF107
 3834 0947 01       		.byte	0x1
 3835 0948 B204     		.2byte	0x4b2
 3836 094a 00000000 		.4byte	.LFB13
 3837 094e 5A000000 		.4byte	.LFE13-.LFB13
 3838 0952 01       		.uleb128 0x1
 3839 0953 9C       		.byte	0x9c
 3840 0954 A4090000 		.4byte	0x9a4
 3841 0958 10       		.uleb128 0x10
 3842 0959 0E000000 		.4byte	.LASF87
 3843 095d 01       		.byte	0x1
 3844 095e B204     		.2byte	0x4b2
 3845 0960 BD030000 		.4byte	0x3bd
 3846 0964 02       		.uleb128 0x2
 3847 0965 91       		.byte	0x91
 3848 0966 64       		.sleb128 -28
 3849 0967 12       		.uleb128 0x12
 3850 0968 67020000 		.4byte	.LASF106
 3851 096c 01       		.byte	0x1
 3852 096d B504     		.2byte	0x4b5
 3853 096f 3C090000 		.4byte	0x93c
 3854 0973 02       		.uleb128 0x2
 3855 0974 91       		.byte	0x91
 3856 0975 68       		.sleb128 -24
 3857 0976 12       		.uleb128 0x12
 3858 0977 F1040000 		.4byte	.LASF75
 3859 097b 01       		.byte	0x1
 3860 097c B704     		.2byte	0x4b7
 3861 097e 69040000 		.4byte	0x469
 3862 0982 02       		.uleb128 0x2
 3863 0983 91       		.byte	0x91
 3864 0984 6C       		.sleb128 -20
 3865 0985 12       		.uleb128 0x12
 3866 0986 B4030000 		.4byte	.LASF108
 3867 098a 01       		.byte	0x1
 3868 098b B804     		.2byte	0x4b8
 3869 098d BD030000 		.4byte	0x3bd
 3870 0991 02       		.uleb128 0x2
 3871 0992 91       		.byte	0x91
 3872 0993 74       		.sleb128 -12
 3873 0994 12       		.uleb128 0x12
 3874 0995 08040000 		.4byte	.LASF100
 3875 0999 01       		.byte	0x1
 3876 099a B904     		.2byte	0x4b9
 3877 099c BD030000 		.4byte	0x3bd
 3878 09a0 02       		.uleb128 0x2
 3879 09a1 91       		.byte	0x91
 3880 09a2 70       		.sleb128 -16
 3881 09a3 00       		.byte	0
 3882 09a4 09       		.uleb128 0x9
 3883 09a5 AA010000 		.4byte	0x1aa
 3884 09a9 B4090000 		.4byte	0x9b4
 3885 09ad 0A       		.uleb128 0xa
 3886 09ae 74000000 		.4byte	0x74
 3887 09b2 04       		.byte	0x4
 3888 09b3 00       		.byte	0
 3889 09b4 18       		.uleb128 0x18
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 91


 3890 09b5 F7000000 		.4byte	.LASF109
 3891 09b9 03       		.byte	0x3
 3892 09ba B802     		.2byte	0x2b8
 3893 09bc A4090000 		.4byte	0x9a4
 3894 09c0 18       		.uleb128 0x18
 3895 09c1 67000000 		.4byte	.LASF110
 3896 09c5 03       		.byte	0x3
 3897 09c6 B902     		.2byte	0x2b9
 3898 09c8 69040000 		.4byte	0x469
 3899 09cc 18       		.uleb128 0x18
 3900 09cd B5050000 		.4byte	.LASF111
 3901 09d1 03       		.byte	0x3
 3902 09d2 C402     		.2byte	0x2c4
 3903 09d4 8D000000 		.4byte	0x8d
 3904 09d8 18       		.uleb128 0x18
 3905 09d9 1D060000 		.4byte	.LASF112
 3906 09dd 03       		.byte	0x3
 3907 09de C602     		.2byte	0x2c6
 3908 09e0 8D000000 		.4byte	0x8d
 3909 09e4 18       		.uleb128 0x18
 3910 09e5 C2050000 		.4byte	.LASF113
 3911 09e9 03       		.byte	0x3
 3912 09ea CB02     		.2byte	0x2cb
 3913 09ec D2000000 		.4byte	0xd2
 3914 09f0 18       		.uleb128 0x18
 3915 09f1 8F020000 		.4byte	.LASF114
 3916 09f5 03       		.byte	0x3
 3917 09f6 CC02     		.2byte	0x2cc
 3918 09f8 3A010000 		.4byte	0x13a
 3919 09fc 18       		.uleb128 0x18
 3920 09fd F6040000 		.4byte	.LASF115
 3921 0a01 03       		.byte	0x3
 3922 0a02 DB02     		.2byte	0x2db
 3923 0a04 3C090000 		.4byte	0x93c
 3924 0a08 00       		.byte	0
 3925              		.section	.debug_abbrev,"",%progbits
 3926              	.Ldebug_abbrev0:
 3927 0000 01       		.uleb128 0x1
 3928 0001 11       		.uleb128 0x11
 3929 0002 01       		.byte	0x1
 3930 0003 25       		.uleb128 0x25
 3931 0004 0E       		.uleb128 0xe
 3932 0005 13       		.uleb128 0x13
 3933 0006 0B       		.uleb128 0xb
 3934 0007 03       		.uleb128 0x3
 3935 0008 0E       		.uleb128 0xe
 3936 0009 1B       		.uleb128 0x1b
 3937 000a 0E       		.uleb128 0xe
 3938 000b 55       		.uleb128 0x55
 3939 000c 17       		.uleb128 0x17
 3940 000d 11       		.uleb128 0x11
 3941 000e 01       		.uleb128 0x1
 3942 000f 10       		.uleb128 0x10
 3943 0010 17       		.uleb128 0x17
 3944 0011 00       		.byte	0
 3945 0012 00       		.byte	0
 3946 0013 02       		.uleb128 0x2
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 92


 3947 0014 24       		.uleb128 0x24
 3948 0015 00       		.byte	0
 3949 0016 0B       		.uleb128 0xb
 3950 0017 0B       		.uleb128 0xb
 3951 0018 3E       		.uleb128 0x3e
 3952 0019 0B       		.uleb128 0xb
 3953 001a 03       		.uleb128 0x3
 3954 001b 0E       		.uleb128 0xe
 3955 001c 00       		.byte	0
 3956 001d 00       		.byte	0
 3957 001e 03       		.uleb128 0x3
 3958 001f 24       		.uleb128 0x24
 3959 0020 00       		.byte	0
 3960 0021 0B       		.uleb128 0xb
 3961 0022 0B       		.uleb128 0xb
 3962 0023 3E       		.uleb128 0x3e
 3963 0024 0B       		.uleb128 0xb
 3964 0025 03       		.uleb128 0x3
 3965 0026 08       		.uleb128 0x8
 3966 0027 00       		.byte	0
 3967 0028 00       		.byte	0
 3968 0029 04       		.uleb128 0x4
 3969 002a 0F       		.uleb128 0xf
 3970 002b 00       		.byte	0
 3971 002c 0B       		.uleb128 0xb
 3972 002d 0B       		.uleb128 0xb
 3973 002e 00       		.byte	0
 3974 002f 00       		.byte	0
 3975 0030 05       		.uleb128 0x5
 3976 0031 16       		.uleb128 0x16
 3977 0032 00       		.byte	0
 3978 0033 03       		.uleb128 0x3
 3979 0034 0E       		.uleb128 0xe
 3980 0035 3A       		.uleb128 0x3a
 3981 0036 0B       		.uleb128 0xb
 3982 0037 3B       		.uleb128 0x3b
 3983 0038 0B       		.uleb128 0xb
 3984 0039 49       		.uleb128 0x49
 3985 003a 13       		.uleb128 0x13
 3986 003b 00       		.byte	0
 3987 003c 00       		.byte	0
 3988 003d 06       		.uleb128 0x6
 3989 003e 16       		.uleb128 0x16
 3990 003f 00       		.byte	0
 3991 0040 03       		.uleb128 0x3
 3992 0041 0E       		.uleb128 0xe
 3993 0042 3A       		.uleb128 0x3a
 3994 0043 0B       		.uleb128 0xb
 3995 0044 3B       		.uleb128 0x3b
 3996 0045 05       		.uleb128 0x5
 3997 0046 49       		.uleb128 0x49
 3998 0047 13       		.uleb128 0x13
 3999 0048 00       		.byte	0
 4000 0049 00       		.byte	0
 4001 004a 07       		.uleb128 0x7
 4002 004b 13       		.uleb128 0x13
 4003 004c 01       		.byte	0x1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 93


 4004 004d 03       		.uleb128 0x3
 4005 004e 0E       		.uleb128 0xe
 4006 004f 0B       		.uleb128 0xb
 4007 0050 0B       		.uleb128 0xb
 4008 0051 3A       		.uleb128 0x3a
 4009 0052 0B       		.uleb128 0xb
 4010 0053 3B       		.uleb128 0x3b
 4011 0054 05       		.uleb128 0x5
 4012 0055 01       		.uleb128 0x1
 4013 0056 13       		.uleb128 0x13
 4014 0057 00       		.byte	0
 4015 0058 00       		.byte	0
 4016 0059 08       		.uleb128 0x8
 4017 005a 0D       		.uleb128 0xd
 4018 005b 00       		.byte	0
 4019 005c 03       		.uleb128 0x3
 4020 005d 0E       		.uleb128 0xe
 4021 005e 3A       		.uleb128 0x3a
 4022 005f 0B       		.uleb128 0xb
 4023 0060 3B       		.uleb128 0x3b
 4024 0061 05       		.uleb128 0x5
 4025 0062 49       		.uleb128 0x49
 4026 0063 13       		.uleb128 0x13
 4027 0064 38       		.uleb128 0x38
 4028 0065 0B       		.uleb128 0xb
 4029 0066 00       		.byte	0
 4030 0067 00       		.byte	0
 4031 0068 09       		.uleb128 0x9
 4032 0069 01       		.uleb128 0x1
 4033 006a 01       		.byte	0x1
 4034 006b 49       		.uleb128 0x49
 4035 006c 13       		.uleb128 0x13
 4036 006d 01       		.uleb128 0x1
 4037 006e 13       		.uleb128 0x13
 4038 006f 00       		.byte	0
 4039 0070 00       		.byte	0
 4040 0071 0A       		.uleb128 0xa
 4041 0072 21       		.uleb128 0x21
 4042 0073 00       		.byte	0
 4043 0074 49       		.uleb128 0x49
 4044 0075 13       		.uleb128 0x13
 4045 0076 2F       		.uleb128 0x2f
 4046 0077 0B       		.uleb128 0xb
 4047 0078 00       		.byte	0
 4048 0079 00       		.byte	0
 4049 007a 0B       		.uleb128 0xb
 4050 007b 0F       		.uleb128 0xf
 4051 007c 00       		.byte	0
 4052 007d 0B       		.uleb128 0xb
 4053 007e 0B       		.uleb128 0xb
 4054 007f 49       		.uleb128 0x49
 4055 0080 13       		.uleb128 0x13
 4056 0081 00       		.byte	0
 4057 0082 00       		.byte	0
 4058 0083 0C       		.uleb128 0xc
 4059 0084 2E       		.uleb128 0x2e
 4060 0085 01       		.byte	0x1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 94


 4061 0086 3F       		.uleb128 0x3f
 4062 0087 19       		.uleb128 0x19
 4063 0088 03       		.uleb128 0x3
 4064 0089 0E       		.uleb128 0xe
 4065 008a 3A       		.uleb128 0x3a
 4066 008b 0B       		.uleb128 0xb
 4067 008c 3B       		.uleb128 0x3b
 4068 008d 0B       		.uleb128 0xb
 4069 008e 27       		.uleb128 0x27
 4070 008f 19       		.uleb128 0x19
 4071 0090 49       		.uleb128 0x49
 4072 0091 13       		.uleb128 0x13
 4073 0092 11       		.uleb128 0x11
 4074 0093 01       		.uleb128 0x1
 4075 0094 12       		.uleb128 0x12
 4076 0095 06       		.uleb128 0x6
 4077 0096 40       		.uleb128 0x40
 4078 0097 18       		.uleb128 0x18
 4079 0098 9642     		.uleb128 0x2116
 4080 009a 19       		.uleb128 0x19
 4081 009b 01       		.uleb128 0x1
 4082 009c 13       		.uleb128 0x13
 4083 009d 00       		.byte	0
 4084 009e 00       		.byte	0
 4085 009f 0D       		.uleb128 0xd
 4086 00a0 05       		.uleb128 0x5
 4087 00a1 00       		.byte	0
 4088 00a2 03       		.uleb128 0x3
 4089 00a3 0E       		.uleb128 0xe
 4090 00a4 3A       		.uleb128 0x3a
 4091 00a5 0B       		.uleb128 0xb
 4092 00a6 3B       		.uleb128 0x3b
 4093 00a7 0B       		.uleb128 0xb
 4094 00a8 49       		.uleb128 0x49
 4095 00a9 13       		.uleb128 0x13
 4096 00aa 02       		.uleb128 0x2
 4097 00ab 18       		.uleb128 0x18
 4098 00ac 00       		.byte	0
 4099 00ad 00       		.byte	0
 4100 00ae 0E       		.uleb128 0xe
 4101 00af 34       		.uleb128 0x34
 4102 00b0 00       		.byte	0
 4103 00b1 03       		.uleb128 0x3
 4104 00b2 0E       		.uleb128 0xe
 4105 00b3 3A       		.uleb128 0x3a
 4106 00b4 0B       		.uleb128 0xb
 4107 00b5 3B       		.uleb128 0x3b
 4108 00b6 0B       		.uleb128 0xb
 4109 00b7 49       		.uleb128 0x49
 4110 00b8 13       		.uleb128 0x13
 4111 00b9 02       		.uleb128 0x2
 4112 00ba 18       		.uleb128 0x18
 4113 00bb 00       		.byte	0
 4114 00bc 00       		.byte	0
 4115 00bd 0F       		.uleb128 0xf
 4116 00be 2E       		.uleb128 0x2e
 4117 00bf 01       		.byte	0x1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 95


 4118 00c0 3F       		.uleb128 0x3f
 4119 00c1 19       		.uleb128 0x19
 4120 00c2 03       		.uleb128 0x3
 4121 00c3 0E       		.uleb128 0xe
 4122 00c4 3A       		.uleb128 0x3a
 4123 00c5 0B       		.uleb128 0xb
 4124 00c6 3B       		.uleb128 0x3b
 4125 00c7 05       		.uleb128 0x5
 4126 00c8 27       		.uleb128 0x27
 4127 00c9 19       		.uleb128 0x19
 4128 00ca 49       		.uleb128 0x49
 4129 00cb 13       		.uleb128 0x13
 4130 00cc 11       		.uleb128 0x11
 4131 00cd 01       		.uleb128 0x1
 4132 00ce 12       		.uleb128 0x12
 4133 00cf 06       		.uleb128 0x6
 4134 00d0 40       		.uleb128 0x40
 4135 00d1 18       		.uleb128 0x18
 4136 00d2 9642     		.uleb128 0x2116
 4137 00d4 19       		.uleb128 0x19
 4138 00d5 01       		.uleb128 0x1
 4139 00d6 13       		.uleb128 0x13
 4140 00d7 00       		.byte	0
 4141 00d8 00       		.byte	0
 4142 00d9 10       		.uleb128 0x10
 4143 00da 05       		.uleb128 0x5
 4144 00db 00       		.byte	0
 4145 00dc 03       		.uleb128 0x3
 4146 00dd 0E       		.uleb128 0xe
 4147 00de 3A       		.uleb128 0x3a
 4148 00df 0B       		.uleb128 0xb
 4149 00e0 3B       		.uleb128 0x3b
 4150 00e1 05       		.uleb128 0x5
 4151 00e2 49       		.uleb128 0x49
 4152 00e3 13       		.uleb128 0x13
 4153 00e4 02       		.uleb128 0x2
 4154 00e5 18       		.uleb128 0x18
 4155 00e6 00       		.byte	0
 4156 00e7 00       		.byte	0
 4157 00e8 11       		.uleb128 0x11
 4158 00e9 05       		.uleb128 0x5
 4159 00ea 00       		.byte	0
 4160 00eb 03       		.uleb128 0x3
 4161 00ec 08       		.uleb128 0x8
 4162 00ed 3A       		.uleb128 0x3a
 4163 00ee 0B       		.uleb128 0xb
 4164 00ef 3B       		.uleb128 0x3b
 4165 00f0 05       		.uleb128 0x5
 4166 00f1 49       		.uleb128 0x49
 4167 00f2 13       		.uleb128 0x13
 4168 00f3 02       		.uleb128 0x2
 4169 00f4 18       		.uleb128 0x18
 4170 00f5 00       		.byte	0
 4171 00f6 00       		.byte	0
 4172 00f7 12       		.uleb128 0x12
 4173 00f8 34       		.uleb128 0x34
 4174 00f9 00       		.byte	0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 96


 4175 00fa 03       		.uleb128 0x3
 4176 00fb 0E       		.uleb128 0xe
 4177 00fc 3A       		.uleb128 0x3a
 4178 00fd 0B       		.uleb128 0xb
 4179 00fe 3B       		.uleb128 0x3b
 4180 00ff 05       		.uleb128 0x5
 4181 0100 49       		.uleb128 0x49
 4182 0101 13       		.uleb128 0x13
 4183 0102 02       		.uleb128 0x2
 4184 0103 18       		.uleb128 0x18
 4185 0104 00       		.byte	0
 4186 0105 00       		.byte	0
 4187 0106 13       		.uleb128 0x13
 4188 0107 34       		.uleb128 0x34
 4189 0108 00       		.byte	0
 4190 0109 03       		.uleb128 0x3
 4191 010a 08       		.uleb128 0x8
 4192 010b 3A       		.uleb128 0x3a
 4193 010c 0B       		.uleb128 0xb
 4194 010d 3B       		.uleb128 0x3b
 4195 010e 05       		.uleb128 0x5
 4196 010f 49       		.uleb128 0x49
 4197 0110 13       		.uleb128 0x13
 4198 0111 02       		.uleb128 0x2
 4199 0112 18       		.uleb128 0x18
 4200 0113 00       		.byte	0
 4201 0114 00       		.byte	0
 4202 0115 14       		.uleb128 0x14
 4203 0116 2E       		.uleb128 0x2e
 4204 0117 01       		.byte	0x1
 4205 0118 3F       		.uleb128 0x3f
 4206 0119 19       		.uleb128 0x19
 4207 011a 03       		.uleb128 0x3
 4208 011b 0E       		.uleb128 0xe
 4209 011c 3A       		.uleb128 0x3a
 4210 011d 0B       		.uleb128 0xb
 4211 011e 3B       		.uleb128 0x3b
 4212 011f 05       		.uleb128 0x5
 4213 0120 27       		.uleb128 0x27
 4214 0121 19       		.uleb128 0x19
 4215 0122 11       		.uleb128 0x11
 4216 0123 01       		.uleb128 0x1
 4217 0124 12       		.uleb128 0x12
 4218 0125 06       		.uleb128 0x6
 4219 0126 40       		.uleb128 0x40
 4220 0127 18       		.uleb128 0x18
 4221 0128 9642     		.uleb128 0x2116
 4222 012a 19       		.uleb128 0x19
 4223 012b 01       		.uleb128 0x1
 4224 012c 13       		.uleb128 0x13
 4225 012d 00       		.byte	0
 4226 012e 00       		.byte	0
 4227 012f 15       		.uleb128 0x15
 4228 0130 2E       		.uleb128 0x2e
 4229 0131 01       		.byte	0x1
 4230 0132 03       		.uleb128 0x3
 4231 0133 0E       		.uleb128 0xe
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 97


 4232 0134 3A       		.uleb128 0x3a
 4233 0135 0B       		.uleb128 0xb
 4234 0136 3B       		.uleb128 0x3b
 4235 0137 05       		.uleb128 0x5
 4236 0138 27       		.uleb128 0x27
 4237 0139 19       		.uleb128 0x19
 4238 013a 11       		.uleb128 0x11
 4239 013b 01       		.uleb128 0x1
 4240 013c 12       		.uleb128 0x12
 4241 013d 06       		.uleb128 0x6
 4242 013e 40       		.uleb128 0x40
 4243 013f 18       		.uleb128 0x18
 4244 0140 9742     		.uleb128 0x2117
 4245 0142 19       		.uleb128 0x19
 4246 0143 01       		.uleb128 0x1
 4247 0144 13       		.uleb128 0x13
 4248 0145 00       		.byte	0
 4249 0146 00       		.byte	0
 4250 0147 16       		.uleb128 0x16
 4251 0148 2E       		.uleb128 0x2e
 4252 0149 01       		.byte	0x1
 4253 014a 03       		.uleb128 0x3
 4254 014b 0E       		.uleb128 0xe
 4255 014c 3A       		.uleb128 0x3a
 4256 014d 0B       		.uleb128 0xb
 4257 014e 3B       		.uleb128 0x3b
 4258 014f 05       		.uleb128 0x5
 4259 0150 27       		.uleb128 0x27
 4260 0151 19       		.uleb128 0x19
 4261 0152 49       		.uleb128 0x49
 4262 0153 13       		.uleb128 0x13
 4263 0154 11       		.uleb128 0x11
 4264 0155 01       		.uleb128 0x1
 4265 0156 12       		.uleb128 0x12
 4266 0157 06       		.uleb128 0x6
 4267 0158 40       		.uleb128 0x40
 4268 0159 18       		.uleb128 0x18
 4269 015a 9642     		.uleb128 0x2116
 4270 015c 19       		.uleb128 0x19
 4271 015d 01       		.uleb128 0x1
 4272 015e 13       		.uleb128 0x13
 4273 015f 00       		.byte	0
 4274 0160 00       		.byte	0
 4275 0161 17       		.uleb128 0x17
 4276 0162 2E       		.uleb128 0x2e
 4277 0163 01       		.byte	0x1
 4278 0164 3F       		.uleb128 0x3f
 4279 0165 19       		.uleb128 0x19
 4280 0166 03       		.uleb128 0x3
 4281 0167 0E       		.uleb128 0xe
 4282 0168 3A       		.uleb128 0x3a
 4283 0169 0B       		.uleb128 0xb
 4284 016a 3B       		.uleb128 0x3b
 4285 016b 05       		.uleb128 0x5
 4286 016c 27       		.uleb128 0x27
 4287 016d 19       		.uleb128 0x19
 4288 016e 11       		.uleb128 0x11
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 98


 4289 016f 01       		.uleb128 0x1
 4290 0170 12       		.uleb128 0x12
 4291 0171 06       		.uleb128 0x6
 4292 0172 40       		.uleb128 0x40
 4293 0173 18       		.uleb128 0x18
 4294 0174 9742     		.uleb128 0x2117
 4295 0176 19       		.uleb128 0x19
 4296 0177 01       		.uleb128 0x1
 4297 0178 13       		.uleb128 0x13
 4298 0179 00       		.byte	0
 4299 017a 00       		.byte	0
 4300 017b 18       		.uleb128 0x18
 4301 017c 34       		.uleb128 0x34
 4302 017d 00       		.byte	0
 4303 017e 03       		.uleb128 0x3
 4304 017f 0E       		.uleb128 0xe
 4305 0180 3A       		.uleb128 0x3a
 4306 0181 0B       		.uleb128 0xb
 4307 0182 3B       		.uleb128 0x3b
 4308 0183 05       		.uleb128 0x5
 4309 0184 49       		.uleb128 0x49
 4310 0185 13       		.uleb128 0x13
 4311 0186 3F       		.uleb128 0x3f
 4312 0187 19       		.uleb128 0x19
 4313 0188 3C       		.uleb128 0x3c
 4314 0189 19       		.uleb128 0x19
 4315 018a 00       		.byte	0
 4316 018b 00       		.byte	0
 4317 018c 00       		.byte	0
 4318              		.section	.debug_aranges,"",%progbits
 4319 0000 7C000000 		.4byte	0x7c
 4320 0004 0200     		.2byte	0x2
 4321 0006 00000000 		.4byte	.Ldebug_info0
 4322 000a 04       		.byte	0x4
 4323 000b 00       		.byte	0
 4324 000c 0000     		.2byte	0
 4325 000e 0000     		.2byte	0
 4326 0010 00000000 		.4byte	.LFB1
 4327 0014 16020000 		.4byte	.LFE1-.LFB1
 4328 0018 00000000 		.4byte	.LFB2
 4329 001c 90000000 		.4byte	.LFE2-.LFB2
 4330 0020 00000000 		.4byte	.LFB3
 4331 0024 5C010000 		.4byte	.LFE3-.LFB3
 4332 0028 00000000 		.4byte	.LFB4
 4333 002c A0000000 		.4byte	.LFE4-.LFB4
 4334 0030 00000000 		.4byte	.LFB5
 4335 0034 7C000000 		.4byte	.LFE5-.LFB5
 4336 0038 00000000 		.4byte	.LFB6
 4337 003c 10040000 		.4byte	.LFE6-.LFB6
 4338 0040 00000000 		.4byte	.LFB7
 4339 0044 34000000 		.4byte	.LFE7-.LFB7
 4340 0048 00000000 		.4byte	.LFB8
 4341 004c 66020000 		.4byte	.LFE8-.LFB8
 4342 0050 00000000 		.4byte	.LFB9
 4343 0054 5E000000 		.4byte	.LFE9-.LFB9
 4344 0058 00000000 		.4byte	.LFB10
 4345 005c F8000000 		.4byte	.LFE10-.LFB10
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 99


 4346 0060 00000000 		.4byte	.LFB11
 4347 0064 A8000000 		.4byte	.LFE11-.LFB11
 4348 0068 00000000 		.4byte	.LFB12
 4349 006c B8000000 		.4byte	.LFE12-.LFB12
 4350 0070 00000000 		.4byte	.LFB13
 4351 0074 5A000000 		.4byte	.LFE13-.LFB13
 4352 0078 00000000 		.4byte	0
 4353 007c 00000000 		.4byte	0
 4354              		.section	.debug_ranges,"",%progbits
 4355              	.Ldebug_ranges0:
 4356 0000 00000000 		.4byte	.LFB1
 4357 0004 16020000 		.4byte	.LFE1
 4358 0008 00000000 		.4byte	.LFB2
 4359 000c 90000000 		.4byte	.LFE2
 4360 0010 00000000 		.4byte	.LFB3
 4361 0014 5C010000 		.4byte	.LFE3
 4362 0018 00000000 		.4byte	.LFB4
 4363 001c A0000000 		.4byte	.LFE4
 4364 0020 00000000 		.4byte	.LFB5
 4365 0024 7C000000 		.4byte	.LFE5
 4366 0028 00000000 		.4byte	.LFB6
 4367 002c 10040000 		.4byte	.LFE6
 4368 0030 00000000 		.4byte	.LFB7
 4369 0034 34000000 		.4byte	.LFE7
 4370 0038 00000000 		.4byte	.LFB8
 4371 003c 66020000 		.4byte	.LFE8
 4372 0040 00000000 		.4byte	.LFB9
 4373 0044 5E000000 		.4byte	.LFE9
 4374 0048 00000000 		.4byte	.LFB10
 4375 004c F8000000 		.4byte	.LFE10
 4376 0050 00000000 		.4byte	.LFB11
 4377 0054 A8000000 		.4byte	.LFE11
 4378 0058 00000000 		.4byte	.LFB12
 4379 005c B8000000 		.4byte	.LFE12
 4380 0060 00000000 		.4byte	.LFB13
 4381 0064 5A000000 		.4byte	.LFE13
 4382 0068 00000000 		.4byte	0
 4383 006c 00000000 		.4byte	0
 4384              		.section	.debug_line,"",%progbits
 4385              	.Ldebug_line0:
 4386 0000 56030000 		.section	.debug_str,"MS",%progbits,1
 4386      0200A600 
 4386      00000201 
 4386      FB0E0D00 
 4386      01010101 
 4387              	.LASF39:
 4388 0000 4F53466C 		.ascii	"OSFlagNodeTCB\000"
 4388      61674E6F 
 4388      64655443 
 4388      4200
 4389              	.LASF87:
 4390 000e 706E6F64 		.ascii	"pnode\000"
 4390      6500
 4391              	.LASF43:
 4392 0014 4F535F46 		.ascii	"OS_FLAG_NODE\000"
 4392      4C41475F 
 4392      4E4F4445 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 100


 4392      00
 4393              	.LASF25:
 4394 0021 4F534576 		.ascii	"OSEventTbl\000"
 4394      656E7454 
 4394      626C00
 4395              	.LASF74:
 4396 002c 4F535F54 		.ascii	"OS_TCB\000"
 4396      434200
 4397              	.LASF117:
 4398 0033 2E2E5C2E 		.ascii	"..\\..\\..\\..\\..\\..\\Software\\uCOS-II\\Source\\"
 4398      2E5C2E2E 
 4398      5C2E2E5C 
 4398      2E2E5C2E 
 4398      2E5C536F 
 4399 005d 6F735F66 		.ascii	"os_flag.c\000"
 4399      6C61672E 
 4399      6300
 4400              	.LASF110:
 4401 0067 4F53466C 		.ascii	"OSFlagFreeList\000"
 4401      61674672 
 4401      65654C69 
 4401      737400
 4402              	.LASF4:
 4403 0076 6C6F6E67 		.ascii	"long int\000"
 4403      20696E74 
 4403      00
 4404              	.LASF69:
 4405 007f 4F535443 		.ascii	"OSTCBCyclesStart\000"
 4405      42437963 
 4405      6C657353 
 4405      74617274 
 4405      00
 4406              	.LASF26:
 4407 0090 4F534576 		.ascii	"OSEventName\000"
 4407      656E744E 
 4407      616D6500 
 4408              	.LASF94:
 4409 009c 70656E64 		.ascii	"pend_stat\000"
 4409      5F737461 
 4409      7400
 4410              	.LASF64:
 4411 00a6 4F535443 		.ascii	"OSTCBBitX\000"
 4411      42426974 
 4411      5800
 4412              	.LASF7:
 4413 00b0 6C6F6E67 		.ascii	"long long unsigned int\000"
 4413      206C6F6E 
 4413      6720756E 
 4413      7369676E 
 4413      65642069 
 4414              	.LASF72:
 4415 00c7 4F535443 		.ascii	"OSTCBTaskName\000"
 4415      42546173 
 4415      6B4E616D 
 4415      6500
 4416              	.LASF78:
 4417 00d5 70657272 		.ascii	"perr\000"
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 101


 4417      00
 4418              	.LASF99:
 4419 00da 4F53466C 		.ascii	"OSFlagQuery\000"
 4419      61675175 
 4419      65727900 
 4420              	.LASF14:
 4421 00e6 494E5431 		.ascii	"INT16U\000"
 4421      365500
 4422              	.LASF77:
 4423 00ed 77616974 		.ascii	"wait_type\000"
 4423      5F747970 
 4423      6500
 4424              	.LASF109:
 4425 00f7 4F53466C 		.ascii	"OSFlagTbl\000"
 4425      61675462 
 4425      6C00
 4426              	.LASF22:
 4427 0101 4F534576 		.ascii	"OSEventPtr\000"
 4427      656E7450 
 4427      747200
 4428              	.LASF6:
 4429 010c 6C6F6E67 		.ascii	"long long int\000"
 4429      206C6F6E 
 4429      6720696E 
 4429      7400
 4430              	.LASF0:
 4431 011a 7369676E 		.ascii	"signed char\000"
 4431      65642063 
 4431      68617200 
 4432              	.LASF103:
 4433 0126 69785F6E 		.ascii	"ix_next\000"
 4433      65787400 
 4434              	.LASF120:
 4435 012e 4F535F46 		.ascii	"OS_FlagTaskRdy\000"
 4435      6C616754 
 4435      61736B52 
 4435      647900
 4436              	.LASF40:
 4437 013d 4F53466C 		.ascii	"OSFlagNodeFlagGrp\000"
 4437      61674E6F 
 4437      6465466C 
 4437      61674772 
 4437      7000
 4438              	.LASF18:
 4439 014f 4F535F53 		.ascii	"OS_STK\000"
 4439      544B00
 4440              	.LASF101:
 4441 0156 4F53466C 		.ascii	"OSFlagNameSet\000"
 4441      61674E61 
 4441      6D655365 
 4441      7400
 4442              	.LASF98:
 4443 0164 666C6167 		.ascii	"flags_cur\000"
 4443      735F6375 
 4443      7200
 4444              	.LASF58:
 4445 016e 4F535443 		.ascii	"OSTCBDly\000"
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 102


 4445      42446C79 
 4445      00
 4446              	.LASF66:
 4447 0177 4F535443 		.ascii	"OSTCBDelReq\000"
 4447      4244656C 
 4447      52657100 
 4448              	.LASF59:
 4449 0183 4F535443 		.ascii	"OSTCBStat\000"
 4449      42537461 
 4449      7400
 4450              	.LASF82:
 4451 018d 6370755F 		.ascii	"cpu_sr\000"
 4451      737200
 4452              	.LASF17:
 4453 0194 646F7562 		.ascii	"double\000"
 4453      6C6500
 4454              	.LASF15:
 4455 019b 494E5433 		.ascii	"INT32U\000"
 4455      325500
 4456              	.LASF36:
 4457 01a2 6F735F66 		.ascii	"os_flag_node\000"
 4457      6C61675F 
 4457      6E6F6465 
 4457      00
 4458              	.LASF50:
 4459 01af 4F535443 		.ascii	"OSTCBId\000"
 4459      42496400 
 4460              	.LASF79:
 4461 01b7 666C6167 		.ascii	"flags_rdy\000"
 4461      735F7264 
 4461      7900
 4462              	.LASF119:
 4463 01c1 4F535F46 		.ascii	"OS_FlagBlock\000"
 4463      6C616742 
 4463      6C6F636B 
 4463      00
 4464              	.LASF44:
 4465 01ce 6F735F74 		.ascii	"os_tcb\000"
 4465      636200
 4466              	.LASF29:
 4467 01d5 6F735F65 		.ascii	"os_event\000"
 4467      76656E74 
 4467      00
 4468              	.LASF102:
 4469 01de 4F535F46 		.ascii	"OS_FlagInit\000"
 4469      6C616749 
 4469      6E697400 
 4470              	.LASF48:
 4471 01ea 4F535443 		.ascii	"OSTCBStkSize\000"
 4471      4253746B 
 4471      53697A65 
 4471      00
 4472              	.LASF60:
 4473 01f7 4F535443 		.ascii	"OSTCBStatPend\000"
 4473      42537461 
 4473      7450656E 
 4473      6400
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 103


 4474              	.LASF8:
 4475 0205 756E7369 		.ascii	"unsigned int\000"
 4475      676E6564 
 4475      20696E74 
 4475      00
 4476              	.LASF5:
 4477 0212 6C6F6E67 		.ascii	"long unsigned int\000"
 4477      20756E73 
 4477      69676E65 
 4477      6420696E 
 4477      7400
 4478              	.LASF34:
 4479 0224 4F53466C 		.ascii	"OSFlagName\000"
 4479      61674E61 
 4479      6D6500
 4480              	.LASF92:
 4481 022f 74696D65 		.ascii	"timeout\000"
 4481      6F757400 
 4482              	.LASF89:
 4483 0237 4F53466C 		.ascii	"OSFlagNameGet\000"
 4483      61674E61 
 4483      6D654765 
 4483      7400
 4484              	.LASF38:
 4485 0245 4F53466C 		.ascii	"OSFlagNodePrev\000"
 4485      61674E6F 
 4485      64655072 
 4485      657600
 4486              	.LASF3:
 4487 0254 73686F72 		.ascii	"short unsigned int\000"
 4487      7420756E 
 4487      7369676E 
 4487      65642069 
 4487      6E7400
 4488              	.LASF106:
 4489 0267 70746362 		.ascii	"ptcb\000"
 4489      00
 4490              	.LASF67:
 4491 026c 4F535443 		.ascii	"OSTCBCtxSwCtr\000"
 4491      42437478 
 4491      53774374 
 4491      7200
 4492              	.LASF85:
 4493 027a 4F53466C 		.ascii	"OSFlagDel\000"
 4493      61674465 
 4493      6C00
 4494              	.LASF96:
 4495 0284 4F53466C 		.ascii	"OSFlagPost\000"
 4495      6167506F 
 4495      737400
 4496              	.LASF114:
 4497 028f 4F535264 		.ascii	"OSRdyTbl\000"
 4497      7954626C 
 4497      00
 4498              	.LASF45:
 4499 0298 4F535443 		.ascii	"OSTCBStkPtr\000"
 4499      4253746B 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 104


 4499      50747200 
 4500              	.LASF30:
 4501 02a4 6F735F66 		.ascii	"os_flag_grp\000"
 4501      6C61675F 
 4501      67727000 
 4502              	.LASF37:
 4503 02b0 4F53466C 		.ascii	"OSFlagNodeNext\000"
 4503      61674E6F 
 4503      64654E65 
 4503      787400
 4504              	.LASF116:
 4505 02bf 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4505      43313120 
 4505      352E342E 
 4505      31203230 
 4505      31363036 
 4506 02f2 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 4506      20726576 
 4506      6973696F 
 4506      6E203233 
 4506      37373135 
 4507 0325 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4507      66756E63 
 4507      74696F6E 
 4507      2D736563 
 4507      74696F6E 
 4508              	.LASF56:
 4509 034d 4F535443 		.ascii	"OSTCBFlagNode\000"
 4509      42466C61 
 4509      674E6F64 
 4509      6500
 4510              	.LASF55:
 4511 035b 4F535443 		.ascii	"OSTCBMsg\000"
 4511      424D7367 
 4511      00
 4512              	.LASF21:
 4513 0364 4F534576 		.ascii	"OSEventType\000"
 4513      656E7454 
 4513      79706500 
 4514              	.LASF68:
 4515 0370 4F535443 		.ascii	"OSTCBCyclesTot\000"
 4515      42437963 
 4515      6C657354 
 4515      6F7400
 4516              	.LASF19:
 4517 037f 4F535F43 		.ascii	"OS_CPU_SR\000"
 4517      50555F53 
 4517      5200
 4518              	.LASF24:
 4519 0389 4F534576 		.ascii	"OSEventGrp\000"
 4519      656E7447 
 4519      727000
 4520              	.LASF10:
 4521 0394 73697A65 		.ascii	"sizetype\000"
 4521      74797065 
 4521      00
 4522              	.LASF51:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 105


 4523 039d 4F535443 		.ascii	"OSTCBNext\000"
 4523      424E6578 
 4523      7400
 4524              	.LASF71:
 4525 03a7 4F535443 		.ascii	"OSTCBStkUsed\000"
 4525      4253746B 
 4525      55736564 
 4525      00
 4526              	.LASF108:
 4527 03b4 706E6F64 		.ascii	"pnode_prev\000"
 4527      655F7072 
 4527      657600
 4528              	.LASF65:
 4529 03bf 4F535443 		.ascii	"OSTCBBitY\000"
 4529      42426974 
 4529      5900
 4530              	.LASF91:
 4531 03c9 4F53466C 		.ascii	"OSFlagPend\000"
 4531      61675065 
 4531      6E6400
 4532              	.LASF46:
 4533 03d4 4F535443 		.ascii	"OSTCBExtPtr\000"
 4533      42457874 
 4533      50747200 
 4534              	.LASF81:
 4535 03e0 636F6E73 		.ascii	"consume\000"
 4535      756D6500 
 4536              	.LASF33:
 4537 03e8 4F53466C 		.ascii	"OSFlagFlags\000"
 4537      6167466C 
 4537      61677300 
 4538              	.LASF107:
 4539 03f4 4F535F46 		.ascii	"OS_FlagUnlink\000"
 4539      6C616755 
 4539      6E6C696E 
 4539      6B00
 4540              	.LASF16:
 4541 0402 666C6F61 		.ascii	"float\000"
 4541      7400
 4542              	.LASF100:
 4543 0408 706E6F64 		.ascii	"pnode_next\000"
 4543      655F6E65 
 4543      787400
 4544              	.LASF27:
 4545 0413 4F535F45 		.ascii	"OS_EVENT\000"
 4545      56454E54 
 4545      00
 4546              	.LASF1:
 4547 041c 756E7369 		.ascii	"unsigned char\000"
 4547      676E6564 
 4547      20636861 
 4547      7200
 4548              	.LASF93:
 4549 042a 6E6F6465 		.ascii	"node\000"
 4549      00
 4550              	.LASF41:
 4551 042f 4F53466C 		.ascii	"OSFlagNodeFlags\000"
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 106


 4551      61674E6F 
 4551      6465466C 
 4551      61677300 
 4552              	.LASF57:
 4553 043f 4F535443 		.ascii	"OSTCBFlagsRdy\000"
 4553      42466C61 
 4553      67735264 
 4553      7900
 4554              	.LASF2:
 4555 044d 73686F72 		.ascii	"short int\000"
 4555      7420696E 
 4555      7400
 4556              	.LASF88:
 4557 0457 70677270 		.ascii	"pgrp_return\000"
 4557      5F726574 
 4557      75726E00 
 4558              	.LASF84:
 4559 0463 4F53466C 		.ascii	"OSFlagCreate\000"
 4559      61674372 
 4559      65617465 
 4559      00
 4560              	.LASF12:
 4561 0470 424F4F4C 		.ascii	"BOOLEAN\000"
 4561      45414E00 
 4562              	.LASF23:
 4563 0478 4F534576 		.ascii	"OSEventCnt\000"
 4563      656E7443 
 4563      6E7400
 4564              	.LASF83:
 4565 0483 4F53466C 		.ascii	"OSFlagAccept\000"
 4565      61674163 
 4565      63657074 
 4565      00
 4566              	.LASF70:
 4567 0490 4F535443 		.ascii	"OSTCBStkBase\000"
 4567      4253746B 
 4567      42617365 
 4567      00
 4568              	.LASF28:
 4569 049d 4F535F46 		.ascii	"OS_FLAGS\000"
 4569      4C414753 
 4569      00
 4570              	.LASF86:
 4571 04a6 7461736B 		.ascii	"tasks_waiting\000"
 4571      735F7761 
 4571      6974696E 
 4571      6700
 4572              	.LASF95:
 4573 04b4 4F53466C 		.ascii	"OSFlagPendGetFlagsRdy\000"
 4573      61675065 
 4573      6E644765 
 4573      74466C61 
 4573      67735264 
 4574              	.LASF35:
 4575 04ca 4F535F46 		.ascii	"OS_FLAG_GRP\000"
 4575      4C41475F 
 4575      47525000 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 107


 4576              	.LASF104:
 4577 04d6 70677270 		.ascii	"pgrp1\000"
 4577      3100
 4578              	.LASF105:
 4579 04dc 70677270 		.ascii	"pgrp2\000"
 4579      3200
 4580              	.LASF90:
 4581 04e2 706E616D 		.ascii	"pname\000"
 4581      6500
 4582              	.LASF49:
 4583 04e8 4F535443 		.ascii	"OSTCBOpt\000"
 4583      424F7074 
 4583      00
 4584              	.LASF75:
 4585 04f1 70677270 		.ascii	"pgrp\000"
 4585      00
 4586              	.LASF115:
 4587 04f6 4F535443 		.ascii	"OSTCBCur\000"
 4587      42437572 
 4587      00
 4588              	.LASF9:
 4589 04ff 6C6F6E67 		.ascii	"long double\000"
 4589      20646F75 
 4589      626C6500 
 4590              	.LASF31:
 4591 050b 4F53466C 		.ascii	"OSFlagType\000"
 4591      61675479 
 4591      706500
 4592              	.LASF11:
 4593 0516 63686172 		.ascii	"char\000"
 4593      00
 4594              	.LASF20:
 4595 051b 4F535F50 		.ascii	"OS_PRIO\000"
 4595      52494F00 
 4596              	.LASF97:
 4597 0523 73636865 		.ascii	"sched\000"
 4597      6400
 4598              	.LASF42:
 4599 0529 4F53466C 		.ascii	"OSFlagNodeWaitType\000"
 4599      61674E6F 
 4599      64655761 
 4599      69745479 
 4599      706500
 4600              	.LASF47:
 4601 053c 4F535443 		.ascii	"OSTCBStkBottom\000"
 4601      4253746B 
 4601      426F7474 
 4601      6F6D00
 4602              	.LASF118:
 4603 054b 443A5C43 		.ascii	"D:\\CYTEST\\Micrium_CY8CKIT-044_OS2\\Micrium\\Examp"
 4603      59544553 
 4603      545C4D69 
 4603      63726975 
 4603      6D5F4359 
 4604 057a 6C65735C 		.ascii	"les\\Cypress\\CY8CKIT-044\\OS2\\PSoC\\OS2.cydsn\000"
 4604      43797072 
 4604      6573735C 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 108


 4604      43593843 
 4604      4B49542D 
 4605              	.LASF13:
 4606 05a5 494E5438 		.ascii	"INT8U\000"
 4606      5500
 4607              	.LASF52:
 4608 05ab 4F535443 		.ascii	"OSTCBPrev\000"
 4608      42507265 
 4608      7600
 4609              	.LASF111:
 4610 05b5 4F53496E 		.ascii	"OSIntNesting\000"
 4610      744E6573 
 4610      74696E67 
 4610      00
 4611              	.LASF113:
 4612 05c2 4F535264 		.ascii	"OSRdyGrp\000"
 4612      79477270 
 4612      00
 4613              	.LASF76:
 4614 05cb 666C6167 		.ascii	"flags\000"
 4614      7300
 4615              	.LASF73:
 4616 05d1 4F535443 		.ascii	"OSTCBRegTbl\000"
 4616      42526567 
 4616      54626C00 
 4617              	.LASF62:
 4618 05dd 4F535443 		.ascii	"OSTCBX\000"
 4618      425800
 4619              	.LASF63:
 4620 05e4 4F535443 		.ascii	"OSTCBY\000"
 4620      425900
 4621              	.LASF53:
 4622 05eb 4F535443 		.ascii	"OSTCBEventPtr\000"
 4622      42457665 
 4622      6E745074 
 4622      7200
 4623              	.LASF61:
 4624 05f9 4F535443 		.ascii	"OSTCBPrio\000"
 4624      42507269 
 4624      6F00
 4625              	.LASF54:
 4626 0603 4F535443 		.ascii	"OSTCBEventMultiPtr\000"
 4626      42457665 
 4626      6E744D75 
 4626      6C746950 
 4626      747200
 4627              	.LASF80:
 4628 0616 72657375 		.ascii	"result\000"
 4628      6C7400
 4629              	.LASF112:
 4630 061d 4F534C6F 		.ascii	"OSLockNesting\000"
 4630      636B4E65 
 4630      7374696E 
 4630      6700
 4631              	.LASF32:
 4632 062b 4F53466C 		.ascii	"OSFlagWaitList\000"
 4632      61675761 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccOoCdcG.s 			page 109


 4632      69744C69 
 4632      737400
 4633              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
