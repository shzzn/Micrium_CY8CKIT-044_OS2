ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccJWZTE0.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ADC_initVar
  20              		.bss
  21              		.type	ADC_initVar, %object
  22              		.size	ADC_initVar, 1
  23              	ADC_initVar:
  24 0000 00       		.space	1
  25              		.comm	ADC_offset,2,4
  26              		.comm	ADC_countsPer10Volt,4,4
  27              		.section	.rodata
  28              		.align	2
  29              		.type	ADC_channelsConfig, %object
  30              		.size	ADC_channelsConfig, 4
  31              	ADC_channelsConfig:
  32 0000 00010000 		.word	256
  33              		.section	.text.ADC_Start,"ax",%progbits
  34              		.align	2
  35              		.global	ADC_Start
  36              		.code	16
  37              		.thumb_func
  38              		.type	ADC_Start, %function
  39              	ADC_Start:
  40              	.LFB1:
  41              		.file 1 "Generated_Source\\PSoC4\\ADC.c"
   1:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/ADC.c **** * File Name: ADC.c
   3:Generated_Source\PSoC4/ADC.c **** * Version 2.10
   4:Generated_Source\PSoC4/ADC.c **** *
   5:Generated_Source\PSoC4/ADC.c **** * Description:
   6:Generated_Source\PSoC4/ADC.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:Generated_Source\PSoC4/ADC.c **** *  Approximation ADC Component Component.
   8:Generated_Source\PSoC4/ADC.c **** *
   9:Generated_Source\PSoC4/ADC.c **** * Note:
  10:Generated_Source\PSoC4/ADC.c **** *
  11:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  12:Generated_Source\PSoC4/ADC.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/ADC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/ADC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/ADC.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccJWZTE0.s 			page 2


  17:Generated_Source\PSoC4/ADC.c **** 
  18:Generated_Source\PSoC4/ADC.c **** #include "ADC.h"
  19:Generated_Source\PSoC4/ADC.c **** 
  20:Generated_Source\PSoC4/ADC.c **** 
  21:Generated_Source\PSoC4/ADC.c **** /***************************************
  22:Generated_Source\PSoC4/ADC.c **** * Global data allocation
  23:Generated_Source\PSoC4/ADC.c **** ***************************************/
  24:Generated_Source\PSoC4/ADC.c **** uint8 ADC_initVar = 0u;
  25:Generated_Source\PSoC4/ADC.c **** volatile int16 ADC_offset[ADC_TOTAL_CHANNELS_NUM];
  26:Generated_Source\PSoC4/ADC.c **** volatile int32 ADC_countsPer10Volt[ADC_TOTAL_CHANNELS_NUM];   /* Gain compensation */
  27:Generated_Source\PSoC4/ADC.c **** 
  28:Generated_Source\PSoC4/ADC.c **** 
  29:Generated_Source\PSoC4/ADC.c **** /***************************************
  30:Generated_Source\PSoC4/ADC.c **** * Local data allocation
  31:Generated_Source\PSoC4/ADC.c **** ***************************************/
  32:Generated_Source\PSoC4/ADC.c **** /* Channels configuration generated by customiser */
  33:Generated_Source\PSoC4/ADC.c **** static const uint32 CYCODE ADC_channelsConfig[] = { 0x00000100u };
  34:Generated_Source\PSoC4/ADC.c **** 
  35:Generated_Source\PSoC4/ADC.c **** 
  36:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  37:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Start
  38:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  39:Generated_Source\PSoC4/ADC.c **** *
  40:Generated_Source\PSoC4/ADC.c **** * Summary:
  41:Generated_Source\PSoC4/ADC.c **** *  Performs all required initialization for this component
  42:Generated_Source\PSoC4/ADC.c **** *  and enables the power. The power will be set to the appropriate
  43:Generated_Source\PSoC4/ADC.c **** *  power based on the clock frequency.
  44:Generated_Source\PSoC4/ADC.c **** *
  45:Generated_Source\PSoC4/ADC.c **** * Parameters:
  46:Generated_Source\PSoC4/ADC.c **** *  None.
  47:Generated_Source\PSoC4/ADC.c **** *
  48:Generated_Source\PSoC4/ADC.c **** * Return:
  49:Generated_Source\PSoC4/ADC.c **** *  None.
  50:Generated_Source\PSoC4/ADC.c **** *
  51:Generated_Source\PSoC4/ADC.c **** * Global variables:
  52:Generated_Source\PSoC4/ADC.c **** *  The ADC_initVar variable is used to indicate when/if initial
  53:Generated_Source\PSoC4/ADC.c **** *  configuration of this component has happened. The variable is initialized to
  54:Generated_Source\PSoC4/ADC.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:Generated_Source\PSoC4/ADC.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  57:Generated_Source\PSoC4/ADC.c **** *  If re-initialization of the component is required the variable should be set
  58:Generated_Source\PSoC4/ADC.c **** *  to zero before call of ADC_Start() routine, or the user may call
  59:Generated_Source\PSoC4/ADC.c **** *  ADC_Init() and ADC_Enable() as done in the
  60:Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  61:Generated_Source\PSoC4/ADC.c **** *
  62:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  63:Generated_Source\PSoC4/ADC.c **** void ADC_Start(void)
  64:Generated_Source\PSoC4/ADC.c **** {
  42              		.loc 1 64 0
  43              		.cfi_startproc
  44              		@ args = 0, pretend = 0, frame = 0
  45              		@ frame_needed = 1, uses_anonymous_args = 0
  46 0000 80B5     		push	{r7, lr}
  47              		.cfi_def_cfa_offset 8
  48              		.cfi_offset 7, -8
  49              		.cfi_offset 14, -4
  50 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccJWZTE0.s 			page 3


  51              		.cfi_def_cfa_register 7
  65:Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
  66:Generated_Source\PSoC4/ADC.c ****     if(ADC_initVar == 0u)
  52              		.loc 1 66 0
  53 0004 064B     		ldr	r3, .L3
  54 0006 1B78     		ldrb	r3, [r3]
  55 0008 002B     		cmp	r3, #0
  56 000a 04D1     		bne	.L2
  67:Generated_Source\PSoC4/ADC.c ****     {
  68:Generated_Source\PSoC4/ADC.c ****         ADC_Init();
  57              		.loc 1 68 0
  58 000c FFF7FEFF 		bl	ADC_Init
  69:Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
  59              		.loc 1 69 0
  60 0010 034B     		ldr	r3, .L3
  61 0012 0122     		movs	r2, #1
  62 0014 1A70     		strb	r2, [r3]
  63              	.L2:
  70:Generated_Source\PSoC4/ADC.c ****     }
  71:Generated_Source\PSoC4/ADC.c ****     ADC_Enable();
  64              		.loc 1 71 0
  65 0016 FFF7FEFF 		bl	ADC_Enable
  72:Generated_Source\PSoC4/ADC.c **** }
  66              		.loc 1 72 0
  67 001a C046     		nop
  68 001c BD46     		mov	sp, r7
  69              		@ sp needed
  70 001e 80BD     		pop	{r7, pc}
  71              	.L4:
  72              		.align	2
  73              	.L3:
  74 0020 00000000 		.word	ADC_initVar
  75              		.cfi_endproc
  76              	.LFE1:
  77              		.size	ADC_Start, .-ADC_Start
  78              		.section	.text.ADC_Init,"ax",%progbits
  79              		.align	2
  80              		.global	ADC_Init
  81              		.code	16
  82              		.thumb_func
  83              		.type	ADC_Init, %function
  84              	ADC_Init:
  85              	.LFB2:
  73:Generated_Source\PSoC4/ADC.c **** 
  74:Generated_Source\PSoC4/ADC.c **** 
  75:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  76:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Init
  77:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  78:Generated_Source\PSoC4/ADC.c **** *
  79:Generated_Source\PSoC4/ADC.c **** * Summary:
  80:Generated_Source\PSoC4/ADC.c **** *  Initialize component's parameters to the parameters set by user in the
  81:Generated_Source\PSoC4/ADC.c **** *  customizer of the component placed onto schematic. Usually called in
  82:Generated_Source\PSoC4/ADC.c **** *  ADC_Start().
  83:Generated_Source\PSoC4/ADC.c **** *
  84:Generated_Source\PSoC4/ADC.c **** * Parameters:
  85:Generated_Source\PSoC4/ADC.c **** *  None.
  86:Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccJWZTE0.s 			page 4


  87:Generated_Source\PSoC4/ADC.c **** * Return:
  88:Generated_Source\PSoC4/ADC.c **** *  None.
  89:Generated_Source\PSoC4/ADC.c **** *
  90:Generated_Source\PSoC4/ADC.c **** * Global variables:
  91:Generated_Source\PSoC4/ADC.c **** *  The ADC_offset variable is initialized.
  92:Generated_Source\PSoC4/ADC.c **** *
  93:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  94:Generated_Source\PSoC4/ADC.c **** void ADC_Init(void)
  95:Generated_Source\PSoC4/ADC.c **** {
  86              		.loc 1 95 0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 16
  89              		@ frame_needed = 1, uses_anonymous_args = 0
  90 0000 80B5     		push	{r7, lr}
  91              		.cfi_def_cfa_offset 8
  92              		.cfi_offset 7, -8
  93              		.cfi_offset 14, -4
  94 0002 84B0     		sub	sp, sp, #16
  95              		.cfi_def_cfa_offset 24
  96 0004 00AF     		add	r7, sp, #0
  97              		.cfi_def_cfa_register 7
  96:Generated_Source\PSoC4/ADC.c ****     uint32 chNum;
  97:Generated_Source\PSoC4/ADC.c ****     uint32 tmpRegVal;
  98:Generated_Source\PSoC4/ADC.c ****     int32 counts;
  99:Generated_Source\PSoC4/ADC.c **** 
 100:Generated_Source\PSoC4/ADC.c ****     #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 101:Generated_Source\PSoC4/ADC.c ****         static const uint8 CYCODE ADC_InputsPlacement[] =
 102:Generated_Source\PSoC4/ADC.c ****         {
 103:Generated_Source\PSoC4/ADC.c ****             (uint8)(ADC_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:Generated_Source\PSoC4/ADC.c ****             (uint8)ADC_cy_psoc4_sarmux_8__CH_0_PIN
 105:Generated_Source\PSoC4/ADC.c ****             ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:Generated_Source\PSoC4/ADC.c ****              (uint8)ADC_cy_psoc4_sarmux_8__CH_1_PIN
 107:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 2u)
 108:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_2_PIN
 110:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 2u */
 111:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 3u)
 112:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_3_PIN
 114:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 3u */
 115:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 4u)
 116:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_4_PIN
 118:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 4u */
 119:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 5u)
 120:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_5_PIN
 122:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 5u */
 123:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 6u)
 124:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_6_PIN
 126:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 6u */
 127:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 7u)
 128:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_7_PIN
 130:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 7u */
 131:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 8u)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccJWZTE0.s 			page 5


 132:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_8_PIN
 134:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 8u */
 135:Generated_Source\PSoC4/ADC.c ****         };
 136:Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 137:Generated_Source\PSoC4/ADC.c **** 
 138:Generated_Source\PSoC4/ADC.c ****     #if(ADC_IRQ_REMOVE == 0u)
 139:Generated_Source\PSoC4/ADC.c ****         /* Start and set interrupt vector */
 140:Generated_Source\PSoC4/ADC.c ****         CyIntSetPriority(ADC_INTC_NUMBER, ADC_INTC_PRIOR_NUMBER);
  98              		.loc 1 140 0
  99 0006 0321     		movs	r1, #3
 100 0008 1020     		movs	r0, #16
 101 000a FFF7FEFF 		bl	CyIntSetPriority
 141:Generated_Source\PSoC4/ADC.c ****         (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR);
 102              		.loc 1 141 0
 103 000e 524B     		ldr	r3, .L17
 104 0010 1900     		movs	r1, r3
 105 0012 1020     		movs	r0, #16
 106 0014 FFF7FEFF 		bl	CyIntSetVector
 142:Generated_Source\PSoC4/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 143:Generated_Source\PSoC4/ADC.c **** 
 144:Generated_Source\PSoC4/ADC.c ****     /* Init SAR and MUX registers */
 145:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = ADC_DEFAULT_EN_CHANNELS;
 107              		.loc 1 145 0
 108 0018 504B     		ldr	r3, .L17+4
 109 001a 0122     		movs	r2, #1
 110 001c 1A60     		str	r2, [r3]
 146:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 147:Generated_Source\PSoC4/ADC.c ****         /* Enable the SAR internal pump when global pump is enabled */
 148:Generated_Source\PSoC4/ADC.c ****         (((ADC_PUMP_CTRL_REG & ADC_PUMP_CTRL_ENABLED) != 0u) ? 
 111              		.loc 1 148 0
 112 001e 504B     		ldr	r3, .L17+8
 113 0020 1B68     		ldr	r3, [r3]
 146:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 114              		.loc 1 146 0
 115 0022 002B     		cmp	r3, #0
 116 0024 01DA     		bge	.L6
 146:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 117              		.loc 1 146 0 is_stmt 0 discriminator 1
 118 0026 4F49     		ldr	r1, .L17+12
 119 0028 00E0     		b	.L7
 120              	.L6:
 146:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 121              		.loc 1 146 0 discriminator 2
 122 002a 4F49     		ldr	r1, .L17+16
 123              	.L7:
 146:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 124              		.loc 1 146 0 discriminator 4
 125 002c 4F4B     		ldr	r3, .L17+20
 126 002e 4F4A     		ldr	r2, .L17+20
 127 0030 1268     		ldr	r2, [r2]
 128 0032 0A43     		orrs	r2, r1
 129 0034 1A60     		str	r2, [r3]
 149:Generated_Source\PSoC4/ADC.c ****         ADC_BOOSTPUMP_EN : 0u);
 150:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_CTRL_REG = ADC_DEFAULT_SAMPLE_CTRL_REG_CFG;
 130              		.loc 1 150 0 is_stmt 1 discriminator 4
 131 0036 4E4B     		ldr	r3, .L17+24
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccJWZTE0.s 			page 6


 132 0038 4E4A     		ldr	r2, .L17+28
 133 003a 1A60     		str	r2, [r3]
 151:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG = ADC_DEFAULT_RANGE_THRES_REG_CFG;
 134              		.loc 1 151 0 discriminator 4
 135 003c 4E4B     		ldr	r3, .L17+32
 136 003e 4F4A     		ldr	r2, .L17+36
 137 0040 1A60     		str	r2, [r3]
 152:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_COND_REG  = ADC_COMPARE_MODE;
 138              		.loc 1 152 0 discriminator 4
 139 0042 4F4B     		ldr	r3, .L17+40
 140 0044 0022     		movs	r2, #0
 141 0046 1A60     		str	r2, [r3]
 153:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME01_REG = ADC_DEFAULT_SAMPLE_TIME01_REG_CFG;
 142              		.loc 1 153 0 discriminator 4
 143 0048 4E4B     		ldr	r3, .L17+44
 144 004a 4F4A     		ldr	r2, .L17+48
 145 004c 1A60     		str	r2, [r3]
 154:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME23_REG = ADC_DEFAULT_SAMPLE_TIME23_REG_CFG;
 146              		.loc 1 154 0 discriminator 4
 147 004e 4F4B     		ldr	r3, .L17+52
 148 0050 4F4A     		ldr	r2, .L17+56
 149 0052 1A60     		str	r2, [r3]
 155:Generated_Source\PSoC4/ADC.c ****     
 156:Generated_Source\PSoC4/ADC.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 157:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_MUX_SWITCH0 != 0u)
 158:Generated_Source\PSoC4/ADC.c ****         ADC_MUX_SWITCH0_REG |= ADC_DEFAULT_MUX_SWITCH0;
 159:Generated_Source\PSoC4/ADC.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 160:Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 161:Generated_Source\PSoC4/ADC.c ****             ADC_MUX_SWITCH_HW_CTRL_REG |= ADC_DEFAULT_MUX_SWITCH0;
 162:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_TOTAL_CHANNELS_NUM > 1u */
 163:Generated_Source\PSoC4/ADC.c ****     #endif /*ADC_CHANNELS_MODE !=0 */
 164:Generated_Source\PSoC4/ADC.c **** 
 165:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = 0u;
 150              		.loc 1 165 0 discriminator 4
 151 0054 4F4B     		ldr	r3, .L17+60
 152 0056 0022     		movs	r2, #0
 153 0058 1A60     		str	r2, [r3]
 166:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;
 154              		.loc 1 166 0 discriminator 4
 155 005a 4F4B     		ldr	r3, .L17+64
 156 005c 0022     		movs	r2, #0
 157 005e 1A60     		str	r2, [r3]
 167:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = ADC_SAR_INTR_MASK;
 158              		.loc 1 167 0 discriminator 4
 159 0060 4E4B     		ldr	r3, .L17+68
 160 0062 0122     		movs	r2, #1
 161 0064 1A60     		str	r2, [r3]
 168:Generated_Source\PSoC4/ADC.c **** 
 169:Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_PSOC4)
 170:Generated_Source\PSoC4/ADC.c ****         ADC_ANA_TRIM_REG = ADC_TRIM_COEF;
 171:Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_PSOC4) */
 172:Generated_Source\PSoC4/ADC.c **** 
 173:Generated_Source\PSoC4/ADC.c ****     /* Read and modify default configuration based on characterization */
 174:Generated_Source\PSoC4/ADC.c ****     tmpRegVal = ADC_SAR_DFT_CTRL_REG;
 162              		.loc 1 174 0 discriminator 4
 163 0066 4E4B     		ldr	r3, .L17+72
 164 0068 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccJWZTE0.s 			page 7


 165 006a 7B60     		str	r3, [r7, #4]
 175:Generated_Source\PSoC4/ADC.c ****     tmpRegVal &= (uint32)~ADC_DCEN;
 166              		.loc 1 175 0 discriminator 4
 167 006c 7B68     		ldr	r3, [r7, #4]
 168 006e 4D4A     		ldr	r2, .L17+76
 169 0070 1340     		ands	r3, r2
 170 0072 7B60     		str	r3, [r7, #4]
 176:Generated_Source\PSoC4/ADC.c ****     
 177:Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_PSOC4)
 178:Generated_Source\PSoC4/ADC.c ****         #if(ADC_NOMINAL_CLOCK_FREQ > (ADC_MAX_FREQUENCY / 2))
 179:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_SEL_CSEL_DFT_CHAR;
 180:Generated_Source\PSoC4/ADC.c ****         #else  /* clock speed < 9 Mhz */
 181:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 182:Generated_Source\PSoC4/ADC.c ****         #endif /* clock speed > 9 Mhz */
 183:Generated_Source\PSoC4/ADC.c ****     #else
 184:Generated_Source\PSoC4/ADC.c ****         #if ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 185:Generated_Source\PSoC4/ADC.c ****              (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF))
 186:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 171              		.loc 1 186 0 discriminator 4
 172 0074 7B68     		ldr	r3, [r7, #4]
 173 0076 0122     		movs	r2, #1
 174 0078 1343     		orrs	r3, r2
 175 007a 7B60     		str	r3, [r7, #4]
 187:Generated_Source\PSoC4/ADC.c ****         #else
 188:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DCEN;
 189:Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)~ADC_DLY_INC;
 190:Generated_Source\PSoC4/ADC.c ****         #endif /* ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 191:Generated_Source\PSoC4/ADC.c ****                    (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF)) */
 192:Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_PSOC4) */
 193:Generated_Source\PSoC4/ADC.c ****     
 194:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_DFT_CTRL_REG = tmpRegVal;
 176              		.loc 1 194 0 discriminator 4
 177 007c 484B     		ldr	r3, .L17+72
 178 007e 7A68     		ldr	r2, [r7, #4]
 179 0080 1A60     		str	r2, [r3]
 195:Generated_Source\PSoC4/ADC.c **** 
 196:Generated_Source\PSoC4/ADC.c ****     #if(ADC_MAX_RESOLUTION != ADC_RESOLUTION_12)
 197:Generated_Source\PSoC4/ADC.c ****         ADC_WOUNDING_REG = ADC_ALT_WOUNDING;
 198:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 199:Generated_Source\PSoC4/ADC.c **** 
 200:Generated_Source\PSoC4/ADC.c ****     for(chNum = 0u; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++)
 180              		.loc 1 200 0 discriminator 4
 181 0082 0023     		movs	r3, #0
 182 0084 FB60     		str	r3, [r7, #12]
 183 0086 60E0     		b	.L8
 184              	.L16:
 201:Generated_Source\PSoC4/ADC.c ****     {
 202:Generated_Source\PSoC4/ADC.c ****         tmpRegVal = (ADC_channelsConfig[chNum] & ADC_CHANNEL_CONFIG_MASK);
 185              		.loc 1 202 0
 186 0088 8023     		movs	r3, #128
 187 008a 5A00     		lsls	r2, r3, #1
 188 008c DC23     		movs	r3, #220
 189 008e 9B01     		lsls	r3, r3, #6
 190 0090 1340     		ands	r3, r2
 191 0092 7B60     		str	r3, [r7, #4]
 203:Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 204:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_InputsPlacement[chNum];
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccJWZTE0.s 			page 8


 205:Generated_Source\PSoC4/ADC.c ****         #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 206:Generated_Source\PSoC4/ADC.c ****         
 207:Generated_Source\PSoC4/ADC.c ****         
 208:Generated_Source\PSoC4/ADC.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 209:Generated_Source\PSoC4/ADC.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 210:Generated_Source\PSoC4/ADC.c ****         *  (0) and 8-bit (1) resolution.
 211:Generated_Source\PSoC4/ADC.c ****         */
 212:Generated_Source\PSoC4/ADC.c ****         #if((ADC_MAX_RESOLUTION != ADC_RESOLUTION_12) && \
 213:Generated_Source\PSoC4/ADC.c ****             (ADC_ALT_WOUNDING == ADC_WOUNDING_10BIT))
 214:Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)(~ADC_ALT_RESOLUTION_ON);
 215:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 216:Generated_Source\PSoC4/ADC.c **** 
 217:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 218:Generated_Source\PSoC4/ADC.c ****         if(chNum < ADC_SEQUENCED_CHANNELS_NUM)
 219:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 220:Generated_Source\PSoC4/ADC.c ****         {
 221:Generated_Source\PSoC4/ADC.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 192              		.loc 1 221 0
 193 0094 FB68     		ldr	r3, [r7, #12]
 194 0096 9B00     		lsls	r3, r3, #2
 195 0098 434A     		ldr	r2, .L17+80
 196 009a 9446     		mov	ip, r2
 197 009c 6344     		add	r3, r3, ip
 198 009e 7A68     		ldr	r2, [r7, #4]
 199 00a0 1A60     		str	r2, [r3]
 222:Generated_Source\PSoC4/ADC.c **** 
 223:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 200              		.loc 1 223 0
 201 00a2 8023     		movs	r3, #128
 202 00a4 5B00     		lsls	r3, r3, #1
 203 00a6 0122     		movs	r2, #1
 204 00a8 1340     		ands	r3, r2
 205 00aa 0AD0     		beq	.L9
 224:Generated_Source\PSoC4/ADC.c ****             {
 225:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 206              		.loc 1 225 0
 207 00ac 394B     		ldr	r3, .L17+60
 208 00ae 394A     		ldr	r2, .L17+60
 209 00b0 1168     		ldr	r1, [r2]
 210 00b2 0120     		movs	r0, #1
 211 00b4 FA68     		ldr	r2, [r7, #12]
 212 00b6 9040     		lsls	r0, r0, r2
 213 00b8 0200     		movs	r2, r0
 214 00ba 1204     		lsls	r2, r2, #16
 215 00bc 120C     		lsrs	r2, r2, #16
 216 00be 0A43     		orrs	r2, r1
 217 00c0 1A60     		str	r2, [r3]
 218              	.L9:
 226:Generated_Source\PSoC4/ADC.c ****             }
 227:Generated_Source\PSoC4/ADC.c **** 
 228:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 219              		.loc 1 228 0
 220 00c2 8023     		movs	r3, #128
 221 00c4 5B00     		lsls	r3, r3, #1
 222 00c6 0222     		movs	r2, #2
 223 00c8 1340     		ands	r3, r2
 224 00ca 0AD0     		beq	.L10
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccJWZTE0.s 			page 9


 229:Generated_Source\PSoC4/ADC.c ****             {
 230:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 225              		.loc 1 230 0
 226 00cc 324B     		ldr	r3, .L17+64
 227 00ce 324A     		ldr	r2, .L17+64
 228 00d0 1168     		ldr	r1, [r2]
 229 00d2 0120     		movs	r0, #1
 230 00d4 FA68     		ldr	r2, [r7, #12]
 231 00d6 9040     		lsls	r0, r0, r2
 232 00d8 0200     		movs	r2, r0
 233 00da 1204     		lsls	r2, r2, #16
 234 00dc 120C     		lsrs	r2, r2, #16
 235 00de 0A43     		orrs	r2, r1
 236 00e0 1A60     		str	r2, [r3]
 237              	.L10:
 231:Generated_Source\PSoC4/ADC.c ****             }
 232:Generated_Source\PSoC4/ADC.c ****         }
 233:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 234:Generated_Source\PSoC4/ADC.c ****             else
 235:Generated_Source\PSoC4/ADC.c ****             {
 236:Generated_Source\PSoC4/ADC.c ****                 CY_SET_REG32(ADC_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_INJ_TAILGATING);
 237:Generated_Source\PSoC4/ADC.c **** 
 238:Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 239:Generated_Source\PSoC4/ADC.c ****                 {
 240:Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_SATURATE_MASK;
 241:Generated_Source\PSoC4/ADC.c ****                 }
 242:Generated_Source\PSoC4/ADC.c **** 
 243:Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 244:Generated_Source\PSoC4/ADC.c ****                 {
 245:Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_RANGE_MASK;
 246:Generated_Source\PSoC4/ADC.c ****                 }
 247:Generated_Source\PSoC4/ADC.c ****             }
 248:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 249:Generated_Source\PSoC4/ADC.c **** 
 250:Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_ALT_RESOLUTION_ON) != 0u)
 238              		.loc 1 250 0
 239 00e2 8023     		movs	r3, #128
 240 00e4 5A00     		lsls	r2, r3, #1
 241 00e6 8023     		movs	r3, #128
 242 00e8 9B00     		lsls	r3, r3, #2
 243 00ea 1340     		ands	r3, r2
 244 00ec 03D0     		beq	.L11
 251:Generated_Source\PSoC4/ADC.c ****         {
 252:Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_DEFAULT_MAX_WRK_ALT;
 245              		.loc 1 252 0
 246 00ee 8023     		movs	r3, #128
 247 00f0 5B00     		lsls	r3, r3, #1
 248 00f2 BB60     		str	r3, [r7, #8]
 249 00f4 02E0     		b	.L12
 250              	.L11:
 253:Generated_Source\PSoC4/ADC.c ****         }
 254:Generated_Source\PSoC4/ADC.c ****         else
 255:Generated_Source\PSoC4/ADC.c ****         {
 256:Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_SAR_WRK_MAX_12BIT;
 251              		.loc 1 256 0
 252 00f6 8023     		movs	r3, #128
 253 00f8 5B01     		lsls	r3, r3, #5
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccJWZTE0.s 			page 10


 254 00fa BB60     		str	r3, [r7, #8]
 255              	.L12:
 257:Generated_Source\PSoC4/ADC.c ****         }
 258:Generated_Source\PSoC4/ADC.c **** 
 259:Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_DIFFERENTIAL_EN) == 0u)
 256              		.loc 1 259 0
 257 00fc 8023     		movs	r3, #128
 258 00fe 5A00     		lsls	r2, r3, #1
 259 0100 8023     		movs	r3, #128
 260 0102 5B00     		lsls	r3, r3, #1
 261 0104 1340     		ands	r3, r2
 262 0106 05D1     		bne	.L13
 260:Generated_Source\PSoC4/ADC.c ****         {
 261:Generated_Source\PSoC4/ADC.c ****             #if((ADC_DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED) && \
 262:Generated_Source\PSoC4/ADC.c ****                 (ADC_DEFAULT_NEG_INPUT_SEL == ADC__VREF))
 263:Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 264:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / -2);
 265:Generated_Source\PSoC4/ADC.c ****             #else
 266:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 263              		.loc 1 266 0
 264 0108 284B     		ldr	r3, .L17+84
 265 010a FA68     		ldr	r2, [r7, #12]
 266 010c 5200     		lsls	r2, r2, #1
 267 010e 0021     		movs	r1, #0
 268 0110 D152     		strh	r1, [r2, r3]
 269 0112 04E0     		b	.L14
 270              	.L13:
 267:Generated_Source\PSoC4/ADC.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED */
 268:Generated_Source\PSoC4/ADC.c ****         }
 269:Generated_Source\PSoC4/ADC.c ****         else    /* Differential channel */
 270:Generated_Source\PSoC4/ADC.c ****         {
 271:Generated_Source\PSoC4/ADC.c ****             #if(ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED)
 272:Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the half scale to convert results to signed format */
 273:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / 2);
 274:Generated_Source\PSoC4/ADC.c ****             #else
 275:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 271              		.loc 1 275 0
 272 0114 254B     		ldr	r3, .L17+84
 273 0116 FA68     		ldr	r2, [r7, #12]
 274 0118 5200     		lsls	r2, r2, #1
 275 011a 0021     		movs	r1, #0
 276 011c D152     		strh	r1, [r2, r3]
 277              	.L14:
 276:Generated_Source\PSoC4/ADC.c ****             #endif /* end ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED */
 277:Generated_Source\PSoC4/ADC.c ****         }
 278:Generated_Source\PSoC4/ADC.c ****         /* Calculate gain in counts per 10 volts with rounding */
 279:Generated_Source\PSoC4/ADC.c ****         ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) +
 278              		.loc 1 279 0 discriminator 2
 279 011e BB68     		ldr	r3, [r7, #8]
 280 0120 234A     		ldr	r2, .L17+88
 281 0122 5343     		muls	r3, r2
 282 0124 8022     		movs	r2, #128
 283 0126 D200     		lsls	r2, r2, #3
 284 0128 9446     		mov	ip, r2
 285 012a 6344     		add	r3, r3, ip
 280:Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 286              		.loc 1 280 0 discriminator 2
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccJWZTE0.s 			page 11


 287 012c 002B     		cmp	r3, #0
 288 012e 02DA     		bge	.L15
 289 0130 204A     		ldr	r2, .L17+92
 290 0132 9446     		mov	ip, r2
 291 0134 6344     		add	r3, r3, ip
 292              	.L15:
 293 0136 DB12     		asrs	r3, r3, #11
 279:Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 294              		.loc 1 279 0 discriminator 2
 295 0138 1BB2     		sxth	r3, r3
 296 013a 1900     		movs	r1, r3
 297 013c 1E4B     		ldr	r3, .L17+96
 298 013e FA68     		ldr	r2, [r7, #12]
 299 0140 9200     		lsls	r2, r2, #2
 300 0142 D150     		str	r1, [r2, r3]
 200:Generated_Source\PSoC4/ADC.c ****     {
 301              		.loc 1 200 0 discriminator 2
 302 0144 FB68     		ldr	r3, [r7, #12]
 303 0146 0133     		adds	r3, r3, #1
 304 0148 FB60     		str	r3, [r7, #12]
 305              	.L8:
 200:Generated_Source\PSoC4/ADC.c ****     {
 306              		.loc 1 200 0 is_stmt 0 discriminator 1
 307 014a FB68     		ldr	r3, [r7, #12]
 308 014c 002B     		cmp	r3, #0
 309 014e 9BD0     		beq	.L16
 281:Generated_Source\PSoC4/ADC.c ****     }
 282:Generated_Source\PSoC4/ADC.c **** }
 310              		.loc 1 282 0 is_stmt 1
 311 0150 C046     		nop
 312 0152 BD46     		mov	sp, r7
 313 0154 04B0     		add	sp, sp, #16
 314              		@ sp needed
 315 0156 80BD     		pop	{r7, pc}
 316              	.L18:
 317              		.align	2
 318              	.L17:
 319 0158 00000000 		.word	ADC_ISR
 320 015c 20003A40 		.word	1077542944
 321 0160 80033A40 		.word	1077543808
 322 0164 40021053 		.word	1393558080
 323 0168 40020053 		.word	1392509504
 324 016c 00003A40 		.word	1077542912
 325 0170 04003A40 		.word	1077542916
 326 0174 8C000080 		.word	-2147483508
 327 0178 18003A40 		.word	1077542936
 328 017c 0000FF07 		.word	134152192
 329 0180 1C003A40 		.word	1077542940
 330 0184 10003A40 		.word	1077542928
 331 0188 F4010200 		.word	131572
 332 018c 14003A40 		.word	1077542932
 333 0190 02000200 		.word	131074
 334 0194 28023A40 		.word	1077543464
 335 0198 38023A40 		.word	1077543480
 336 019c 18023A40 		.word	1077543448
 337 01a0 30003A40 		.word	1077542960
 338 01a4 FFFFFFDF 		.word	-536870913
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccJWZTE0.s 			page 12


 339 01a8 80003A40 		.word	1077543040
 340 01ac 00000000 		.word	ADC_offset
 341 01b0 10270000 		.word	10000
 342 01b4 FF070000 		.word	2047
 343 01b8 00000000 		.word	ADC_countsPer10Volt
 344              		.cfi_endproc
 345              	.LFE2:
 346              		.size	ADC_Init, .-ADC_Init
 347              		.section	.text.ADC_Enable,"ax",%progbits
 348              		.align	2
 349              		.global	ADC_Enable
 350              		.code	16
 351              		.thumb_func
 352              		.type	ADC_Enable, %function
 353              	ADC_Enable:
 354              	.LFB3:
 283:Generated_Source\PSoC4/ADC.c **** 
 284:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 285:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SAR_1_Enable
 286:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 287:Generated_Source\PSoC4/ADC.c **** *
 288:Generated_Source\PSoC4/ADC.c **** * Summary:
 289:Generated_Source\PSoC4/ADC.c **** *  Enables the clock and analog power for SAR ADC.
 290:Generated_Source\PSoC4/ADC.c **** *
 291:Generated_Source\PSoC4/ADC.c **** * Parameters:
 292:Generated_Source\PSoC4/ADC.c **** *  None.
 293:Generated_Source\PSoC4/ADC.c **** *
 294:Generated_Source\PSoC4/ADC.c **** * Return:
 295:Generated_Source\PSoC4/ADC.c **** *  None.
 296:Generated_Source\PSoC4/ADC.c **** *
 297:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 298:Generated_Source\PSoC4/ADC.c **** void ADC_Enable(void)
 299:Generated_Source\PSoC4/ADC.c **** {
 355              		.loc 1 299 0
 356              		.cfi_startproc
 357              		@ args = 0, pretend = 0, frame = 0
 358              		@ frame_needed = 1, uses_anonymous_args = 0
 359 0000 80B5     		push	{r7, lr}
 360              		.cfi_def_cfa_offset 8
 361              		.cfi_offset 7, -8
 362              		.cfi_offset 14, -4
 363 0002 00AF     		add	r7, sp, #0
 364              		.cfi_def_cfa_register 7
 300:Generated_Source\PSoC4/ADC.c ****     if (0u == (ADC_SAR_CTRL_REG & ADC_ENABLE))
 365              		.loc 1 300 0
 366 0004 0A4B     		ldr	r3, .L23
 367 0006 1B68     		ldr	r3, [r3]
 368 0008 002B     		cmp	r3, #0
 369 000a 0EDB     		blt	.L22
 301:Generated_Source\PSoC4/ADC.c ****     {
 302:Generated_Source\PSoC4/ADC.c ****         #if(ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_PSOC4)
 303:Generated_Source\PSoC4/ADC.c **** 
 304:Generated_Source\PSoC4/ADC.c ****             while (0u != (ADC_SAR_STATUS_REG & ADC_STATUS_BUSY))
 370              		.loc 1 304 0
 371 000c C046     		nop
 372              	.L21:
 373              		.loc 1 304 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccJWZTE0.s 			page 13


 374 000e 094B     		ldr	r3, .L23+4
 375 0010 1B68     		ldr	r3, [r3]
 376 0012 002B     		cmp	r3, #0
 377 0014 FBDB     		blt	.L21
 305:Generated_Source\PSoC4/ADC.c ****             {
 306:Generated_Source\PSoC4/ADC.c ****                 /* wait for SAR to go idle for to avoid deadlock */
 307:Generated_Source\PSoC4/ADC.c ****             }
 308:Generated_Source\PSoC4/ADC.c ****         #endif /* (ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_PSOC4) */
 309:Generated_Source\PSoC4/ADC.c ****         
 310:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_CTRL_REG |= ADC_ENABLE;
 378              		.loc 1 310 0 is_stmt 1
 379 0016 064B     		ldr	r3, .L23
 380 0018 054A     		ldr	r2, .L23
 381 001a 1268     		ldr	r2, [r2]
 382 001c 8021     		movs	r1, #128
 383 001e 0906     		lsls	r1, r1, #24
 384 0020 0A43     		orrs	r2, r1
 385 0022 1A60     		str	r2, [r3]
 311:Generated_Source\PSoC4/ADC.c ****         
 312:Generated_Source\PSoC4/ADC.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 313:Generated_Source\PSoC4/ADC.c ****         CyDelayUs(ADC_10US_DELAY);         
 386              		.loc 1 313 0
 387 0024 0A20     		movs	r0, #10
 388 0026 FFF7FEFF 		bl	CyDelayUs
 389              	.L22:
 314:Generated_Source\PSoC4/ADC.c ****     }
 315:Generated_Source\PSoC4/ADC.c **** }
 390              		.loc 1 315 0
 391 002a C046     		nop
 392 002c BD46     		mov	sp, r7
 393              		@ sp needed
 394 002e 80BD     		pop	{r7, pc}
 395              	.L24:
 396              		.align	2
 397              	.L23:
 398 0030 00003A40 		.word	1077542912
 399 0034 08023A40 		.word	1077543432
 400              		.cfi_endproc
 401              	.LFE3:
 402              		.size	ADC_Enable, .-ADC_Enable
 403              		.section	.text.ADC_Stop,"ax",%progbits
 404              		.align	2
 405              		.global	ADC_Stop
 406              		.code	16
 407              		.thumb_func
 408              		.type	ADC_Stop, %function
 409              	ADC_Stop:
 410              	.LFB4:
 316:Generated_Source\PSoC4/ADC.c **** 
 317:Generated_Source\PSoC4/ADC.c **** 
 318:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 319:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Stop
 320:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 321:Generated_Source\PSoC4/ADC.c **** *
 322:Generated_Source\PSoC4/ADC.c **** * Summary:
 323:Generated_Source\PSoC4/ADC.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 324:Generated_Source\PSoC4/ADC.c **** *  mode.
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccJWZTE0.s 			page 14


 325:Generated_Source\PSoC4/ADC.c **** *
 326:Generated_Source\PSoC4/ADC.c **** * Parameters:
 327:Generated_Source\PSoC4/ADC.c **** *  None.
 328:Generated_Source\PSoC4/ADC.c **** *
 329:Generated_Source\PSoC4/ADC.c **** * Return:
 330:Generated_Source\PSoC4/ADC.c **** *  None.
 331:Generated_Source\PSoC4/ADC.c **** *
 332:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 333:Generated_Source\PSoC4/ADC.c **** void ADC_Stop(void)
 334:Generated_Source\PSoC4/ADC.c **** {
 411              		.loc 1 334 0
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 0
 414              		@ frame_needed = 1, uses_anonymous_args = 0
 415 0000 80B5     		push	{r7, lr}
 416              		.cfi_def_cfa_offset 8
 417              		.cfi_offset 7, -8
 418              		.cfi_offset 14, -4
 419 0002 00AF     		add	r7, sp, #0
 420              		.cfi_def_cfa_register 7
 335:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG &= (uint32)~ADC_ENABLE;
 421              		.loc 1 335 0
 422 0004 044B     		ldr	r3, .L26
 423 0006 044A     		ldr	r2, .L26
 424 0008 1268     		ldr	r2, [r2]
 425 000a 5200     		lsls	r2, r2, #1
 426 000c 5208     		lsrs	r2, r2, #1
 427 000e 1A60     		str	r2, [r3]
 336:Generated_Source\PSoC4/ADC.c **** }
 428              		.loc 1 336 0
 429 0010 C046     		nop
 430 0012 BD46     		mov	sp, r7
 431              		@ sp needed
 432 0014 80BD     		pop	{r7, pc}
 433              	.L27:
 434 0016 C046     		.align	2
 435              	.L26:
 436 0018 00003A40 		.word	1077542912
 437              		.cfi_endproc
 438              	.LFE4:
 439              		.size	ADC_Stop, .-ADC_Stop
 440              		.section	.text.ADC_StartConvert,"ax",%progbits
 441              		.align	2
 442              		.global	ADC_StartConvert
 443              		.code	16
 444              		.thumb_func
 445              		.type	ADC_StartConvert, %function
 446              	ADC_StartConvert:
 447              	.LFB5:
 337:Generated_Source\PSoC4/ADC.c **** 
 338:Generated_Source\PSoC4/ADC.c **** 
 339:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 340:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StartConvert
 341:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 342:Generated_Source\PSoC4/ADC.c **** *
 343:Generated_Source\PSoC4/ADC.c **** * Summary:
 344:Generated_Source\PSoC4/ADC.c **** *  Description:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccJWZTE0.s 			page 15


 345:Generated_Source\PSoC4/ADC.c **** *  For free running mode, this API starts the conversion process and it
 346:Generated_Source\PSoC4/ADC.c **** *  runs continuously.
 347:Generated_Source\PSoC4/ADC.c **** *
 348:Generated_Source\PSoC4/ADC.c **** *  In a triggered mode, this routine triggers every conversion by
 349:Generated_Source\PSoC4/ADC.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 350:Generated_Source\PSoC4/ADC.c **** *  every conversion has to start by this API.
 351:Generated_Source\PSoC4/ADC.c **** *
 352:Generated_Source\PSoC4/ADC.c **** * Parameters:
 353:Generated_Source\PSoC4/ADC.c **** *  None.
 354:Generated_Source\PSoC4/ADC.c **** *
 355:Generated_Source\PSoC4/ADC.c **** * Return:
 356:Generated_Source\PSoC4/ADC.c **** *  None.
 357:Generated_Source\PSoC4/ADC.c **** *
 358:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 359:Generated_Source\PSoC4/ADC.c **** void ADC_StartConvert(void)
 360:Generated_Source\PSoC4/ADC.c **** {
 448              		.loc 1 360 0
 449              		.cfi_startproc
 450              		@ args = 0, pretend = 0, frame = 0
 451              		@ frame_needed = 1, uses_anonymous_args = 0
 452 0000 80B5     		push	{r7, lr}
 453              		.cfi_def_cfa_offset 8
 454              		.cfi_offset 7, -8
 455              		.cfi_offset 14, -4
 456 0002 00AF     		add	r7, sp, #0
 457              		.cfi_def_cfa_register 7
 361:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 362:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG |= ADC_CONTINUOUS_EN;
 458              		.loc 1 362 0
 459 0004 044B     		ldr	r3, .L29
 460 0006 044A     		ldr	r2, .L29
 461 0008 1268     		ldr	r2, [r2]
 462 000a 8021     		movs	r1, #128
 463 000c 4902     		lsls	r1, r1, #9
 464 000e 0A43     		orrs	r2, r1
 465 0010 1A60     		str	r2, [r3]
 363:Generated_Source\PSoC4/ADC.c ****     #else /* Firmware trigger */
 364:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_START_CTRL_REG = ADC_FW_TRIGGER;
 365:Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 366:Generated_Source\PSoC4/ADC.c **** 
 367:Generated_Source\PSoC4/ADC.c **** }
 466              		.loc 1 367 0
 467 0012 C046     		nop
 468 0014 BD46     		mov	sp, r7
 469              		@ sp needed
 470 0016 80BD     		pop	{r7, pc}
 471              	.L30:
 472              		.align	2
 473              	.L29:
 474 0018 04003A40 		.word	1077542916
 475              		.cfi_endproc
 476              	.LFE5:
 477              		.size	ADC_StartConvert, .-ADC_StartConvert
 478              		.section	.text.ADC_StopConvert,"ax",%progbits
 479              		.align	2
 480              		.global	ADC_StopConvert
 481              		.code	16
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccJWZTE0.s 			page 16


 482              		.thumb_func
 483              		.type	ADC_StopConvert, %function
 484              	ADC_StopConvert:
 485              	.LFB6:
 368:Generated_Source\PSoC4/ADC.c **** 
 369:Generated_Source\PSoC4/ADC.c **** 
 370:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 371:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StopConvert
 372:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 373:Generated_Source\PSoC4/ADC.c **** *
 374:Generated_Source\PSoC4/ADC.c **** * Summary:
 375:Generated_Source\PSoC4/ADC.c **** *  Forces the ADC to stop all conversions.
 376:Generated_Source\PSoC4/ADC.c **** *
 377:Generated_Source\PSoC4/ADC.c **** * Parameters:
 378:Generated_Source\PSoC4/ADC.c **** *  None.
 379:Generated_Source\PSoC4/ADC.c **** *
 380:Generated_Source\PSoC4/ADC.c **** * Return:
 381:Generated_Source\PSoC4/ADC.c **** *  None.
 382:Generated_Source\PSoC4/ADC.c **** *
 383:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 384:Generated_Source\PSoC4/ADC.c **** void ADC_StopConvert(void)
 385:Generated_Source\PSoC4/ADC.c **** {
 486              		.loc 1 385 0
 487              		.cfi_startproc
 488              		@ args = 0, pretend = 0, frame = 0
 489              		@ frame_needed = 1, uses_anonymous_args = 0
 490 0000 80B5     		push	{r7, lr}
 491              		.cfi_def_cfa_offset 8
 492              		.cfi_offset 7, -8
 493              		.cfi_offset 14, -4
 494 0002 00AF     		add	r7, sp, #0
 495              		.cfi_def_cfa_register 7
 386:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 387:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_CONTINUOUS_EN);
 496              		.loc 1 387 0
 497 0004 044B     		ldr	r3, .L32
 498 0006 044A     		ldr	r2, .L32
 499 0008 1268     		ldr	r2, [r2]
 500 000a 0449     		ldr	r1, .L32+4
 501 000c 0A40     		ands	r2, r1
 502 000e 1A60     		str	r2, [r3]
 388:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 389:Generated_Source\PSoC4/ADC.c **** }
 503              		.loc 1 389 0
 504 0010 C046     		nop
 505 0012 BD46     		mov	sp, r7
 506              		@ sp needed
 507 0014 80BD     		pop	{r7, pc}
 508              	.L33:
 509 0016 C046     		.align	2
 510              	.L32:
 511 0018 04003A40 		.word	1077542916
 512 001c FFFFFEFF 		.word	-65537
 513              		.cfi_endproc
 514              	.LFE6:
 515              		.size	ADC_StopConvert, .-ADC_StopConvert
 516              		.section	.text.ADC_IsEndConversion,"ax",%progbits
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccJWZTE0.s 			page 17


 517              		.align	2
 518              		.global	ADC_IsEndConversion
 519              		.code	16
 520              		.thumb_func
 521              		.type	ADC_IsEndConversion, %function
 522              	ADC_IsEndConversion:
 523              	.LFB7:
 390:Generated_Source\PSoC4/ADC.c **** 
 391:Generated_Source\PSoC4/ADC.c **** 
 392:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 393:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_IsEndConversion
 394:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 395:Generated_Source\PSoC4/ADC.c **** *
 396:Generated_Source\PSoC4/ADC.c **** * Summary:
 397:Generated_Source\PSoC4/ADC.c **** *  Description: Checks for ADC end of conversion for the case one
 398:Generated_Source\PSoC4/ADC.c **** *  channel and end of scan for the case of multiple channels. It acts
 399:Generated_Source\PSoC4/ADC.c **** *  as a software version of the EOC. This function provides the
 400:Generated_Source\PSoC4/ADC.c **** *  programmer with two options. In one mode this function
 401:Generated_Source\PSoC4/ADC.c **** *  immediately returns with the conversion status. In the other mode,
 402:Generated_Source\PSoC4/ADC.c **** *  the function does not return (blocking) until the conversion has
 403:Generated_Source\PSoC4/ADC.c **** *  completed.
 404:Generated_Source\PSoC4/ADC.c **** *
 405:Generated_Source\PSoC4/ADC.c **** * Parameters:
 406:Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 407:Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 408:Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 409:Generated_Source\PSoC4/ADC.c **** *                              for injection channel
 410:Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 411:Generated_Source\PSoC4/ADC.c **** *                              channel conversion
 412:Generated_Source\PSoC4/ADC.c **** *
 413:Generated_Source\PSoC4/ADC.c **** * Return:
 414:Generated_Source\PSoC4/ADC.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 415:Generated_Source\PSoC4/ADC.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 416:Generated_Source\PSoC4/ADC.c **** *
 417:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 418:Generated_Source\PSoC4/ADC.c **** uint32 ADC_IsEndConversion(uint32 retMode)
 419:Generated_Source\PSoC4/ADC.c **** {
 524              		.loc 1 419 0
 525              		.cfi_startproc
 526              		@ args = 0, pretend = 0, frame = 16
 527              		@ frame_needed = 1, uses_anonymous_args = 0
 528 0000 80B5     		push	{r7, lr}
 529              		.cfi_def_cfa_offset 8
 530              		.cfi_offset 7, -8
 531              		.cfi_offset 14, -4
 532 0002 84B0     		sub	sp, sp, #16
 533              		.cfi_def_cfa_offset 24
 534 0004 00AF     		add	r7, sp, #0
 535              		.cfi_def_cfa_register 7
 536 0006 7860     		str	r0, [r7, #4]
 420:Generated_Source\PSoC4/ADC.c ****     uint32 status = 0u;
 537              		.loc 1 420 0
 538 0008 0023     		movs	r3, #0
 539 000a FB60     		str	r3, [r7, #12]
 421:Generated_Source\PSoC4/ADC.c **** 
 422:Generated_Source\PSoC4/ADC.c ****     if((retMode & (ADC_RETURN_STATUS | ADC_WAIT_FOR_RESULT)) != 0u)
 540              		.loc 1 422 0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccJWZTE0.s 			page 18


 541 000c 7B68     		ldr	r3, [r7, #4]
 542 000e 0322     		movs	r2, #3
 543 0010 1340     		ands	r3, r2
 544 0012 11D0     		beq	.L35
 545              	.L37:
 423:Generated_Source\PSoC4/ADC.c ****     {
 424:Generated_Source\PSoC4/ADC.c ****         do
 425:Generated_Source\PSoC4/ADC.c ****         {
 426:Generated_Source\PSoC4/ADC.c ****             status = ADC_SAR_INTR_REG & ADC_EOS_MASK;
 546              		.loc 1 426 0 discriminator 2
 547 0014 0B4B     		ldr	r3, .L39
 548 0016 1B68     		ldr	r3, [r3]
 549 0018 0122     		movs	r2, #1
 550 001a 1340     		ands	r3, r2
 551 001c FB60     		str	r3, [r7, #12]
 427:Generated_Source\PSoC4/ADC.c ****         }while((status == 0u) && ((retMode & ADC_WAIT_FOR_RESULT) != 0u));
 552              		.loc 1 427 0 discriminator 2
 553 001e FB68     		ldr	r3, [r7, #12]
 554 0020 002B     		cmp	r3, #0
 555 0022 03D1     		bne	.L36
 556              		.loc 1 427 0 is_stmt 0 discriminator 1
 557 0024 7B68     		ldr	r3, [r7, #4]
 558 0026 0222     		movs	r2, #2
 559 0028 1340     		ands	r3, r2
 560 002a F3D1     		bne	.L37
 561              	.L36:
 428:Generated_Source\PSoC4/ADC.c **** 
 429:Generated_Source\PSoC4/ADC.c ****         if(status != 0u)
 562              		.loc 1 429 0 is_stmt 1
 563 002c FB68     		ldr	r3, [r7, #12]
 564 002e 002B     		cmp	r3, #0
 565 0030 02D0     		beq	.L35
 430:Generated_Source\PSoC4/ADC.c ****         {
 431:Generated_Source\PSoC4/ADC.c ****             /* Clear EOS bit */
 432:Generated_Source\PSoC4/ADC.c ****             ADC_SAR_INTR_REG = ADC_EOS_MASK;
 566              		.loc 1 432 0
 567 0032 044B     		ldr	r3, .L39
 568 0034 0122     		movs	r2, #1
 569 0036 1A60     		str	r2, [r3]
 570              	.L35:
 433:Generated_Source\PSoC4/ADC.c ****         }
 434:Generated_Source\PSoC4/ADC.c ****     }
 435:Generated_Source\PSoC4/ADC.c **** 
 436:Generated_Source\PSoC4/ADC.c ****     #if(ADC_INJ_CHANNEL_ENABLED)
 437:Generated_Source\PSoC4/ADC.c ****         if((retMode & (ADC_RETURN_STATUS_INJ | ADC_WAIT_FOR_RESULT_INJ)) != 0u)
 438:Generated_Source\PSoC4/ADC.c ****         {
 439:Generated_Source\PSoC4/ADC.c ****             do
 440:Generated_Source\PSoC4/ADC.c ****             {
 441:Generated_Source\PSoC4/ADC.c ****                 status |= ADC_SAR_INTR_REG & ADC_INJ_EOC_MASK;
 442:Generated_Source\PSoC4/ADC.c ****             }while(((status & ADC_INJ_EOC_MASK) == 0u) &&
 443:Generated_Source\PSoC4/ADC.c ****                    ((retMode & ADC_WAIT_FOR_RESULT_INJ) != 0u));
 444:Generated_Source\PSoC4/ADC.c **** 
 445:Generated_Source\PSoC4/ADC.c ****             if((status & ADC_INJ_EOC_MASK) != 0u)
 446:Generated_Source\PSoC4/ADC.c ****             {
 447:Generated_Source\PSoC4/ADC.c ****                 /* Clear Injection EOS bit */
 448:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_INTR_REG = ADC_INJ_EOC_MASK;
 449:Generated_Source\PSoC4/ADC.c ****             }
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccJWZTE0.s 			page 19


 450:Generated_Source\PSoC4/ADC.c ****         }
 451:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_INJ_CHANNEL_ENABLED */
 452:Generated_Source\PSoC4/ADC.c **** 
 453:Generated_Source\PSoC4/ADC.c ****     return (status);
 571              		.loc 1 453 0
 572 0038 FB68     		ldr	r3, [r7, #12]
 454:Generated_Source\PSoC4/ADC.c **** }
 573              		.loc 1 454 0
 574 003a 1800     		movs	r0, r3
 575 003c BD46     		mov	sp, r7
 576 003e 04B0     		add	sp, sp, #16
 577              		@ sp needed
 578 0040 80BD     		pop	{r7, pc}
 579              	.L40:
 580 0042 C046     		.align	2
 581              	.L39:
 582 0044 10023A40 		.word	1077543440
 583              		.cfi_endproc
 584              	.LFE7:
 585              		.size	ADC_IsEndConversion, .-ADC_IsEndConversion
 586              		.section	.text.ADC_GetResult16,"ax",%progbits
 587              		.align	2
 588              		.global	ADC_GetResult16
 589              		.code	16
 590              		.thumb_func
 591              		.type	ADC_GetResult16, %function
 592              	ADC_GetResult16:
 593              	.LFB8:
 455:Generated_Source\PSoC4/ADC.c **** 
 456:Generated_Source\PSoC4/ADC.c **** 
 457:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 458:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_GetResult16
 459:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 460:Generated_Source\PSoC4/ADC.c **** *
 461:Generated_Source\PSoC4/ADC.c **** * Summary:
 462:Generated_Source\PSoC4/ADC.c **** *  Gets the data available in the SAR DATA register.
 463:Generated_Source\PSoC4/ADC.c **** *
 464:Generated_Source\PSoC4/ADC.c **** * Parameters:
 465:Generated_Source\PSoC4/ADC.c **** *  chan: The ADC channel in which to return the result. The first channel
 466:Generated_Source\PSoC4/ADC.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 467:Generated_Source\PSoC4/ADC.c **** *
 468:Generated_Source\PSoC4/ADC.c **** * Return:
 469:Generated_Source\PSoC4/ADC.c **** *  Returns converted data as a signed 16-bit integer
 470:Generated_Source\PSoC4/ADC.c **** *
 471:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 472:Generated_Source\PSoC4/ADC.c **** int16 ADC_GetResult16(uint32 chan)
 473:Generated_Source\PSoC4/ADC.c **** {
 594              		.loc 1 473 0
 595              		.cfi_startproc
 596              		@ args = 0, pretend = 0, frame = 16
 597              		@ frame_needed = 1, uses_anonymous_args = 0
 598 0000 80B5     		push	{r7, lr}
 599              		.cfi_def_cfa_offset 8
 600              		.cfi_offset 7, -8
 601              		.cfi_offset 14, -4
 602 0002 84B0     		sub	sp, sp, #16
 603              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccJWZTE0.s 			page 20


 604 0004 00AF     		add	r7, sp, #0
 605              		.cfi_def_cfa_register 7
 606 0006 7860     		str	r0, [r7, #4]
 474:Generated_Source\PSoC4/ADC.c ****     uint32 result;
 475:Generated_Source\PSoC4/ADC.c **** 
 476:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 477:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 607              		.loc 1 477 0
 608 0008 7B68     		ldr	r3, [r7, #4]
 609 000a 002B     		cmp	r3, #0
 610 000c 02D0     		beq	.L42
 611              		.loc 1 477 0 is_stmt 0 discriminator 1
 612 000e 0020     		movs	r0, #0
 613 0010 FFF7FEFF 		bl	CyHalt
 614              	.L42:
 478:Generated_Source\PSoC4/ADC.c **** 
 479:Generated_Source\PSoC4/ADC.c ****     if(chan < ADC_SEQUENCED_CHANNELS_NUM)
 615              		.loc 1 479 0 is_stmt 1
 616 0014 7B68     		ldr	r3, [r7, #4]
 617 0016 002B     		cmp	r3, #0
 618 0018 09D1     		bne	.L43
 480:Generated_Source\PSoC4/ADC.c ****     {
 481:Generated_Source\PSoC4/ADC.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 619              		.loc 1 481 0
 620 001a 7B68     		ldr	r3, [r7, #4]
 621 001c 9B00     		lsls	r3, r3, #2
 622 001e 084A     		ldr	r2, .L46
 623 0020 9446     		mov	ip, r2
 624 0022 6344     		add	r3, r3, ip
 625 0024 1B68     		ldr	r3, [r3]
 626 0026 1B04     		lsls	r3, r3, #16
 627 0028 1B0C     		lsrs	r3, r3, #16
 628 002a FB60     		str	r3, [r7, #12]
 629 002c 01E0     		b	.L44
 630              	.L43:
 482:Generated_Source\PSoC4/ADC.c ****                 ADC_RESULT_MASK;
 483:Generated_Source\PSoC4/ADC.c ****     }
 484:Generated_Source\PSoC4/ADC.c ****     else
 485:Generated_Source\PSoC4/ADC.c ****     {
 486:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 487:Generated_Source\PSoC4/ADC.c ****             result = ADC_SAR_INJ_RESULT_REG & ADC_RESULT_MASK;
 488:Generated_Source\PSoC4/ADC.c ****         #else
 489:Generated_Source\PSoC4/ADC.c ****             result = 0u;
 631              		.loc 1 489 0
 632 002e 0023     		movs	r3, #0
 633 0030 FB60     		str	r3, [r7, #12]
 634              	.L44:
 490:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 491:Generated_Source\PSoC4/ADC.c ****     }
 492:Generated_Source\PSoC4/ADC.c **** 
 493:Generated_Source\PSoC4/ADC.c ****     return ( (int16)result );
 635              		.loc 1 493 0
 636 0032 FB68     		ldr	r3, [r7, #12]
 637 0034 1BB2     		sxth	r3, r3
 494:Generated_Source\PSoC4/ADC.c **** }
 638              		.loc 1 494 0
 639 0036 1800     		movs	r0, r3
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccJWZTE0.s 			page 21


 640 0038 BD46     		mov	sp, r7
 641 003a 04B0     		add	sp, sp, #16
 642              		@ sp needed
 643 003c 80BD     		pop	{r7, pc}
 644              	.L47:
 645 003e C046     		.align	2
 646              	.L46:
 647 0040 80013A40 		.word	1077543296
 648              		.cfi_endproc
 649              	.LFE8:
 650              		.size	ADC_GetResult16, .-ADC_GetResult16
 651              		.section	.text.ADC_SetChanMask,"ax",%progbits
 652              		.align	2
 653              		.global	ADC_SetChanMask
 654              		.code	16
 655              		.thumb_func
 656              		.type	ADC_SetChanMask, %function
 657              	ADC_SetChanMask:
 658              	.LFB9:
 495:Generated_Source\PSoC4/ADC.c **** 
 496:Generated_Source\PSoC4/ADC.c **** 
 497:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 498:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetChanMask
 499:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 500:Generated_Source\PSoC4/ADC.c **** *
 501:Generated_Source\PSoC4/ADC.c **** * Summary:
 502:Generated_Source\PSoC4/ADC.c **** *  Sets the channel enable mask.
 503:Generated_Source\PSoC4/ADC.c **** *
 504:Generated_Source\PSoC4/ADC.c **** * Parameters:
 505:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that will be
 506:Generated_Source\PSoC4/ADC.c **** *  scanned. Setting bits for channels that do not exist will have no
 507:Generated_Source\PSoC4/ADC.c **** *  effect. For example, if only 6 channels were enabled, setting a
 508:Generated_Source\PSoC4/ADC.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 509:Generated_Source\PSoC4/ADC.c **** *  This API will not enable the injection channel.
 510:Generated_Source\PSoC4/ADC.c **** *  Examples: If the component is setup to sequence through 8
 511:Generated_Source\PSoC4/ADC.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 512:Generated_Source\PSoC4/ADC.c **** *
 513:Generated_Source\PSoC4/ADC.c **** * Return:
 514:Generated_Source\PSoC4/ADC.c **** *  None.
 515:Generated_Source\PSoC4/ADC.c **** *
 516:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 517:Generated_Source\PSoC4/ADC.c **** void ADC_SetChanMask(uint32 mask)
 518:Generated_Source\PSoC4/ADC.c **** {
 659              		.loc 1 518 0
 660              		.cfi_startproc
 661              		@ args = 0, pretend = 0, frame = 8
 662              		@ frame_needed = 1, uses_anonymous_args = 0
 663 0000 80B5     		push	{r7, lr}
 664              		.cfi_def_cfa_offset 8
 665              		.cfi_offset 7, -8
 666              		.cfi_offset 14, -4
 667 0002 82B0     		sub	sp, sp, #8
 668              		.cfi_def_cfa_offset 16
 669 0004 00AF     		add	r7, sp, #0
 670              		.cfi_def_cfa_register 7
 671 0006 7860     		str	r0, [r7, #4]
 519:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccJWZTE0.s 			page 22


 672              		.loc 1 519 0
 673 0008 044B     		ldr	r3, .L49
 674 000a 7A68     		ldr	r2, [r7, #4]
 675 000c 0121     		movs	r1, #1
 676 000e 0A40     		ands	r2, r1
 677 0010 1A60     		str	r2, [r3]
 520:Generated_Source\PSoC4/ADC.c **** }
 678              		.loc 1 520 0
 679 0012 C046     		nop
 680 0014 BD46     		mov	sp, r7
 681 0016 02B0     		add	sp, sp, #8
 682              		@ sp needed
 683 0018 80BD     		pop	{r7, pc}
 684              	.L50:
 685 001a C046     		.align	2
 686              	.L49:
 687 001c 20003A40 		.word	1077542944
 688              		.cfi_endproc
 689              	.LFE9:
 690              		.size	ADC_SetChanMask, .-ADC_SetChanMask
 691              		.section	.text.ADC_SetLowLimit,"ax",%progbits
 692              		.align	2
 693              		.global	ADC_SetLowLimit
 694              		.code	16
 695              		.thumb_func
 696              		.type	ADC_SetLowLimit, %function
 697              	ADC_SetLowLimit:
 698              	.LFB10:
 521:Generated_Source\PSoC4/ADC.c **** 
 522:Generated_Source\PSoC4/ADC.c **** #if(ADC_INJ_CHANNEL_ENABLED)
 523:Generated_Source\PSoC4/ADC.c **** 
 524:Generated_Source\PSoC4/ADC.c **** 
 525:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 526:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_EnableInjection
 527:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 528:Generated_Source\PSoC4/ADC.c ****     *
 529:Generated_Source\PSoC4/ADC.c ****     * Summary:
 530:Generated_Source\PSoC4/ADC.c ****     *  Enables the injection channel for the next scan only.
 531:Generated_Source\PSoC4/ADC.c ****     *
 532:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 533:Generated_Source\PSoC4/ADC.c ****     *  None.
 534:Generated_Source\PSoC4/ADC.c ****     *
 535:Generated_Source\PSoC4/ADC.c ****     * Return:
 536:Generated_Source\PSoC4/ADC.c ****     *  None.
 537:Generated_Source\PSoC4/ADC.c ****     *
 538:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 539:Generated_Source\PSoC4/ADC.c ****     void ADC_EnableInjection(void)
 540:Generated_Source\PSoC4/ADC.c ****     {
 541:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_INJ_CHAN_CONFIG_REG |= ADC_INJ_CHAN_EN;
 542:Generated_Source\PSoC4/ADC.c ****     }
 543:Generated_Source\PSoC4/ADC.c **** 
 544:Generated_Source\PSoC4/ADC.c **** #endif /* ADC_INJ_CHANNEL_ENABLED */
 545:Generated_Source\PSoC4/ADC.c **** 
 546:Generated_Source\PSoC4/ADC.c **** 
 547:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 548:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLowLimit
 549:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccJWZTE0.s 			page 23


 550:Generated_Source\PSoC4/ADC.c **** *
 551:Generated_Source\PSoC4/ADC.c **** * Summary:
 552:Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 553:Generated_Source\PSoC4/ADC.c **** *
 554:Generated_Source\PSoC4/ADC.c **** * Parameters:
 555:Generated_Source\PSoC4/ADC.c **** *  lowLimit: The low limit for a limit condition.
 556:Generated_Source\PSoC4/ADC.c **** *
 557:Generated_Source\PSoC4/ADC.c **** * Return:
 558:Generated_Source\PSoC4/ADC.c **** *  None.
 559:Generated_Source\PSoC4/ADC.c **** *
 560:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 561:Generated_Source\PSoC4/ADC.c **** void ADC_SetLowLimit(uint32 lowLimit)
 562:Generated_Source\PSoC4/ADC.c **** {
 699              		.loc 1 562 0
 700              		.cfi_startproc
 701              		@ args = 0, pretend = 0, frame = 8
 702              		@ frame_needed = 1, uses_anonymous_args = 0
 703 0000 80B5     		push	{r7, lr}
 704              		.cfi_def_cfa_offset 8
 705              		.cfi_offset 7, -8
 706              		.cfi_offset 14, -4
 707 0002 82B0     		sub	sp, sp, #8
 708              		.cfi_def_cfa_offset 16
 709 0004 00AF     		add	r7, sp, #0
 710              		.cfi_def_cfa_register 7
 711 0006 7860     		str	r0, [r7, #4]
 563:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_LOW_MASK);
 712              		.loc 1 563 0
 713 0008 084B     		ldr	r3, .L52
 714 000a 084A     		ldr	r2, .L52
 715 000c 1268     		ldr	r2, [r2]
 716 000e 120C     		lsrs	r2, r2, #16
 717 0010 1204     		lsls	r2, r2, #16
 718 0012 1A60     		str	r2, [r3]
 564:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= lowLimit & ADC_RANGE_LOW_MASK;
 719              		.loc 1 564 0
 720 0014 054B     		ldr	r3, .L52
 721 0016 054A     		ldr	r2, .L52
 722 0018 1168     		ldr	r1, [r2]
 723 001a 7A68     		ldr	r2, [r7, #4]
 724 001c 1204     		lsls	r2, r2, #16
 725 001e 120C     		lsrs	r2, r2, #16
 726 0020 0A43     		orrs	r2, r1
 727 0022 1A60     		str	r2, [r3]
 565:Generated_Source\PSoC4/ADC.c **** }
 728              		.loc 1 565 0
 729 0024 C046     		nop
 730 0026 BD46     		mov	sp, r7
 731 0028 02B0     		add	sp, sp, #8
 732              		@ sp needed
 733 002a 80BD     		pop	{r7, pc}
 734              	.L53:
 735              		.align	2
 736              	.L52:
 737 002c 18003A40 		.word	1077542936
 738              		.cfi_endproc
 739              	.LFE10:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccJWZTE0.s 			page 24


 740              		.size	ADC_SetLowLimit, .-ADC_SetLowLimit
 741              		.section	.text.ADC_SetHighLimit,"ax",%progbits
 742              		.align	2
 743              		.global	ADC_SetHighLimit
 744              		.code	16
 745              		.thumb_func
 746              		.type	ADC_SetHighLimit, %function
 747              	ADC_SetHighLimit:
 748              	.LFB11:
 566:Generated_Source\PSoC4/ADC.c **** 
 567:Generated_Source\PSoC4/ADC.c **** 
 568:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 569:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetHighLimit
 570:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 571:Generated_Source\PSoC4/ADC.c **** *
 572:Generated_Source\PSoC4/ADC.c **** * Summary:
 573:Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 574:Generated_Source\PSoC4/ADC.c **** *
 575:Generated_Source\PSoC4/ADC.c **** * Parameters:
 576:Generated_Source\PSoC4/ADC.c **** *  highLimit: The high limit for a limit condition.
 577:Generated_Source\PSoC4/ADC.c **** *
 578:Generated_Source\PSoC4/ADC.c **** * Return:
 579:Generated_Source\PSoC4/ADC.c **** *  None.
 580:Generated_Source\PSoC4/ADC.c **** *
 581:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 582:Generated_Source\PSoC4/ADC.c **** void ADC_SetHighLimit(uint32 highLimit)
 583:Generated_Source\PSoC4/ADC.c **** {
 749              		.loc 1 583 0
 750              		.cfi_startproc
 751              		@ args = 0, pretend = 0, frame = 8
 752              		@ frame_needed = 1, uses_anonymous_args = 0
 753 0000 80B5     		push	{r7, lr}
 754              		.cfi_def_cfa_offset 8
 755              		.cfi_offset 7, -8
 756              		.cfi_offset 14, -4
 757 0002 82B0     		sub	sp, sp, #8
 758              		.cfi_def_cfa_offset 16
 759 0004 00AF     		add	r7, sp, #0
 760              		.cfi_def_cfa_register 7
 761 0006 7860     		str	r0, [r7, #4]
 584:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_HIGH_MASK);
 762              		.loc 1 584 0
 763 0008 084B     		ldr	r3, .L55
 764 000a 084A     		ldr	r2, .L55
 765 000c 1268     		ldr	r2, [r2]
 766 000e 1204     		lsls	r2, r2, #16
 767 0010 120C     		lsrs	r2, r2, #16
 768 0012 1A60     		str	r2, [r3]
 585:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_RANGE_HIGH_OFFSET);
 769              		.loc 1 585 0
 770 0014 054B     		ldr	r3, .L55
 771 0016 054A     		ldr	r2, .L55
 772 0018 1168     		ldr	r1, [r2]
 773 001a 7A68     		ldr	r2, [r7, #4]
 774 001c 1204     		lsls	r2, r2, #16
 775 001e 0A43     		orrs	r2, r1
 776 0020 1A60     		str	r2, [r3]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccJWZTE0.s 			page 25


 586:Generated_Source\PSoC4/ADC.c **** }
 777              		.loc 1 586 0
 778 0022 C046     		nop
 779 0024 BD46     		mov	sp, r7
 780 0026 02B0     		add	sp, sp, #8
 781              		@ sp needed
 782 0028 80BD     		pop	{r7, pc}
 783              	.L56:
 784 002a C046     		.align	2
 785              	.L55:
 786 002c 18003A40 		.word	1077542936
 787              		.cfi_endproc
 788              	.LFE11:
 789              		.size	ADC_SetHighLimit, .-ADC_SetHighLimit
 790              		.section	.text.ADC_SetLimitMask,"ax",%progbits
 791              		.align	2
 792              		.global	ADC_SetLimitMask
 793              		.code	16
 794              		.thumb_func
 795              		.type	ADC_SetLimitMask, %function
 796              	ADC_SetLimitMask:
 797              	.LFB12:
 587:Generated_Source\PSoC4/ADC.c **** 
 588:Generated_Source\PSoC4/ADC.c **** 
 589:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 590:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLimitMask
 591:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 592:Generated_Source\PSoC4/ADC.c **** *
 593:Generated_Source\PSoC4/ADC.c **** * Summary:
 594:Generated_Source\PSoC4/ADC.c **** *  Sets the channel limit condition mask.
 595:Generated_Source\PSoC4/ADC.c **** *
 596:Generated_Source\PSoC4/ADC.c **** * Parameters:
 597:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 598:Generated_Source\PSoC4/ADC.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 599:Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 6 channels were enabled,
 600:Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 601:Generated_Source\PSoC4/ADC.c **** *
 602:Generated_Source\PSoC4/ADC.c **** * Return:
 603:Generated_Source\PSoC4/ADC.c **** *  None.
 604:Generated_Source\PSoC4/ADC.c **** *
 605:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 606:Generated_Source\PSoC4/ADC.c **** void ADC_SetLimitMask(uint32 mask)
 607:Generated_Source\PSoC4/ADC.c **** {
 798              		.loc 1 607 0
 799              		.cfi_startproc
 800              		@ args = 0, pretend = 0, frame = 8
 801              		@ frame_needed = 1, uses_anonymous_args = 0
 802 0000 80B5     		push	{r7, lr}
 803              		.cfi_def_cfa_offset 8
 804              		.cfi_offset 7, -8
 805              		.cfi_offset 14, -4
 806 0002 82B0     		sub	sp, sp, #8
 807              		.cfi_def_cfa_offset 16
 808 0004 00AF     		add	r7, sp, #0
 809              		.cfi_def_cfa_register 7
 810 0006 7860     		str	r0, [r7, #4]
 608:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccJWZTE0.s 			page 26


 811              		.loc 1 608 0
 812 0008 044B     		ldr	r3, .L58
 813 000a 7A68     		ldr	r2, [r7, #4]
 814 000c 0121     		movs	r1, #1
 815 000e 0A40     		ands	r2, r1
 816 0010 1A60     		str	r2, [r3]
 609:Generated_Source\PSoC4/ADC.c **** }
 817              		.loc 1 609 0
 818 0012 C046     		nop
 819 0014 BD46     		mov	sp, r7
 820 0016 02B0     		add	sp, sp, #8
 821              		@ sp needed
 822 0018 80BD     		pop	{r7, pc}
 823              	.L59:
 824 001a C046     		.align	2
 825              	.L58:
 826 001c 38023A40 		.word	1077543480
 827              		.cfi_endproc
 828              	.LFE12:
 829              		.size	ADC_SetLimitMask, .-ADC_SetLimitMask
 830              		.section	.text.ADC_SetSatMask,"ax",%progbits
 831              		.align	2
 832              		.global	ADC_SetSatMask
 833              		.code	16
 834              		.thumb_func
 835              		.type	ADC_SetSatMask, %function
 836              	ADC_SetSatMask:
 837              	.LFB13:
 610:Generated_Source\PSoC4/ADC.c **** 
 611:Generated_Source\PSoC4/ADC.c **** 
 612:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 613:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetSatMask
 614:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 615:Generated_Source\PSoC4/ADC.c **** *
 616:Generated_Source\PSoC4/ADC.c **** * Summary:
 617:Generated_Source\PSoC4/ADC.c **** *  Sets the channel saturation event mask.
 618:Generated_Source\PSoC4/ADC.c **** *
 619:Generated_Source\PSoC4/ADC.c **** * Parameters:
 620:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 621:Generated_Source\PSoC4/ADC.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 622:Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 8 channels were enabled,
 623:Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 624:Generated_Source\PSoC4/ADC.c **** *
 625:Generated_Source\PSoC4/ADC.c **** * Return:
 626:Generated_Source\PSoC4/ADC.c **** *  None.
 627:Generated_Source\PSoC4/ADC.c **** *
 628:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 629:Generated_Source\PSoC4/ADC.c **** void ADC_SetSatMask(uint32 mask)
 630:Generated_Source\PSoC4/ADC.c **** {
 838              		.loc 1 630 0
 839              		.cfi_startproc
 840              		@ args = 0, pretend = 0, frame = 8
 841              		@ frame_needed = 1, uses_anonymous_args = 0
 842 0000 80B5     		push	{r7, lr}
 843              		.cfi_def_cfa_offset 8
 844              		.cfi_offset 7, -8
 845              		.cfi_offset 14, -4
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccJWZTE0.s 			page 27


 846 0002 82B0     		sub	sp, sp, #8
 847              		.cfi_def_cfa_offset 16
 848 0004 00AF     		add	r7, sp, #0
 849              		.cfi_def_cfa_register 7
 850 0006 7860     		str	r0, [r7, #4]
 631:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 851              		.loc 1 631 0
 852 0008 044B     		ldr	r3, .L61
 853 000a 7A68     		ldr	r2, [r7, #4]
 854 000c 0121     		movs	r1, #1
 855 000e 0A40     		ands	r2, r1
 856 0010 1A60     		str	r2, [r3]
 632:Generated_Source\PSoC4/ADC.c **** }
 857              		.loc 1 632 0
 858 0012 C046     		nop
 859 0014 BD46     		mov	sp, r7
 860 0016 02B0     		add	sp, sp, #8
 861              		@ sp needed
 862 0018 80BD     		pop	{r7, pc}
 863              	.L62:
 864 001a C046     		.align	2
 865              	.L61:
 866 001c 28023A40 		.word	1077543464
 867              		.cfi_endproc
 868              	.LFE13:
 869              		.size	ADC_SetSatMask, .-ADC_SetSatMask
 870              		.section	.text.ADC_SetOffset,"ax",%progbits
 871              		.align	2
 872              		.global	ADC_SetOffset
 873              		.code	16
 874              		.thumb_func
 875              		.type	ADC_SetOffset, %function
 876              	ADC_SetOffset:
 877              	.LFB14:
 633:Generated_Source\PSoC4/ADC.c **** 
 634:Generated_Source\PSoC4/ADC.c **** 
 635:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 636:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetOffset
 637:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 638:Generated_Source\PSoC4/ADC.c **** *
 639:Generated_Source\PSoC4/ADC.c **** * Summary:
 640:Generated_Source\PSoC4/ADC.c **** *   Description: Sets the ADC offset which is used by the functions
 641:Generated_Source\PSoC4/ADC.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 642:Generated_Source\PSoC4/ADC.c **** *   to substract the offset from the given reading
 643:Generated_Source\PSoC4/ADC.c **** *   before calculating the voltage conversion.
 644:Generated_Source\PSoC4/ADC.c **** *
 645:Generated_Source\PSoC4/ADC.c **** * Parameters:
 646:Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 647:Generated_Source\PSoC4/ADC.c **** *  offset: This value is a measured value when the
 648:Generated_Source\PSoC4/ADC.c **** *          inputs are shorted or connected to the same input voltage.
 649:Generated_Source\PSoC4/ADC.c **** *
 650:Generated_Source\PSoC4/ADC.c **** * Return:
 651:Generated_Source\PSoC4/ADC.c **** *  None.
 652:Generated_Source\PSoC4/ADC.c **** *
 653:Generated_Source\PSoC4/ADC.c **** * Global variables:
 654:Generated_Source\PSoC4/ADC.c **** *  ADC_Offset:  Modified to set the user provided offset.
 655:Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccJWZTE0.s 			page 28


 656:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 657:Generated_Source\PSoC4/ADC.c **** void ADC_SetOffset(uint32 chan, int16 offset)
 658:Generated_Source\PSoC4/ADC.c **** {
 878              		.loc 1 658 0
 879              		.cfi_startproc
 880              		@ args = 0, pretend = 0, frame = 8
 881              		@ frame_needed = 1, uses_anonymous_args = 0
 882 0000 80B5     		push	{r7, lr}
 883              		.cfi_def_cfa_offset 8
 884              		.cfi_offset 7, -8
 885              		.cfi_offset 14, -4
 886 0002 82B0     		sub	sp, sp, #8
 887              		.cfi_def_cfa_offset 16
 888 0004 00AF     		add	r7, sp, #0
 889              		.cfi_def_cfa_register 7
 890 0006 7860     		str	r0, [r7, #4]
 891 0008 0A00     		movs	r2, r1
 892 000a BB1C     		adds	r3, r7, #2
 893 000c 1A80     		strh	r2, [r3]
 659:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 660:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 894              		.loc 1 660 0
 895 000e 7B68     		ldr	r3, [r7, #4]
 896 0010 002B     		cmp	r3, #0
 897 0012 02D0     		beq	.L64
 898              		.loc 1 660 0 is_stmt 0 discriminator 1
 899 0014 0020     		movs	r0, #0
 900 0016 FFF7FEFF 		bl	CyHalt
 901              	.L64:
 661:Generated_Source\PSoC4/ADC.c **** 
 662:Generated_Source\PSoC4/ADC.c ****     ADC_offset[chan] = offset;
 902              		.loc 1 662 0 is_stmt 1
 903 001a 054B     		ldr	r3, .L65
 904 001c 7A68     		ldr	r2, [r7, #4]
 905 001e 5200     		lsls	r2, r2, #1
 906 0020 B91C     		adds	r1, r7, #2
 907 0022 0988     		ldrh	r1, [r1]
 908 0024 D152     		strh	r1, [r2, r3]
 663:Generated_Source\PSoC4/ADC.c **** }
 909              		.loc 1 663 0
 910 0026 C046     		nop
 911 0028 BD46     		mov	sp, r7
 912 002a 02B0     		add	sp, sp, #8
 913              		@ sp needed
 914 002c 80BD     		pop	{r7, pc}
 915              	.L66:
 916 002e C046     		.align	2
 917              	.L65:
 918 0030 00000000 		.word	ADC_offset
 919              		.cfi_endproc
 920              	.LFE14:
 921              		.size	ADC_SetOffset, .-ADC_SetOffset
 922              		.section	.text.ADC_SetGain,"ax",%progbits
 923              		.align	2
 924              		.global	ADC_SetGain
 925              		.code	16
 926              		.thumb_func
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccJWZTE0.s 			page 29


 927              		.type	ADC_SetGain, %function
 928              	ADC_SetGain:
 929              	.LFB15:
 664:Generated_Source\PSoC4/ADC.c **** 
 665:Generated_Source\PSoC4/ADC.c **** 
 666:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 667:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetGain
 668:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 669:Generated_Source\PSoC4/ADC.c **** *
 670:Generated_Source\PSoC4/ADC.c **** * Summary:
 671:Generated_Source\PSoC4/ADC.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 672:Generated_Source\PSoC4/ADC.c **** *  conversion functions below. This value is set by default by the
 673:Generated_Source\PSoC4/ADC.c **** *  reference and input range settings. It should only be used to further
 674:Generated_Source\PSoC4/ADC.c **** *  calibrate the ADC with a known input or if an external reference is
 675:Generated_Source\PSoC4/ADC.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 676:Generated_Source\PSoC4/ADC.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 677:Generated_Source\PSoC4/ADC.c **** *  conversion between ADC counts and voltage.
 678:Generated_Source\PSoC4/ADC.c **** *
 679:Generated_Source\PSoC4/ADC.c **** * Parameters:
 680:Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 681:Generated_Source\PSoC4/ADC.c **** *  adcGain: ADC gain in counts per 10 volts.
 682:Generated_Source\PSoC4/ADC.c **** *
 683:Generated_Source\PSoC4/ADC.c **** * Return:
 684:Generated_Source\PSoC4/ADC.c **** *  None.
 685:Generated_Source\PSoC4/ADC.c **** *
 686:Generated_Source\PSoC4/ADC.c **** * Global variables:
 687:Generated_Source\PSoC4/ADC.c **** *  ADC_CountsPer10Volt:  modified to set the ADC gain in counts
 688:Generated_Source\PSoC4/ADC.c **** *   per 10 volt.
 689:Generated_Source\PSoC4/ADC.c **** *
 690:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 691:Generated_Source\PSoC4/ADC.c **** void ADC_SetGain(uint32 chan, int32 adcGain)
 692:Generated_Source\PSoC4/ADC.c **** {
 930              		.loc 1 692 0
 931              		.cfi_startproc
 932              		@ args = 0, pretend = 0, frame = 8
 933              		@ frame_needed = 1, uses_anonymous_args = 0
 934 0000 80B5     		push	{r7, lr}
 935              		.cfi_def_cfa_offset 8
 936              		.cfi_offset 7, -8
 937              		.cfi_offset 14, -4
 938 0002 82B0     		sub	sp, sp, #8
 939              		.cfi_def_cfa_offset 16
 940 0004 00AF     		add	r7, sp, #0
 941              		.cfi_def_cfa_register 7
 942 0006 7860     		str	r0, [r7, #4]
 943 0008 3960     		str	r1, [r7]
 693:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 694:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 944              		.loc 1 694 0
 945 000a 7B68     		ldr	r3, [r7, #4]
 946 000c 002B     		cmp	r3, #0
 947 000e 02D0     		beq	.L68
 948              		.loc 1 694 0 is_stmt 0 discriminator 1
 949 0010 0020     		movs	r0, #0
 950 0012 FFF7FEFF 		bl	CyHalt
 951              	.L68:
 695:Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccJWZTE0.s 			page 30


 696:Generated_Source\PSoC4/ADC.c ****     ADC_countsPer10Volt[chan] = adcGain;
 952              		.loc 1 696 0 is_stmt 1
 953 0016 044B     		ldr	r3, .L69
 954 0018 7A68     		ldr	r2, [r7, #4]
 955 001a 9200     		lsls	r2, r2, #2
 956 001c 3968     		ldr	r1, [r7]
 957 001e D150     		str	r1, [r2, r3]
 697:Generated_Source\PSoC4/ADC.c **** }
 958              		.loc 1 697 0
 959 0020 C046     		nop
 960 0022 BD46     		mov	sp, r7
 961 0024 02B0     		add	sp, sp, #8
 962              		@ sp needed
 963 0026 80BD     		pop	{r7, pc}
 964              	.L70:
 965              		.align	2
 966              	.L69:
 967 0028 00000000 		.word	ADC_countsPer10Volt
 968              		.cfi_endproc
 969              	.LFE15:
 970              		.size	ADC_SetGain, .-ADC_SetGain
 971              		.global	__aeabi_idiv
 972              		.section	.text.ADC_CountsTo_mVolts,"ax",%progbits
 973              		.align	2
 974              		.global	ADC_CountsTo_mVolts
 975              		.code	16
 976              		.thumb_func
 977              		.type	ADC_CountsTo_mVolts, %function
 978              	ADC_CountsTo_mVolts:
 979              	.LFB16:
 698:Generated_Source\PSoC4/ADC.c **** 
 699:Generated_Source\PSoC4/ADC.c **** 
 700:Generated_Source\PSoC4/ADC.c **** #if(ADC_DEFAULT_JUSTIFICATION_SEL == ADC__RIGHT)
 701:Generated_Source\PSoC4/ADC.c **** 
 702:Generated_Source\PSoC4/ADC.c **** 
 703:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 704:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_mVolts
 705:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 706:Generated_Source\PSoC4/ADC.c ****     *
 707:Generated_Source\PSoC4/ADC.c ****     * Summary:
 708:Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to mVolts
 709:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 710:Generated_Source\PSoC4/ADC.c ****     *
 711:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 712:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 713:Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 714:Generated_Source\PSoC4/ADC.c ****     *
 715:Generated_Source\PSoC4/ADC.c ****     * Return:
 716:Generated_Source\PSoC4/ADC.c ****     *  Results in mVolts
 717:Generated_Source\PSoC4/ADC.c ****     *
 718:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 719:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to mVolts.
 720:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 721:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 722:Generated_Source\PSoC4/ADC.c ****     *
 723:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 724:Generated_Source\PSoC4/ADC.c ****     int16 ADC_CountsTo_mVolts(uint32 chan, int16 adcCounts)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccJWZTE0.s 			page 31


 725:Generated_Source\PSoC4/ADC.c ****     {
 980              		.loc 1 725 0
 981              		.cfi_startproc
 982              		@ args = 0, pretend = 0, frame = 16
 983              		@ frame_needed = 1, uses_anonymous_args = 0
 984 0000 80B5     		push	{r7, lr}
 985              		.cfi_def_cfa_offset 8
 986              		.cfi_offset 7, -8
 987              		.cfi_offset 14, -4
 988 0002 84B0     		sub	sp, sp, #16
 989              		.cfi_def_cfa_offset 24
 990 0004 00AF     		add	r7, sp, #0
 991              		.cfi_def_cfa_register 7
 992 0006 7860     		str	r0, [r7, #4]
 993 0008 0A00     		movs	r2, r1
 994 000a BB1C     		adds	r3, r7, #2
 995 000c 1A80     		strh	r2, [r3]
 726:Generated_Source\PSoC4/ADC.c ****         int16 mVolts;
 727:Generated_Source\PSoC4/ADC.c **** 
 728:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 729:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 996              		.loc 1 729 0
 997 000e 7B68     		ldr	r3, [r7, #4]
 998 0010 002B     		cmp	r3, #0
 999 0012 02D0     		beq	.L72
 1000              		.loc 1 729 0 is_stmt 0 discriminator 1
 1001 0014 0020     		movs	r0, #0
 1002 0016 FFF7FEFF 		bl	CyHalt
 1003              	.L72:
 730:Generated_Source\PSoC4/ADC.c **** 
 731:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 732:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 733:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 734:Generated_Source\PSoC4/ADC.c ****             {
 735:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 736:Generated_Source\PSoC4/ADC.c ****             }
 737:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 738:Generated_Source\PSoC4/ADC.c **** 
 739:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 740:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 1004              		.loc 1 740 0 is_stmt 1
 1005 001a 1E4B     		ldr	r3, .L78
 1006 001c 7A68     		ldr	r2, [r7, #4]
 1007 001e 5200     		lsls	r2, r2, #1
 1008 0020 D35A     		ldrh	r3, [r2, r3]
 1009 0022 19B2     		sxth	r1, r3
 1010 0024 BB1C     		adds	r3, r7, #2
 1011 0026 1A88     		ldrh	r2, [r3]
 1012 0028 8BB2     		uxth	r3, r1
 1013 002a D31A     		subs	r3, r2, r3
 1014 002c 9AB2     		uxth	r2, r3
 1015 002e BB1C     		adds	r3, r7, #2
 1016 0030 1A80     		strh	r2, [r3]
 741:Generated_Source\PSoC4/ADC.c **** 
 742:Generated_Source\PSoC4/ADC.c ****         mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ?
 1017              		.loc 1 742 0
 1018 0032 BB1C     		adds	r3, r7, #2
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccJWZTE0.s 			page 32


 1019 0034 0022     		movs	r2, #0
 1020 0036 9B5E     		ldrsh	r3, [r3, r2]
 1021 0038 174A     		ldr	r2, .L78+4
 1022 003a 5A43     		muls	r2, r3
 743:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 1023              		.loc 1 743 0
 1024 003c BB1C     		adds	r3, r7, #2
 1025 003e 0021     		movs	r1, #0
 1026 0040 5B5E     		ldrsh	r3, [r3, r1]
 1027 0042 002B     		cmp	r3, #0
 1028 0044 08DD     		ble	.L73
 1029              		.loc 1 743 0 is_stmt 0 discriminator 1
 1030 0046 154B     		ldr	r3, .L78+8
 1031 0048 7968     		ldr	r1, [r7, #4]
 1032 004a 8900     		lsls	r1, r1, #2
 1033 004c CB58     		ldr	r3, [r1, r3]
 1034 004e 002B     		cmp	r3, #0
 1035 0050 00DA     		bge	.L74
 1036 0052 0133     		adds	r3, r3, #1
 1037              	.L74:
 1038 0054 5B10     		asrs	r3, r3, #1
 1039 0056 08E0     		b	.L75
 1040              	.L73:
 1041              		.loc 1 743 0 discriminator 2
 1042 0058 104B     		ldr	r3, .L78+8
 1043 005a 7968     		ldr	r1, [r7, #4]
 1044 005c 8900     		lsls	r1, r1, #2
 1045 005e CB58     		ldr	r3, [r1, r3]
 1046 0060 002B     		cmp	r3, #0
 1047 0062 00DA     		bge	.L76
 1048 0064 0133     		adds	r3, r3, #1
 1049              	.L76:
 1050 0066 5B10     		asrs	r3, r3, #1
 1051 0068 5B42     		rsbs	r3, r3, #0
 1052              	.L75:
 742:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 1053              		.loc 1 742 0 is_stmt 1
 1054 006a D018     		adds	r0, r2, r3
 744:Generated_Source\PSoC4/ADC.c ****                  / ADC_countsPer10Volt[chan]);
 1055              		.loc 1 744 0
 1056 006c 0B4B     		ldr	r3, .L78+8
 1057 006e 7A68     		ldr	r2, [r7, #4]
 1058 0070 9200     		lsls	r2, r2, #2
 1059 0072 D358     		ldr	r3, [r2, r3]
 1060 0074 1900     		movs	r1, r3
 1061 0076 FFF7FEFF 		bl	__aeabi_idiv
 1062 007a 0300     		movs	r3, r0
 1063 007c 1A00     		movs	r2, r3
 742:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 1064              		.loc 1 742 0
 1065 007e 0E23     		movs	r3, #14
 1066 0080 FB18     		adds	r3, r7, r3
 1067 0082 1A80     		strh	r2, [r3]
 745:Generated_Source\PSoC4/ADC.c **** 
 746:Generated_Source\PSoC4/ADC.c ****         return( mVolts );
 1068              		.loc 1 746 0
 1069 0084 0E23     		movs	r3, #14
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccJWZTE0.s 			page 33


 1070 0086 FB18     		adds	r3, r7, r3
 1071 0088 0022     		movs	r2, #0
 1072 008a 9B5E     		ldrsh	r3, [r3, r2]
 747:Generated_Source\PSoC4/ADC.c ****     }
 1073              		.loc 1 747 0
 1074 008c 1800     		movs	r0, r3
 1075 008e BD46     		mov	sp, r7
 1076 0090 04B0     		add	sp, sp, #16
 1077              		@ sp needed
 1078 0092 80BD     		pop	{r7, pc}
 1079              	.L79:
 1080              		.align	2
 1081              	.L78:
 1082 0094 00000000 		.word	ADC_offset
 1083 0098 10270000 		.word	10000
 1084 009c 00000000 		.word	ADC_countsPer10Volt
 1085              		.cfi_endproc
 1086              	.LFE16:
 1087              		.size	ADC_CountsTo_mVolts, .-ADC_CountsTo_mVolts
 1088              		.global	__aeabi_lmul
 1089              		.global	__aeabi_ldivmod
 1090              		.section	.text.ADC_CountsTo_uVolts,"ax",%progbits
 1091              		.align	2
 1092              		.global	ADC_CountsTo_uVolts
 1093              		.code	16
 1094              		.thumb_func
 1095              		.type	ADC_CountsTo_uVolts, %function
 1096              	ADC_CountsTo_uVolts:
 1097              	.LFB17:
 748:Generated_Source\PSoC4/ADC.c **** 
 749:Generated_Source\PSoC4/ADC.c **** 
 750:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 751:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_uVolts
 752:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 753:Generated_Source\PSoC4/ADC.c ****     *
 754:Generated_Source\PSoC4/ADC.c ****     * Summary:
 755:Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to micro Volts
 756:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 757:Generated_Source\PSoC4/ADC.c ****     *
 758:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 759:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 760:Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 761:Generated_Source\PSoC4/ADC.c ****     *
 762:Generated_Source\PSoC4/ADC.c ****     * Return:
 763:Generated_Source\PSoC4/ADC.c ****     *  Results in uVolts
 764:Generated_Source\PSoC4/ADC.c ****     *
 765:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 766:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to uVolts.
 767:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 768:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 769:Generated_Source\PSoC4/ADC.c ****     *
 770:Generated_Source\PSoC4/ADC.c ****     * Theory:
 771:Generated_Source\PSoC4/ADC.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 772:Generated_Source\PSoC4/ADC.c ****     *  number in the conversion to uVolts and at the same time not loose
 773:Generated_Source\PSoC4/ADC.c ****     *  resolution.
 774:Generated_Source\PSoC4/ADC.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 775:Generated_Source\PSoC4/ADC.c ****     *  on 10 million and later divide on gain in counts per 10V.
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccJWZTE0.s 			page 34


 776:Generated_Source\PSoC4/ADC.c ****     *
 777:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 778:Generated_Source\PSoC4/ADC.c ****     int32 ADC_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 779:Generated_Source\PSoC4/ADC.c ****     {
 1098              		.loc 1 779 0
 1099              		.cfi_startproc
 1100              		@ args = 0, pretend = 0, frame = 24
 1101              		@ frame_needed = 1, uses_anonymous_args = 0
 1102 0000 B0B5     		push	{r4, r5, r7, lr}
 1103              		.cfi_def_cfa_offset 16
 1104              		.cfi_offset 4, -16
 1105              		.cfi_offset 5, -12
 1106              		.cfi_offset 7, -8
 1107              		.cfi_offset 14, -4
 1108 0002 86B0     		sub	sp, sp, #24
 1109              		.cfi_def_cfa_offset 40
 1110 0004 00AF     		add	r7, sp, #0
 1111              		.cfi_def_cfa_register 7
 1112 0006 F860     		str	r0, [r7, #12]
 1113 0008 0A00     		movs	r2, r1
 1114 000a 0A23     		movs	r3, #10
 1115 000c FB18     		adds	r3, r7, r3
 1116 000e 1A80     		strh	r2, [r3]
 780:Generated_Source\PSoC4/ADC.c ****         int64 uVolts;
 781:Generated_Source\PSoC4/ADC.c **** 
 782:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 783:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 1117              		.loc 1 783 0
 1118 0010 FB68     		ldr	r3, [r7, #12]
 1119 0012 002B     		cmp	r3, #0
 1120 0014 02D0     		beq	.L81
 1121              		.loc 1 783 0 is_stmt 0 discriminator 1
 1122 0016 0020     		movs	r0, #0
 1123 0018 FFF7FEFF 		bl	CyHalt
 1124              	.L81:
 784:Generated_Source\PSoC4/ADC.c **** 
 785:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 786:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 787:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 788:Generated_Source\PSoC4/ADC.c ****             {
 789:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 790:Generated_Source\PSoC4/ADC.c ****             }
 791:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 792:Generated_Source\PSoC4/ADC.c **** 
 793:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 794:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 1125              		.loc 1 794 0 is_stmt 1
 1126 001c 194B     		ldr	r3, .L83
 1127 001e FA68     		ldr	r2, [r7, #12]
 1128 0020 5200     		lsls	r2, r2, #1
 1129 0022 D35A     		ldrh	r3, [r2, r3]
 1130 0024 19B2     		sxth	r1, r3
 1131 0026 0A23     		movs	r3, #10
 1132 0028 FB18     		adds	r3, r7, r3
 1133 002a 1A88     		ldrh	r2, [r3]
 1134 002c 8BB2     		uxth	r3, r1
 1135 002e D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccJWZTE0.s 			page 35


 1136 0030 9AB2     		uxth	r2, r3
 1137 0032 0A23     		movs	r3, #10
 1138 0034 FB18     		adds	r3, r7, r3
 1139 0036 1A80     		strh	r2, [r3]
 795:Generated_Source\PSoC4/ADC.c **** 
 796:Generated_Source\PSoC4/ADC.c ****         uVolts = ((int64)adcCounts * ADC_10UV_COUNTS) / ADC_countsPer10Volt[chan];
 1140              		.loc 1 796 0
 1141 0038 0A23     		movs	r3, #10
 1142 003a FB18     		adds	r3, r7, r3
 1143 003c 1B88     		ldrh	r3, [r3]
 1144 003e 1BB2     		sxth	r3, r3
 1145 0040 3B60     		str	r3, [r7]
 1146 0042 DB17     		asrs	r3, r3, #31
 1147 0044 7B60     		str	r3, [r7, #4]
 1148 0046 104A     		ldr	r2, .L83+4
 1149 0048 0023     		movs	r3, #0
 1150 004a 3868     		ldr	r0, [r7]
 1151 004c 7968     		ldr	r1, [r7, #4]
 1152 004e FFF7FEFF 		bl	__aeabi_lmul
 1153 0052 0200     		movs	r2, r0
 1154 0054 0B00     		movs	r3, r1
 1155 0056 1000     		movs	r0, r2
 1156 0058 1900     		movs	r1, r3
 1157 005a 0C4B     		ldr	r3, .L83+8
 1158 005c FA68     		ldr	r2, [r7, #12]
 1159 005e 9200     		lsls	r2, r2, #2
 1160 0060 D358     		ldr	r3, [r2, r3]
 1161 0062 1C00     		movs	r4, r3
 1162 0064 DB17     		asrs	r3, r3, #31
 1163 0066 1D00     		movs	r5, r3
 1164 0068 2200     		movs	r2, r4
 1165 006a 2B00     		movs	r3, r5
 1166 006c FFF7FEFF 		bl	__aeabi_ldivmod
 1167 0070 0300     		movs	r3, r0
 1168 0072 0C00     		movs	r4, r1
 1169 0074 3B61     		str	r3, [r7, #16]
 1170 0076 7C61     		str	r4, [r7, #20]
 797:Generated_Source\PSoC4/ADC.c **** 
 798:Generated_Source\PSoC4/ADC.c ****         return( (int32)uVolts );
 1171              		.loc 1 798 0
 1172 0078 3B69     		ldr	r3, [r7, #16]
 799:Generated_Source\PSoC4/ADC.c ****     }
 1173              		.loc 1 799 0
 1174 007a 1800     		movs	r0, r3
 1175 007c BD46     		mov	sp, r7
 1176 007e 06B0     		add	sp, sp, #24
 1177              		@ sp needed
 1178 0080 B0BD     		pop	{r4, r5, r7, pc}
 1179              	.L84:
 1180 0082 C046     		.align	2
 1181              	.L83:
 1182 0084 00000000 		.word	ADC_offset
 1183 0088 80969800 		.word	10000000
 1184 008c 00000000 		.word	ADC_countsPer10Volt
 1185              		.cfi_endproc
 1186              	.LFE17:
 1187              		.size	ADC_CountsTo_uVolts, .-ADC_CountsTo_uVolts
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccJWZTE0.s 			page 36


 1188              		.global	__aeabi_i2f
 1189              		.global	__aeabi_fmul
 1190              		.global	__aeabi_fdiv
 1191              		.section	.text.ADC_CountsTo_Volts,"ax",%progbits
 1192              		.align	2
 1193              		.global	ADC_CountsTo_Volts
 1194              		.code	16
 1195              		.thumb_func
 1196              		.type	ADC_CountsTo_Volts, %function
 1197              	ADC_CountsTo_Volts:
 1198              	.LFB18:
 800:Generated_Source\PSoC4/ADC.c **** 
 801:Generated_Source\PSoC4/ADC.c **** 
 802:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 803:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_Volts
 804:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 805:Generated_Source\PSoC4/ADC.c ****     *
 806:Generated_Source\PSoC4/ADC.c ****     * Summary:
 807:Generated_Source\PSoC4/ADC.c ****     *  Converts the ADC output to Volts as a floating point number.
 808:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 809:Generated_Source\PSoC4/ADC.c ****     *
 810:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 811:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 812:Generated_Source\PSoC4/ADC.c ****     *  Result from the ADC conversion
 813:Generated_Source\PSoC4/ADC.c ****     *
 814:Generated_Source\PSoC4/ADC.c ****     * Return:
 815:Generated_Source\PSoC4/ADC.c ****     *  Results in Volts
 816:Generated_Source\PSoC4/ADC.c ****     *
 817:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 818:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to Volts.
 819:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 820:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 821:Generated_Source\PSoC4/ADC.c ****     *
 822:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 823:Generated_Source\PSoC4/ADC.c ****     float32 ADC_CountsTo_Volts(uint32 chan, int16 adcCounts)
 824:Generated_Source\PSoC4/ADC.c ****     {
 1199              		.loc 1 824 0
 1200              		.cfi_startproc
 1201              		@ args = 0, pretend = 0, frame = 16
 1202              		@ frame_needed = 1, uses_anonymous_args = 0
 1203 0000 90B5     		push	{r4, r7, lr}
 1204              		.cfi_def_cfa_offset 12
 1205              		.cfi_offset 4, -12
 1206              		.cfi_offset 7, -8
 1207              		.cfi_offset 14, -4
 1208 0002 85B0     		sub	sp, sp, #20
 1209              		.cfi_def_cfa_offset 32
 1210 0004 00AF     		add	r7, sp, #0
 1211              		.cfi_def_cfa_register 7
 1212 0006 7860     		str	r0, [r7, #4]
 1213 0008 0A00     		movs	r2, r1
 1214 000a BB1C     		adds	r3, r7, #2
 1215 000c 1A80     		strh	r2, [r3]
 825:Generated_Source\PSoC4/ADC.c ****         float32 volts;
 826:Generated_Source\PSoC4/ADC.c **** 
 827:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 828:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccJWZTE0.s 			page 37


 1216              		.loc 1 828 0
 1217 000e 7B68     		ldr	r3, [r7, #4]
 1218 0010 002B     		cmp	r3, #0
 1219 0012 02D0     		beq	.L86
 1220              		.loc 1 828 0 is_stmt 0 discriminator 1
 1221 0014 0020     		movs	r0, #0
 1222 0016 FFF7FEFF 		bl	CyHalt
 1223              	.L86:
 829:Generated_Source\PSoC4/ADC.c **** 
 830:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 831:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 832:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 833:Generated_Source\PSoC4/ADC.c ****             {
 834:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 835:Generated_Source\PSoC4/ADC.c ****             }
 836:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 837:Generated_Source\PSoC4/ADC.c **** 
 838:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 839:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 1224              		.loc 1 839 0 is_stmt 1
 1225 001a 164B     		ldr	r3, .L88
 1226 001c 7A68     		ldr	r2, [r7, #4]
 1227 001e 5200     		lsls	r2, r2, #1
 1228 0020 D35A     		ldrh	r3, [r2, r3]
 1229 0022 19B2     		sxth	r1, r3
 1230 0024 BB1C     		adds	r3, r7, #2
 1231 0026 1A88     		ldrh	r2, [r3]
 1232 0028 8BB2     		uxth	r3, r1
 1233 002a D31A     		subs	r3, r2, r3
 1234 002c 9AB2     		uxth	r2, r3
 1235 002e BB1C     		adds	r3, r7, #2
 1236 0030 1A80     		strh	r2, [r3]
 840:Generated_Source\PSoC4/ADC.c **** 
 841:Generated_Source\PSoC4/ADC.c ****         volts = ((float32)adcCounts * ADC_10V_COUNTS) / (float32)ADC_countsPer10Volt[chan];
 1237              		.loc 1 841 0
 1238 0032 BB1C     		adds	r3, r7, #2
 1239 0034 0022     		movs	r2, #0
 1240 0036 9B5E     		ldrsh	r3, [r3, r2]
 1241 0038 1800     		movs	r0, r3
 1242 003a FFF7FEFF 		bl	__aeabi_i2f
 1243 003e 031C     		adds	r3, r0, #0
 1244 0040 0D49     		ldr	r1, .L88+4
 1245 0042 181C     		adds	r0, r3, #0
 1246 0044 FFF7FEFF 		bl	__aeabi_fmul
 1247 0048 031C     		adds	r3, r0, #0
 1248 004a 1C1C     		adds	r4, r3, #0
 1249 004c 0B4B     		ldr	r3, .L88+8
 1250 004e 7A68     		ldr	r2, [r7, #4]
 1251 0050 9200     		lsls	r2, r2, #2
 1252 0052 D358     		ldr	r3, [r2, r3]
 1253 0054 1800     		movs	r0, r3
 1254 0056 FFF7FEFF 		bl	__aeabi_i2f
 1255 005a 031C     		adds	r3, r0, #0
 1256 005c 191C     		adds	r1, r3, #0
 1257 005e 201C     		adds	r0, r4, #0
 1258 0060 FFF7FEFF 		bl	__aeabi_fdiv
 1259 0064 031C     		adds	r3, r0, #0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccJWZTE0.s 			page 38


 1260 0066 FB60     		str	r3, [r7, #12]
 842:Generated_Source\PSoC4/ADC.c **** 
 843:Generated_Source\PSoC4/ADC.c ****         return( volts );
 1261              		.loc 1 843 0
 1262 0068 FB68     		ldr	r3, [r7, #12]
 844:Generated_Source\PSoC4/ADC.c ****     }
 1263              		.loc 1 844 0
 1264 006a 181C     		adds	r0, r3, #0
 1265 006c BD46     		mov	sp, r7
 1266 006e 05B0     		add	sp, sp, #20
 1267              		@ sp needed
 1268 0070 90BD     		pop	{r4, r7, pc}
 1269              	.L89:
 1270 0072 C046     		.align	2
 1271              	.L88:
 1272 0074 00000000 		.word	ADC_offset
 1273 0078 00002041 		.word	1092616192
 1274 007c 00000000 		.word	ADC_countsPer10Volt
 1275              		.cfi_endproc
 1276              	.LFE18:
 1277              		.size	ADC_CountsTo_Volts, .-ADC_CountsTo_Volts
 1278              		.text
 1279              	.Letext0:
 1280              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1281              		.section	.debug_info,"",%progbits
 1282              	.Ldebug_info0:
 1283 0000 86040000 		.4byte	0x486
 1284 0004 0400     		.2byte	0x4
 1285 0006 00000000 		.4byte	.Ldebug_abbrev0
 1286 000a 04       		.byte	0x4
 1287 000b 01       		.uleb128 0x1
 1288 000c 62010000 		.4byte	.LASF60
 1289 0010 0C       		.byte	0xc
 1290 0011 5E020000 		.4byte	.LASF61
 1291 0015 1B030000 		.4byte	.LASF62
 1292 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1293 001d 00000000 		.4byte	0
 1294 0021 00000000 		.4byte	.Ldebug_line0
 1295 0025 02       		.uleb128 0x2
 1296 0026 01       		.byte	0x1
 1297 0027 06       		.byte	0x6
 1298 0028 68000000 		.4byte	.LASF0
 1299 002c 02       		.uleb128 0x2
 1300 002d 01       		.byte	0x1
 1301 002e 08       		.byte	0x8
 1302 002f BB020000 		.4byte	.LASF1
 1303 0033 02       		.uleb128 0x2
 1304 0034 02       		.byte	0x2
 1305 0035 05       		.byte	0x5
 1306 0036 D4020000 		.4byte	.LASF2
 1307 003a 02       		.uleb128 0x2
 1308 003b 02       		.byte	0x2
 1309 003c 07       		.byte	0x7
 1310 003d 3F010000 		.4byte	.LASF3
 1311 0041 02       		.uleb128 0x2
 1312 0042 04       		.byte	0x4
 1313 0043 05       		.byte	0x5
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccJWZTE0.s 			page 39


 1314 0044 8B000000 		.4byte	.LASF4
 1315 0048 02       		.uleb128 0x2
 1316 0049 04       		.byte	0x4
 1317 004a 07       		.byte	0x7
 1318 004b 0E010000 		.4byte	.LASF5
 1319 004f 02       		.uleb128 0x2
 1320 0050 08       		.byte	0x8
 1321 0051 05       		.byte	0x5
 1322 0052 5A000000 		.4byte	.LASF6
 1323 0056 02       		.uleb128 0x2
 1324 0057 08       		.byte	0x8
 1325 0058 07       		.byte	0x7
 1326 0059 32000000 		.4byte	.LASF7
 1327 005d 03       		.uleb128 0x3
 1328 005e 04       		.byte	0x4
 1329 005f 05       		.byte	0x5
 1330 0060 696E7400 		.ascii	"int\000"
 1331 0064 02       		.uleb128 0x2
 1332 0065 04       		.byte	0x4
 1333 0066 07       		.byte	0x7
 1334 0067 FA000000 		.4byte	.LASF8
 1335 006b 04       		.uleb128 0x4
 1336 006c BC000000 		.4byte	.LASF9
 1337 0070 02       		.byte	0x2
 1338 0071 C2       		.byte	0xc2
 1339 0072 2C000000 		.4byte	0x2c
 1340 0076 04       		.uleb128 0x4
 1341 0077 00000000 		.4byte	.LASF10
 1342 007b 02       		.byte	0x2
 1343 007c C3       		.byte	0xc3
 1344 007d 3A000000 		.4byte	0x3a
 1345 0081 04       		.uleb128 0x4
 1346 0082 C9000000 		.4byte	.LASF11
 1347 0086 02       		.byte	0x2
 1348 0087 C4       		.byte	0xc4
 1349 0088 48000000 		.4byte	0x48
 1350 008c 04       		.uleb128 0x4
 1351 008d 80030000 		.4byte	.LASF12
 1352 0091 02       		.byte	0x2
 1353 0092 C6       		.byte	0xc6
 1354 0093 33000000 		.4byte	0x33
 1355 0097 04       		.uleb128 0x4
 1356 0098 7B000000 		.4byte	.LASF13
 1357 009c 02       		.byte	0x2
 1358 009d C7       		.byte	0xc7
 1359 009e 41000000 		.4byte	0x41
 1360 00a2 04       		.uleb128 0x4
 1361 00a3 FD010000 		.4byte	.LASF14
 1362 00a7 02       		.byte	0x2
 1363 00a8 C8       		.byte	0xc8
 1364 00a9 AD000000 		.4byte	0xad
 1365 00ad 02       		.uleb128 0x2
 1366 00ae 04       		.byte	0x4
 1367 00af 04       		.byte	0x4
 1368 00b0 87020000 		.4byte	.LASF15
 1369 00b4 02       		.uleb128 0x2
 1370 00b5 08       		.byte	0x8
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccJWZTE0.s 			page 40


 1371 00b6 04       		.byte	0x4
 1372 00b7 C2000000 		.4byte	.LASF16
 1373 00bb 04       		.uleb128 0x4
 1374 00bc 48020000 		.4byte	.LASF17
 1375 00c0 02       		.byte	0x2
 1376 00c1 CD       		.byte	0xcd
 1377 00c2 4F000000 		.4byte	0x4f
 1378 00c6 02       		.uleb128 0x2
 1379 00c7 01       		.byte	0x1
 1380 00c8 08       		.byte	0x8
 1381 00c9 F2020000 		.4byte	.LASF18
 1382 00cd 05       		.uleb128 0x5
 1383 00ce F7010000 		.4byte	.LASF19
 1384 00d2 02       		.byte	0x2
 1385 00d3 6E01     		.2byte	0x16e
 1386 00d5 D9000000 		.4byte	0xd9
 1387 00d9 06       		.uleb128 0x6
 1388 00da 81000000 		.4byte	0x81
 1389 00de 02       		.uleb128 0x2
 1390 00df 08       		.byte	0x8
 1391 00e0 04       		.byte	0x4
 1392 00e1 17020000 		.4byte	.LASF20
 1393 00e5 02       		.uleb128 0x2
 1394 00e6 04       		.byte	0x4
 1395 00e7 07       		.byte	0x7
 1396 00e8 05020000 		.4byte	.LASF21
 1397 00ec 07       		.uleb128 0x7
 1398 00ed 81000000 		.4byte	.LASF25
 1399 00f1 01       		.byte	0x1
 1400 00f2 3F       		.byte	0x3f
 1401 00f3 00000000 		.4byte	.LFB1
 1402 00f7 24000000 		.4byte	.LFE1-.LFB1
 1403 00fb 01       		.uleb128 0x1
 1404 00fc 9C       		.byte	0x9c
 1405 00fd 08       		.uleb128 0x8
 1406 00fe 29000000 		.4byte	.LASF36
 1407 0102 01       		.byte	0x1
 1408 0103 5E       		.byte	0x5e
 1409 0104 00000000 		.4byte	.LFB2
 1410 0108 BC010000 		.4byte	.LFE2-.LFB2
 1411 010c 01       		.uleb128 0x1
 1412 010d 9C       		.byte	0x9c
 1413 010e 3D010000 		.4byte	0x13d
 1414 0112 09       		.uleb128 0x9
 1415 0113 E7020000 		.4byte	.LASF22
 1416 0117 01       		.byte	0x1
 1417 0118 60       		.byte	0x60
 1418 0119 81000000 		.4byte	0x81
 1419 011d 02       		.uleb128 0x2
 1420 011e 91       		.byte	0x91
 1421 011f 74       		.sleb128 -12
 1422 0120 09       		.uleb128 0x9
 1423 0121 35010000 		.4byte	.LASF23
 1424 0125 01       		.byte	0x1
 1425 0126 61       		.byte	0x61
 1426 0127 81000000 		.4byte	0x81
 1427 012b 02       		.uleb128 0x2
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccJWZTE0.s 			page 41


 1428 012c 91       		.byte	0x91
 1429 012d 6C       		.sleb128 -20
 1430 012e 09       		.uleb128 0x9
 1431 012f 0F000000 		.4byte	.LASF24
 1432 0133 01       		.byte	0x1
 1433 0134 62       		.byte	0x62
 1434 0135 97000000 		.4byte	0x97
 1435 0139 02       		.uleb128 0x2
 1436 013a 91       		.byte	0x91
 1437 013b 70       		.sleb128 -16
 1438 013c 00       		.byte	0
 1439 013d 0A       		.uleb128 0xa
 1440 013e 75030000 		.4byte	.LASF26
 1441 0142 01       		.byte	0x1
 1442 0143 2A01     		.2byte	0x12a
 1443 0145 00000000 		.4byte	.LFB3
 1444 0149 38000000 		.4byte	.LFE3-.LFB3
 1445 014d 01       		.uleb128 0x1
 1446 014e 9C       		.byte	0x9c
 1447 014f 0B       		.uleb128 0xb
 1448 0150 DE020000 		.4byte	.LASF27
 1449 0154 01       		.byte	0x1
 1450 0155 4D01     		.2byte	0x14d
 1451 0157 00000000 		.4byte	.LFB4
 1452 015b 1C000000 		.4byte	.LFE4-.LFB4
 1453 015f 01       		.uleb128 0x1
 1454 0160 9C       		.byte	0x9c
 1455 0161 0B       		.uleb128 0xb
 1456 0162 49000000 		.4byte	.LASF28
 1457 0166 01       		.byte	0x1
 1458 0167 6701     		.2byte	0x167
 1459 0169 00000000 		.4byte	.LFB5
 1460 016d 1C000000 		.4byte	.LFE5-.LFB5
 1461 0171 01       		.uleb128 0x1
 1462 0172 9C       		.byte	0x9c
 1463 0173 0B       		.uleb128 0xb
 1464 0174 52010000 		.4byte	.LASF29
 1465 0178 01       		.byte	0x1
 1466 0179 8001     		.2byte	0x180
 1467 017b 00000000 		.4byte	.LFB6
 1468 017f 20000000 		.4byte	.LFE6-.LFB6
 1469 0183 01       		.uleb128 0x1
 1470 0184 9C       		.byte	0x9c
 1471 0185 0C       		.uleb128 0xc
 1472 0186 34020000 		.4byte	.LASF31
 1473 018a 01       		.byte	0x1
 1474 018b A201     		.2byte	0x1a2
 1475 018d 81000000 		.4byte	0x81
 1476 0191 00000000 		.4byte	.LFB7
 1477 0195 48000000 		.4byte	.LFE7-.LFB7
 1478 0199 01       		.uleb128 0x1
 1479 019a 9C       		.byte	0x9c
 1480 019b BE010000 		.4byte	0x1be
 1481 019f 0D       		.uleb128 0xd
 1482 01a0 E1000000 		.4byte	.LASF33
 1483 01a4 01       		.byte	0x1
 1484 01a5 A201     		.2byte	0x1a2
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccJWZTE0.s 			page 42


 1485 01a7 81000000 		.4byte	0x81
 1486 01ab 02       		.uleb128 0x2
 1487 01ac 91       		.byte	0x91
 1488 01ad 6C       		.sleb128 -20
 1489 01ae 0E       		.uleb128 0xe
 1490 01af 74000000 		.4byte	.LASF30
 1491 01b3 01       		.byte	0x1
 1492 01b4 A401     		.2byte	0x1a4
 1493 01b6 81000000 		.4byte	0x81
 1494 01ba 02       		.uleb128 0x2
 1495 01bb 91       		.byte	0x91
 1496 01bc 74       		.sleb128 -12
 1497 01bd 00       		.byte	0
 1498 01be 0F       		.uleb128 0xf
 1499 01bf 9B030000 		.4byte	.LASF32
 1500 01c3 01       		.byte	0x1
 1501 01c4 D801     		.2byte	0x1d8
 1502 01c6 8C000000 		.4byte	0x8c
 1503 01ca 00000000 		.4byte	.LFB8
 1504 01ce 44000000 		.4byte	.LFE8-.LFB8
 1505 01d2 01       		.uleb128 0x1
 1506 01d3 9C       		.byte	0x9c
 1507 01d4 F7010000 		.4byte	0x1f7
 1508 01d8 0D       		.uleb128 0xd
 1509 01d9 ED020000 		.4byte	.LASF34
 1510 01dd 01       		.byte	0x1
 1511 01de D801     		.2byte	0x1d8
 1512 01e0 81000000 		.4byte	0x81
 1513 01e4 02       		.uleb128 0x2
 1514 01e5 91       		.byte	0x91
 1515 01e6 6C       		.sleb128 -20
 1516 01e7 0E       		.uleb128 0xe
 1517 01e8 94030000 		.4byte	.LASF35
 1518 01ec 01       		.byte	0x1
 1519 01ed DA01     		.2byte	0x1da
 1520 01ef 81000000 		.4byte	0x81
 1521 01f3 02       		.uleb128 0x2
 1522 01f4 91       		.byte	0x91
 1523 01f5 74       		.sleb128 -12
 1524 01f6 00       		.byte	0
 1525 01f7 10       		.uleb128 0x10
 1526 01f8 4E020000 		.4byte	.LASF37
 1527 01fc 01       		.byte	0x1
 1528 01fd 0502     		.2byte	0x205
 1529 01ff 00000000 		.4byte	.LFB9
 1530 0203 20000000 		.4byte	.LFE9-.LFB9
 1531 0207 01       		.uleb128 0x1
 1532 0208 9C       		.byte	0x9c
 1533 0209 1D020000 		.4byte	0x21d
 1534 020d 0D       		.uleb128 0xd
 1535 020e D0000000 		.4byte	.LASF38
 1536 0212 01       		.byte	0x1
 1537 0213 0502     		.2byte	0x205
 1538 0215 81000000 		.4byte	0x81
 1539 0219 02       		.uleb128 0x2
 1540 021a 91       		.byte	0x91
 1541 021b 74       		.sleb128 -12
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccJWZTE0.s 			page 43


 1542 021c 00       		.byte	0
 1543 021d 10       		.uleb128 0x10
 1544 021e AB020000 		.4byte	.LASF39
 1545 0222 01       		.byte	0x1
 1546 0223 3102     		.2byte	0x231
 1547 0225 00000000 		.4byte	.LFB10
 1548 0229 30000000 		.4byte	.LFE10-.LFB10
 1549 022d 01       		.uleb128 0x1
 1550 022e 9C       		.byte	0x9c
 1551 022f 43020000 		.4byte	0x243
 1552 0233 0D       		.uleb128 0xd
 1553 0234 0E020000 		.4byte	.LASF40
 1554 0238 01       		.byte	0x1
 1555 0239 3102     		.2byte	0x231
 1556 023b 81000000 		.4byte	0x81
 1557 023f 02       		.uleb128 0x2
 1558 0240 91       		.byte	0x91
 1559 0241 74       		.sleb128 -12
 1560 0242 00       		.byte	0
 1561 0243 10       		.uleb128 0x10
 1562 0244 23020000 		.4byte	.LASF41
 1563 0248 01       		.byte	0x1
 1564 0249 4602     		.2byte	0x246
 1565 024b 00000000 		.4byte	.LFB11
 1566 024f 30000000 		.4byte	.LFE11-.LFB11
 1567 0253 01       		.uleb128 0x1
 1568 0254 9C       		.byte	0x9c
 1569 0255 69020000 		.4byte	0x269
 1570 0259 0D       		.uleb128 0xd
 1571 025a 8D020000 		.4byte	.LASF42
 1572 025e 01       		.byte	0x1
 1573 025f 4602     		.2byte	0x246
 1574 0261 81000000 		.4byte	0x81
 1575 0265 02       		.uleb128 0x2
 1576 0266 91       		.byte	0x91
 1577 0267 74       		.sleb128 -12
 1578 0268 00       		.byte	0
 1579 0269 10       		.uleb128 0x10
 1580 026a E9000000 		.4byte	.LASF43
 1581 026e 01       		.byte	0x1
 1582 026f 5E02     		.2byte	0x25e
 1583 0271 00000000 		.4byte	.LFB12
 1584 0275 20000000 		.4byte	.LFE12-.LFB12
 1585 0279 01       		.uleb128 0x1
 1586 027a 9C       		.byte	0x9c
 1587 027b 8F020000 		.4byte	0x28f
 1588 027f 0D       		.uleb128 0xd
 1589 0280 D0000000 		.4byte	.LASF38
 1590 0284 01       		.byte	0x1
 1591 0285 5E02     		.2byte	0x25e
 1592 0287 81000000 		.4byte	0x81
 1593 028b 02       		.uleb128 0x2
 1594 028c 91       		.byte	0x91
 1595 028d 74       		.sleb128 -12
 1596 028e 00       		.byte	0
 1597 028f 10       		.uleb128 0x10
 1598 0290 20010000 		.4byte	.LASF44
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccJWZTE0.s 			page 44


 1599 0294 01       		.byte	0x1
 1600 0295 7502     		.2byte	0x275
 1601 0297 00000000 		.4byte	.LFB13
 1602 029b 20000000 		.4byte	.LFE13-.LFB13
 1603 029f 01       		.uleb128 0x1
 1604 02a0 9C       		.byte	0x9c
 1605 02a1 B5020000 		.4byte	0x2b5
 1606 02a5 0D       		.uleb128 0xd
 1607 02a6 D0000000 		.4byte	.LASF38
 1608 02aa 01       		.byte	0x1
 1609 02ab 7502     		.2byte	0x275
 1610 02ad 81000000 		.4byte	0x81
 1611 02b1 02       		.uleb128 0x2
 1612 02b2 91       		.byte	0x91
 1613 02b3 74       		.sleb128 -12
 1614 02b4 00       		.byte	0
 1615 02b5 11       		.uleb128 0x11
 1616 02b6 86030000 		.4byte	.LASF45
 1617 02ba 01       		.byte	0x1
 1618 02bb 9102     		.2byte	0x291
 1619 02bd 00000000 		.4byte	.LFB14
 1620 02c1 34000000 		.4byte	.LFE14-.LFB14
 1621 02c5 01       		.uleb128 0x1
 1622 02c6 9C       		.byte	0x9c
 1623 02c7 EA020000 		.4byte	0x2ea
 1624 02cb 0D       		.uleb128 0xd
 1625 02cc ED020000 		.4byte	.LASF34
 1626 02d0 01       		.byte	0x1
 1627 02d1 9102     		.2byte	0x291
 1628 02d3 81000000 		.4byte	0x81
 1629 02d7 02       		.uleb128 0x2
 1630 02d8 91       		.byte	0x91
 1631 02d9 74       		.sleb128 -12
 1632 02da 0D       		.uleb128 0xd
 1633 02db 0A030000 		.4byte	.LASF46
 1634 02df 01       		.byte	0x1
 1635 02e0 9102     		.2byte	0x291
 1636 02e2 8C000000 		.4byte	0x8c
 1637 02e6 02       		.uleb128 0x2
 1638 02e7 91       		.byte	0x91
 1639 02e8 72       		.sleb128 -14
 1640 02e9 00       		.byte	0
 1641 02ea 11       		.uleb128 0x11
 1642 02eb 7B020000 		.4byte	.LASF47
 1643 02ef 01       		.byte	0x1
 1644 02f0 B302     		.2byte	0x2b3
 1645 02f2 00000000 		.4byte	.LFB15
 1646 02f6 2C000000 		.4byte	.LFE15-.LFB15
 1647 02fa 01       		.uleb128 0x1
 1648 02fb 9C       		.byte	0x9c
 1649 02fc 1F030000 		.4byte	0x31f
 1650 0300 0D       		.uleb128 0xd
 1651 0301 ED020000 		.4byte	.LASF34
 1652 0305 01       		.byte	0x1
 1653 0306 B302     		.2byte	0x2b3
 1654 0308 81000000 		.4byte	0x81
 1655 030c 02       		.uleb128 0x2
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccJWZTE0.s 			page 45


 1656 030d 91       		.byte	0x91
 1657 030e 74       		.sleb128 -12
 1658 030f 0D       		.uleb128 0xd
 1659 0310 07000000 		.4byte	.LASF48
 1660 0314 01       		.byte	0x1
 1661 0315 B302     		.2byte	0x2b3
 1662 0317 97000000 		.4byte	0x97
 1663 031b 02       		.uleb128 0x2
 1664 031c 91       		.byte	0x91
 1665 031d 70       		.sleb128 -16
 1666 031e 00       		.byte	0
 1667 031f 0F       		.uleb128 0xf
 1668 0320 97020000 		.4byte	.LASF49
 1669 0324 01       		.byte	0x1
 1670 0325 D402     		.2byte	0x2d4
 1671 0327 8C000000 		.4byte	0x8c
 1672 032b 00000000 		.4byte	.LFB16
 1673 032f A0000000 		.4byte	.LFE16-.LFB16
 1674 0333 01       		.uleb128 0x1
 1675 0334 9C       		.byte	0x9c
 1676 0335 67030000 		.4byte	0x367
 1677 0339 0D       		.uleb128 0xd
 1678 033a ED020000 		.4byte	.LASF34
 1679 033e 01       		.byte	0x1
 1680 033f D402     		.2byte	0x2d4
 1681 0341 81000000 		.4byte	0x81
 1682 0345 02       		.uleb128 0x2
 1683 0346 91       		.byte	0x91
 1684 0347 6C       		.sleb128 -20
 1685 0348 0D       		.uleb128 0xd
 1686 0349 11030000 		.4byte	.LASF50
 1687 034d 01       		.byte	0x1
 1688 034e D402     		.2byte	0x2d4
 1689 0350 8C000000 		.4byte	0x8c
 1690 0354 02       		.uleb128 0x2
 1691 0355 91       		.byte	0x91
 1692 0356 6A       		.sleb128 -22
 1693 0357 0E       		.uleb128 0xe
 1694 0358 F0010000 		.4byte	.LASF51
 1695 035c 01       		.byte	0x1
 1696 035d D602     		.2byte	0x2d6
 1697 035f 8C000000 		.4byte	0x8c
 1698 0363 02       		.uleb128 0x2
 1699 0364 91       		.byte	0x91
 1700 0365 76       		.sleb128 -10
 1701 0366 00       		.byte	0
 1702 0367 0F       		.uleb128 0xf
 1703 0368 94000000 		.4byte	.LASF52
 1704 036c 01       		.byte	0x1
 1705 036d 0A03     		.2byte	0x30a
 1706 036f 97000000 		.4byte	0x97
 1707 0373 00000000 		.4byte	.LFB17
 1708 0377 90000000 		.4byte	.LFE17-.LFB17
 1709 037b 01       		.uleb128 0x1
 1710 037c 9C       		.byte	0x9c
 1711 037d AF030000 		.4byte	0x3af
 1712 0381 0D       		.uleb128 0xd
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccJWZTE0.s 			page 46


 1713 0382 ED020000 		.4byte	.LASF34
 1714 0386 01       		.byte	0x1
 1715 0387 0A03     		.2byte	0x30a
 1716 0389 81000000 		.4byte	0x81
 1717 038d 02       		.uleb128 0x2
 1718 038e 91       		.byte	0x91
 1719 038f 64       		.sleb128 -28
 1720 0390 0D       		.uleb128 0xd
 1721 0391 11030000 		.4byte	.LASF50
 1722 0395 01       		.byte	0x1
 1723 0396 0A03     		.2byte	0x30a
 1724 0398 8C000000 		.4byte	0x8c
 1725 039c 02       		.uleb128 0x2
 1726 039d 91       		.byte	0x91
 1727 039e 62       		.sleb128 -30
 1728 039f 0E       		.uleb128 0xe
 1729 03a0 07010000 		.4byte	.LASF53
 1730 03a4 01       		.byte	0x1
 1731 03a5 0C03     		.2byte	0x30c
 1732 03a7 BB000000 		.4byte	0xbb
 1733 03ab 02       		.uleb128 0x2
 1734 03ac 91       		.byte	0x91
 1735 03ad 68       		.sleb128 -24
 1736 03ae 00       		.byte	0
 1737 03af 0F       		.uleb128 0xf
 1738 03b0 16000000 		.4byte	.LASF54
 1739 03b4 01       		.byte	0x1
 1740 03b5 3703     		.2byte	0x337
 1741 03b7 A2000000 		.4byte	0xa2
 1742 03bb 00000000 		.4byte	.LFB18
 1743 03bf 80000000 		.4byte	.LFE18-.LFB18
 1744 03c3 01       		.uleb128 0x1
 1745 03c4 9C       		.byte	0x9c
 1746 03c5 F7030000 		.4byte	0x3f7
 1747 03c9 0D       		.uleb128 0xd
 1748 03ca ED020000 		.4byte	.LASF34
 1749 03ce 01       		.byte	0x1
 1750 03cf 3703     		.2byte	0x337
 1751 03d1 81000000 		.4byte	0x81
 1752 03d5 02       		.uleb128 0x2
 1753 03d6 91       		.byte	0x91
 1754 03d7 64       		.sleb128 -28
 1755 03d8 0D       		.uleb128 0xd
 1756 03d9 11030000 		.4byte	.LASF50
 1757 03dd 01       		.byte	0x1
 1758 03de 3703     		.2byte	0x337
 1759 03e0 8C000000 		.4byte	0x8c
 1760 03e4 02       		.uleb128 0x2
 1761 03e5 91       		.byte	0x91
 1762 03e6 62       		.sleb128 -30
 1763 03e7 0E       		.uleb128 0xe
 1764 03e8 2F010000 		.4byte	.LASF55
 1765 03ec 01       		.byte	0x1
 1766 03ed 3903     		.2byte	0x339
 1767 03ef A2000000 		.4byte	0xa2
 1768 03f3 02       		.uleb128 0x2
 1769 03f4 91       		.byte	0x91
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccJWZTE0.s 			page 47


 1770 03f5 6C       		.sleb128 -20
 1771 03f6 00       		.byte	0
 1772 03f7 12       		.uleb128 0x12
 1773 03f8 07040000 		.4byte	0x407
 1774 03fc 07040000 		.4byte	0x407
 1775 0400 13       		.uleb128 0x13
 1776 0401 E5000000 		.4byte	0xe5
 1777 0405 00       		.byte	0
 1778 0406 00       		.byte	0
 1779 0407 14       		.uleb128 0x14
 1780 0408 81000000 		.4byte	0x81
 1781 040c 09       		.uleb128 0x9
 1782 040d F7020000 		.4byte	.LASF56
 1783 0411 01       		.byte	0x1
 1784 0412 21       		.byte	0x21
 1785 0413 1D040000 		.4byte	0x41d
 1786 0417 05       		.uleb128 0x5
 1787 0418 03       		.byte	0x3
 1788 0419 00000000 		.4byte	ADC_channelsConfig
 1789 041d 14       		.uleb128 0x14
 1790 041e F7030000 		.4byte	0x3f7
 1791 0422 15       		.uleb128 0x15
 1792 0423 D5000000 		.4byte	.LASF57
 1793 0427 01       		.byte	0x1
 1794 0428 18       		.byte	0x18
 1795 0429 6B000000 		.4byte	0x6b
 1796 042d 05       		.uleb128 0x5
 1797 042e 03       		.byte	0x3
 1798 042f 00000000 		.4byte	ADC_initVar
 1799 0433 12       		.uleb128 0x12
 1800 0434 43040000 		.4byte	0x443
 1801 0438 43040000 		.4byte	0x443
 1802 043c 13       		.uleb128 0x13
 1803 043d E5000000 		.4byte	0xe5
 1804 0441 00       		.byte	0
 1805 0442 00       		.byte	0
 1806 0443 06       		.uleb128 0x6
 1807 0444 8C000000 		.4byte	0x8c
 1808 0448 15       		.uleb128 0x15
 1809 0449 C9020000 		.4byte	.LASF58
 1810 044d 01       		.byte	0x1
 1811 044e 19       		.byte	0x19
 1812 044f 59040000 		.4byte	0x459
 1813 0453 05       		.uleb128 0x5
 1814 0454 03       		.byte	0x3
 1815 0455 00000000 		.4byte	ADC_offset
 1816 0459 06       		.uleb128 0x6
 1817 045a 33040000 		.4byte	0x433
 1818 045e 12       		.uleb128 0x12
 1819 045f 6E040000 		.4byte	0x46e
 1820 0463 6E040000 		.4byte	0x46e
 1821 0467 13       		.uleb128 0x13
 1822 0468 E5000000 		.4byte	0xe5
 1823 046c 00       		.byte	0
 1824 046d 00       		.byte	0
 1825 046e 06       		.uleb128 0x6
 1826 046f 97000000 		.4byte	0x97
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccJWZTE0.s 			page 48


 1827 0473 15       		.uleb128 0x15
 1828 0474 A8000000 		.4byte	.LASF59
 1829 0478 01       		.byte	0x1
 1830 0479 1A       		.byte	0x1a
 1831 047a 84040000 		.4byte	0x484
 1832 047e 05       		.uleb128 0x5
 1833 047f 03       		.byte	0x3
 1834 0480 00000000 		.4byte	ADC_countsPer10Volt
 1835 0484 06       		.uleb128 0x6
 1836 0485 5E040000 		.4byte	0x45e
 1837 0489 00       		.byte	0
 1838              		.section	.debug_abbrev,"",%progbits
 1839              	.Ldebug_abbrev0:
 1840 0000 01       		.uleb128 0x1
 1841 0001 11       		.uleb128 0x11
 1842 0002 01       		.byte	0x1
 1843 0003 25       		.uleb128 0x25
 1844 0004 0E       		.uleb128 0xe
 1845 0005 13       		.uleb128 0x13
 1846 0006 0B       		.uleb128 0xb
 1847 0007 03       		.uleb128 0x3
 1848 0008 0E       		.uleb128 0xe
 1849 0009 1B       		.uleb128 0x1b
 1850 000a 0E       		.uleb128 0xe
 1851 000b 55       		.uleb128 0x55
 1852 000c 17       		.uleb128 0x17
 1853 000d 11       		.uleb128 0x11
 1854 000e 01       		.uleb128 0x1
 1855 000f 10       		.uleb128 0x10
 1856 0010 17       		.uleb128 0x17
 1857 0011 00       		.byte	0
 1858 0012 00       		.byte	0
 1859 0013 02       		.uleb128 0x2
 1860 0014 24       		.uleb128 0x24
 1861 0015 00       		.byte	0
 1862 0016 0B       		.uleb128 0xb
 1863 0017 0B       		.uleb128 0xb
 1864 0018 3E       		.uleb128 0x3e
 1865 0019 0B       		.uleb128 0xb
 1866 001a 03       		.uleb128 0x3
 1867 001b 0E       		.uleb128 0xe
 1868 001c 00       		.byte	0
 1869 001d 00       		.byte	0
 1870 001e 03       		.uleb128 0x3
 1871 001f 24       		.uleb128 0x24
 1872 0020 00       		.byte	0
 1873 0021 0B       		.uleb128 0xb
 1874 0022 0B       		.uleb128 0xb
 1875 0023 3E       		.uleb128 0x3e
 1876 0024 0B       		.uleb128 0xb
 1877 0025 03       		.uleb128 0x3
 1878 0026 08       		.uleb128 0x8
 1879 0027 00       		.byte	0
 1880 0028 00       		.byte	0
 1881 0029 04       		.uleb128 0x4
 1882 002a 16       		.uleb128 0x16
 1883 002b 00       		.byte	0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccJWZTE0.s 			page 49


 1884 002c 03       		.uleb128 0x3
 1885 002d 0E       		.uleb128 0xe
 1886 002e 3A       		.uleb128 0x3a
 1887 002f 0B       		.uleb128 0xb
 1888 0030 3B       		.uleb128 0x3b
 1889 0031 0B       		.uleb128 0xb
 1890 0032 49       		.uleb128 0x49
 1891 0033 13       		.uleb128 0x13
 1892 0034 00       		.byte	0
 1893 0035 00       		.byte	0
 1894 0036 05       		.uleb128 0x5
 1895 0037 16       		.uleb128 0x16
 1896 0038 00       		.byte	0
 1897 0039 03       		.uleb128 0x3
 1898 003a 0E       		.uleb128 0xe
 1899 003b 3A       		.uleb128 0x3a
 1900 003c 0B       		.uleb128 0xb
 1901 003d 3B       		.uleb128 0x3b
 1902 003e 05       		.uleb128 0x5
 1903 003f 49       		.uleb128 0x49
 1904 0040 13       		.uleb128 0x13
 1905 0041 00       		.byte	0
 1906 0042 00       		.byte	0
 1907 0043 06       		.uleb128 0x6
 1908 0044 35       		.uleb128 0x35
 1909 0045 00       		.byte	0
 1910 0046 49       		.uleb128 0x49
 1911 0047 13       		.uleb128 0x13
 1912 0048 00       		.byte	0
 1913 0049 00       		.byte	0
 1914 004a 07       		.uleb128 0x7
 1915 004b 2E       		.uleb128 0x2e
 1916 004c 00       		.byte	0
 1917 004d 3F       		.uleb128 0x3f
 1918 004e 19       		.uleb128 0x19
 1919 004f 03       		.uleb128 0x3
 1920 0050 0E       		.uleb128 0xe
 1921 0051 3A       		.uleb128 0x3a
 1922 0052 0B       		.uleb128 0xb
 1923 0053 3B       		.uleb128 0x3b
 1924 0054 0B       		.uleb128 0xb
 1925 0055 27       		.uleb128 0x27
 1926 0056 19       		.uleb128 0x19
 1927 0057 11       		.uleb128 0x11
 1928 0058 01       		.uleb128 0x1
 1929 0059 12       		.uleb128 0x12
 1930 005a 06       		.uleb128 0x6
 1931 005b 40       		.uleb128 0x40
 1932 005c 18       		.uleb128 0x18
 1933 005d 9642     		.uleb128 0x2116
 1934 005f 19       		.uleb128 0x19
 1935 0060 00       		.byte	0
 1936 0061 00       		.byte	0
 1937 0062 08       		.uleb128 0x8
 1938 0063 2E       		.uleb128 0x2e
 1939 0064 01       		.byte	0x1
 1940 0065 3F       		.uleb128 0x3f
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccJWZTE0.s 			page 50


 1941 0066 19       		.uleb128 0x19
 1942 0067 03       		.uleb128 0x3
 1943 0068 0E       		.uleb128 0xe
 1944 0069 3A       		.uleb128 0x3a
 1945 006a 0B       		.uleb128 0xb
 1946 006b 3B       		.uleb128 0x3b
 1947 006c 0B       		.uleb128 0xb
 1948 006d 27       		.uleb128 0x27
 1949 006e 19       		.uleb128 0x19
 1950 006f 11       		.uleb128 0x11
 1951 0070 01       		.uleb128 0x1
 1952 0071 12       		.uleb128 0x12
 1953 0072 06       		.uleb128 0x6
 1954 0073 40       		.uleb128 0x40
 1955 0074 18       		.uleb128 0x18
 1956 0075 9642     		.uleb128 0x2116
 1957 0077 19       		.uleb128 0x19
 1958 0078 01       		.uleb128 0x1
 1959 0079 13       		.uleb128 0x13
 1960 007a 00       		.byte	0
 1961 007b 00       		.byte	0
 1962 007c 09       		.uleb128 0x9
 1963 007d 34       		.uleb128 0x34
 1964 007e 00       		.byte	0
 1965 007f 03       		.uleb128 0x3
 1966 0080 0E       		.uleb128 0xe
 1967 0081 3A       		.uleb128 0x3a
 1968 0082 0B       		.uleb128 0xb
 1969 0083 3B       		.uleb128 0x3b
 1970 0084 0B       		.uleb128 0xb
 1971 0085 49       		.uleb128 0x49
 1972 0086 13       		.uleb128 0x13
 1973 0087 02       		.uleb128 0x2
 1974 0088 18       		.uleb128 0x18
 1975 0089 00       		.byte	0
 1976 008a 00       		.byte	0
 1977 008b 0A       		.uleb128 0xa
 1978 008c 2E       		.uleb128 0x2e
 1979 008d 00       		.byte	0
 1980 008e 3F       		.uleb128 0x3f
 1981 008f 19       		.uleb128 0x19
 1982 0090 03       		.uleb128 0x3
 1983 0091 0E       		.uleb128 0xe
 1984 0092 3A       		.uleb128 0x3a
 1985 0093 0B       		.uleb128 0xb
 1986 0094 3B       		.uleb128 0x3b
 1987 0095 05       		.uleb128 0x5
 1988 0096 27       		.uleb128 0x27
 1989 0097 19       		.uleb128 0x19
 1990 0098 11       		.uleb128 0x11
 1991 0099 01       		.uleb128 0x1
 1992 009a 12       		.uleb128 0x12
 1993 009b 06       		.uleb128 0x6
 1994 009c 40       		.uleb128 0x40
 1995 009d 18       		.uleb128 0x18
 1996 009e 9642     		.uleb128 0x2116
 1997 00a0 19       		.uleb128 0x19
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccJWZTE0.s 			page 51


 1998 00a1 00       		.byte	0
 1999 00a2 00       		.byte	0
 2000 00a3 0B       		.uleb128 0xb
 2001 00a4 2E       		.uleb128 0x2e
 2002 00a5 00       		.byte	0
 2003 00a6 3F       		.uleb128 0x3f
 2004 00a7 19       		.uleb128 0x19
 2005 00a8 03       		.uleb128 0x3
 2006 00a9 0E       		.uleb128 0xe
 2007 00aa 3A       		.uleb128 0x3a
 2008 00ab 0B       		.uleb128 0xb
 2009 00ac 3B       		.uleb128 0x3b
 2010 00ad 05       		.uleb128 0x5
 2011 00ae 27       		.uleb128 0x27
 2012 00af 19       		.uleb128 0x19
 2013 00b0 11       		.uleb128 0x11
 2014 00b1 01       		.uleb128 0x1
 2015 00b2 12       		.uleb128 0x12
 2016 00b3 06       		.uleb128 0x6
 2017 00b4 40       		.uleb128 0x40
 2018 00b5 18       		.uleb128 0x18
 2019 00b6 9742     		.uleb128 0x2117
 2020 00b8 19       		.uleb128 0x19
 2021 00b9 00       		.byte	0
 2022 00ba 00       		.byte	0
 2023 00bb 0C       		.uleb128 0xc
 2024 00bc 2E       		.uleb128 0x2e
 2025 00bd 01       		.byte	0x1
 2026 00be 3F       		.uleb128 0x3f
 2027 00bf 19       		.uleb128 0x19
 2028 00c0 03       		.uleb128 0x3
 2029 00c1 0E       		.uleb128 0xe
 2030 00c2 3A       		.uleb128 0x3a
 2031 00c3 0B       		.uleb128 0xb
 2032 00c4 3B       		.uleb128 0x3b
 2033 00c5 05       		.uleb128 0x5
 2034 00c6 27       		.uleb128 0x27
 2035 00c7 19       		.uleb128 0x19
 2036 00c8 49       		.uleb128 0x49
 2037 00c9 13       		.uleb128 0x13
 2038 00ca 11       		.uleb128 0x11
 2039 00cb 01       		.uleb128 0x1
 2040 00cc 12       		.uleb128 0x12
 2041 00cd 06       		.uleb128 0x6
 2042 00ce 40       		.uleb128 0x40
 2043 00cf 18       		.uleb128 0x18
 2044 00d0 9742     		.uleb128 0x2117
 2045 00d2 19       		.uleb128 0x19
 2046 00d3 01       		.uleb128 0x1
 2047 00d4 13       		.uleb128 0x13
 2048 00d5 00       		.byte	0
 2049 00d6 00       		.byte	0
 2050 00d7 0D       		.uleb128 0xd
 2051 00d8 05       		.uleb128 0x5
 2052 00d9 00       		.byte	0
 2053 00da 03       		.uleb128 0x3
 2054 00db 0E       		.uleb128 0xe
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccJWZTE0.s 			page 52


 2055 00dc 3A       		.uleb128 0x3a
 2056 00dd 0B       		.uleb128 0xb
 2057 00de 3B       		.uleb128 0x3b
 2058 00df 05       		.uleb128 0x5
 2059 00e0 49       		.uleb128 0x49
 2060 00e1 13       		.uleb128 0x13
 2061 00e2 02       		.uleb128 0x2
 2062 00e3 18       		.uleb128 0x18
 2063 00e4 00       		.byte	0
 2064 00e5 00       		.byte	0
 2065 00e6 0E       		.uleb128 0xe
 2066 00e7 34       		.uleb128 0x34
 2067 00e8 00       		.byte	0
 2068 00e9 03       		.uleb128 0x3
 2069 00ea 0E       		.uleb128 0xe
 2070 00eb 3A       		.uleb128 0x3a
 2071 00ec 0B       		.uleb128 0xb
 2072 00ed 3B       		.uleb128 0x3b
 2073 00ee 05       		.uleb128 0x5
 2074 00ef 49       		.uleb128 0x49
 2075 00f0 13       		.uleb128 0x13
 2076 00f1 02       		.uleb128 0x2
 2077 00f2 18       		.uleb128 0x18
 2078 00f3 00       		.byte	0
 2079 00f4 00       		.byte	0
 2080 00f5 0F       		.uleb128 0xf
 2081 00f6 2E       		.uleb128 0x2e
 2082 00f7 01       		.byte	0x1
 2083 00f8 3F       		.uleb128 0x3f
 2084 00f9 19       		.uleb128 0x19
 2085 00fa 03       		.uleb128 0x3
 2086 00fb 0E       		.uleb128 0xe
 2087 00fc 3A       		.uleb128 0x3a
 2088 00fd 0B       		.uleb128 0xb
 2089 00fe 3B       		.uleb128 0x3b
 2090 00ff 05       		.uleb128 0x5
 2091 0100 27       		.uleb128 0x27
 2092 0101 19       		.uleb128 0x19
 2093 0102 49       		.uleb128 0x49
 2094 0103 13       		.uleb128 0x13
 2095 0104 11       		.uleb128 0x11
 2096 0105 01       		.uleb128 0x1
 2097 0106 12       		.uleb128 0x12
 2098 0107 06       		.uleb128 0x6
 2099 0108 40       		.uleb128 0x40
 2100 0109 18       		.uleb128 0x18
 2101 010a 9642     		.uleb128 0x2116
 2102 010c 19       		.uleb128 0x19
 2103 010d 01       		.uleb128 0x1
 2104 010e 13       		.uleb128 0x13
 2105 010f 00       		.byte	0
 2106 0110 00       		.byte	0
 2107 0111 10       		.uleb128 0x10
 2108 0112 2E       		.uleb128 0x2e
 2109 0113 01       		.byte	0x1
 2110 0114 3F       		.uleb128 0x3f
 2111 0115 19       		.uleb128 0x19
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccJWZTE0.s 			page 53


 2112 0116 03       		.uleb128 0x3
 2113 0117 0E       		.uleb128 0xe
 2114 0118 3A       		.uleb128 0x3a
 2115 0119 0B       		.uleb128 0xb
 2116 011a 3B       		.uleb128 0x3b
 2117 011b 05       		.uleb128 0x5
 2118 011c 27       		.uleb128 0x27
 2119 011d 19       		.uleb128 0x19
 2120 011e 11       		.uleb128 0x11
 2121 011f 01       		.uleb128 0x1
 2122 0120 12       		.uleb128 0x12
 2123 0121 06       		.uleb128 0x6
 2124 0122 40       		.uleb128 0x40
 2125 0123 18       		.uleb128 0x18
 2126 0124 9742     		.uleb128 0x2117
 2127 0126 19       		.uleb128 0x19
 2128 0127 01       		.uleb128 0x1
 2129 0128 13       		.uleb128 0x13
 2130 0129 00       		.byte	0
 2131 012a 00       		.byte	0
 2132 012b 11       		.uleb128 0x11
 2133 012c 2E       		.uleb128 0x2e
 2134 012d 01       		.byte	0x1
 2135 012e 3F       		.uleb128 0x3f
 2136 012f 19       		.uleb128 0x19
 2137 0130 03       		.uleb128 0x3
 2138 0131 0E       		.uleb128 0xe
 2139 0132 3A       		.uleb128 0x3a
 2140 0133 0B       		.uleb128 0xb
 2141 0134 3B       		.uleb128 0x3b
 2142 0135 05       		.uleb128 0x5
 2143 0136 27       		.uleb128 0x27
 2144 0137 19       		.uleb128 0x19
 2145 0138 11       		.uleb128 0x11
 2146 0139 01       		.uleb128 0x1
 2147 013a 12       		.uleb128 0x12
 2148 013b 06       		.uleb128 0x6
 2149 013c 40       		.uleb128 0x40
 2150 013d 18       		.uleb128 0x18
 2151 013e 9642     		.uleb128 0x2116
 2152 0140 19       		.uleb128 0x19
 2153 0141 01       		.uleb128 0x1
 2154 0142 13       		.uleb128 0x13
 2155 0143 00       		.byte	0
 2156 0144 00       		.byte	0
 2157 0145 12       		.uleb128 0x12
 2158 0146 01       		.uleb128 0x1
 2159 0147 01       		.byte	0x1
 2160 0148 49       		.uleb128 0x49
 2161 0149 13       		.uleb128 0x13
 2162 014a 01       		.uleb128 0x1
 2163 014b 13       		.uleb128 0x13
 2164 014c 00       		.byte	0
 2165 014d 00       		.byte	0
 2166 014e 13       		.uleb128 0x13
 2167 014f 21       		.uleb128 0x21
 2168 0150 00       		.byte	0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccJWZTE0.s 			page 54


 2169 0151 49       		.uleb128 0x49
 2170 0152 13       		.uleb128 0x13
 2171 0153 2F       		.uleb128 0x2f
 2172 0154 0B       		.uleb128 0xb
 2173 0155 00       		.byte	0
 2174 0156 00       		.byte	0
 2175 0157 14       		.uleb128 0x14
 2176 0158 26       		.uleb128 0x26
 2177 0159 00       		.byte	0
 2178 015a 49       		.uleb128 0x49
 2179 015b 13       		.uleb128 0x13
 2180 015c 00       		.byte	0
 2181 015d 00       		.byte	0
 2182 015e 15       		.uleb128 0x15
 2183 015f 34       		.uleb128 0x34
 2184 0160 00       		.byte	0
 2185 0161 03       		.uleb128 0x3
 2186 0162 0E       		.uleb128 0xe
 2187 0163 3A       		.uleb128 0x3a
 2188 0164 0B       		.uleb128 0xb
 2189 0165 3B       		.uleb128 0x3b
 2190 0166 0B       		.uleb128 0xb
 2191 0167 49       		.uleb128 0x49
 2192 0168 13       		.uleb128 0x13
 2193 0169 3F       		.uleb128 0x3f
 2194 016a 19       		.uleb128 0x19
 2195 016b 02       		.uleb128 0x2
 2196 016c 18       		.uleb128 0x18
 2197 016d 00       		.byte	0
 2198 016e 00       		.byte	0
 2199 016f 00       		.byte	0
 2200              		.section	.debug_aranges,"",%progbits
 2201 0000 A4000000 		.4byte	0xa4
 2202 0004 0200     		.2byte	0x2
 2203 0006 00000000 		.4byte	.Ldebug_info0
 2204 000a 04       		.byte	0x4
 2205 000b 00       		.byte	0
 2206 000c 0000     		.2byte	0
 2207 000e 0000     		.2byte	0
 2208 0010 00000000 		.4byte	.LFB1
 2209 0014 24000000 		.4byte	.LFE1-.LFB1
 2210 0018 00000000 		.4byte	.LFB2
 2211 001c BC010000 		.4byte	.LFE2-.LFB2
 2212 0020 00000000 		.4byte	.LFB3
 2213 0024 38000000 		.4byte	.LFE3-.LFB3
 2214 0028 00000000 		.4byte	.LFB4
 2215 002c 1C000000 		.4byte	.LFE4-.LFB4
 2216 0030 00000000 		.4byte	.LFB5
 2217 0034 1C000000 		.4byte	.LFE5-.LFB5
 2218 0038 00000000 		.4byte	.LFB6
 2219 003c 20000000 		.4byte	.LFE6-.LFB6
 2220 0040 00000000 		.4byte	.LFB7
 2221 0044 48000000 		.4byte	.LFE7-.LFB7
 2222 0048 00000000 		.4byte	.LFB8
 2223 004c 44000000 		.4byte	.LFE8-.LFB8
 2224 0050 00000000 		.4byte	.LFB9
 2225 0054 20000000 		.4byte	.LFE9-.LFB9
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccJWZTE0.s 			page 55


 2226 0058 00000000 		.4byte	.LFB10
 2227 005c 30000000 		.4byte	.LFE10-.LFB10
 2228 0060 00000000 		.4byte	.LFB11
 2229 0064 30000000 		.4byte	.LFE11-.LFB11
 2230 0068 00000000 		.4byte	.LFB12
 2231 006c 20000000 		.4byte	.LFE12-.LFB12
 2232 0070 00000000 		.4byte	.LFB13
 2233 0074 20000000 		.4byte	.LFE13-.LFB13
 2234 0078 00000000 		.4byte	.LFB14
 2235 007c 34000000 		.4byte	.LFE14-.LFB14
 2236 0080 00000000 		.4byte	.LFB15
 2237 0084 2C000000 		.4byte	.LFE15-.LFB15
 2238 0088 00000000 		.4byte	.LFB16
 2239 008c A0000000 		.4byte	.LFE16-.LFB16
 2240 0090 00000000 		.4byte	.LFB17
 2241 0094 90000000 		.4byte	.LFE17-.LFB17
 2242 0098 00000000 		.4byte	.LFB18
 2243 009c 80000000 		.4byte	.LFE18-.LFB18
 2244 00a0 00000000 		.4byte	0
 2245 00a4 00000000 		.4byte	0
 2246              		.section	.debug_ranges,"",%progbits
 2247              	.Ldebug_ranges0:
 2248 0000 00000000 		.4byte	.LFB1
 2249 0004 24000000 		.4byte	.LFE1
 2250 0008 00000000 		.4byte	.LFB2
 2251 000c BC010000 		.4byte	.LFE2
 2252 0010 00000000 		.4byte	.LFB3
 2253 0014 38000000 		.4byte	.LFE3
 2254 0018 00000000 		.4byte	.LFB4
 2255 001c 1C000000 		.4byte	.LFE4
 2256 0020 00000000 		.4byte	.LFB5
 2257 0024 1C000000 		.4byte	.LFE5
 2258 0028 00000000 		.4byte	.LFB6
 2259 002c 20000000 		.4byte	.LFE6
 2260 0030 00000000 		.4byte	.LFB7
 2261 0034 48000000 		.4byte	.LFE7
 2262 0038 00000000 		.4byte	.LFB8
 2263 003c 44000000 		.4byte	.LFE8
 2264 0040 00000000 		.4byte	.LFB9
 2265 0044 20000000 		.4byte	.LFE9
 2266 0048 00000000 		.4byte	.LFB10
 2267 004c 30000000 		.4byte	.LFE10
 2268 0050 00000000 		.4byte	.LFB11
 2269 0054 30000000 		.4byte	.LFE11
 2270 0058 00000000 		.4byte	.LFB12
 2271 005c 20000000 		.4byte	.LFE12
 2272 0060 00000000 		.4byte	.LFB13
 2273 0064 20000000 		.4byte	.LFE13
 2274 0068 00000000 		.4byte	.LFB14
 2275 006c 34000000 		.4byte	.LFE14
 2276 0070 00000000 		.4byte	.LFB15
 2277 0074 2C000000 		.4byte	.LFE15
 2278 0078 00000000 		.4byte	.LFB16
 2279 007c A0000000 		.4byte	.LFE16
 2280 0080 00000000 		.4byte	.LFB17
 2281 0084 90000000 		.4byte	.LFE17
 2282 0088 00000000 		.4byte	.LFB18
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccJWZTE0.s 			page 56


 2283 008c 80000000 		.4byte	.LFE18
 2284 0090 00000000 		.4byte	0
 2285 0094 00000000 		.4byte	0
 2286              		.section	.debug_line,"",%progbits
 2287              	.Ldebug_line0:
 2288 0000 8F020000 		.section	.debug_str,"MS",%progbits,1
 2288      02004000 
 2288      00000201 
 2288      FB0E0D00 
 2288      01010101 
 2289              	.LASF10:
 2290 0000 75696E74 		.ascii	"uint16\000"
 2290      313600
 2291              	.LASF48:
 2292 0007 61646347 		.ascii	"adcGain\000"
 2292      61696E00 
 2293              	.LASF24:
 2294 000f 636F756E 		.ascii	"counts\000"
 2294      747300
 2295              	.LASF54:
 2296 0016 4144435F 		.ascii	"ADC_CountsTo_Volts\000"
 2296      436F756E 
 2296      7473546F 
 2296      5F566F6C 
 2296      747300
 2297              	.LASF36:
 2298 0029 4144435F 		.ascii	"ADC_Init\000"
 2298      496E6974 
 2298      00
 2299              	.LASF7:
 2300 0032 6C6F6E67 		.ascii	"long long unsigned int\000"
 2300      206C6F6E 
 2300      6720756E 
 2300      7369676E 
 2300      65642069 
 2301              	.LASF28:
 2302 0049 4144435F 		.ascii	"ADC_StartConvert\000"
 2302      53746172 
 2302      74436F6E 
 2302      76657274 
 2302      00
 2303              	.LASF6:
 2304 005a 6C6F6E67 		.ascii	"long long int\000"
 2304      206C6F6E 
 2304      6720696E 
 2304      7400
 2305              	.LASF0:
 2306 0068 7369676E 		.ascii	"signed char\000"
 2306      65642063 
 2306      68617200 
 2307              	.LASF30:
 2308 0074 73746174 		.ascii	"status\000"
 2308      757300
 2309              	.LASF13:
 2310 007b 696E7433 		.ascii	"int32\000"
 2310      3200
 2311              	.LASF25:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccJWZTE0.s 			page 57


 2312 0081 4144435F 		.ascii	"ADC_Start\000"
 2312      53746172 
 2312      7400
 2313              	.LASF4:
 2314 008b 6C6F6E67 		.ascii	"long int\000"
 2314      20696E74 
 2314      00
 2315              	.LASF52:
 2316 0094 4144435F 		.ascii	"ADC_CountsTo_uVolts\000"
 2316      436F756E 
 2316      7473546F 
 2316      5F75566F 
 2316      6C747300 
 2317              	.LASF59:
 2318 00a8 4144435F 		.ascii	"ADC_countsPer10Volt\000"
 2318      636F756E 
 2318      74735065 
 2318      72313056 
 2318      6F6C7400 
 2319              	.LASF9:
 2320 00bc 75696E74 		.ascii	"uint8\000"
 2320      3800
 2321              	.LASF16:
 2322 00c2 646F7562 		.ascii	"double\000"
 2322      6C6500
 2323              	.LASF11:
 2324 00c9 75696E74 		.ascii	"uint32\000"
 2324      333200
 2325              	.LASF38:
 2326 00d0 6D61736B 		.ascii	"mask\000"
 2326      00
 2327              	.LASF57:
 2328 00d5 4144435F 		.ascii	"ADC_initVar\000"
 2328      696E6974 
 2328      56617200 
 2329              	.LASF33:
 2330 00e1 7265744D 		.ascii	"retMode\000"
 2330      6F646500 
 2331              	.LASF43:
 2332 00e9 4144435F 		.ascii	"ADC_SetLimitMask\000"
 2332      5365744C 
 2332      696D6974 
 2332      4D61736B 
 2332      00
 2333              	.LASF8:
 2334 00fa 756E7369 		.ascii	"unsigned int\000"
 2334      676E6564 
 2334      20696E74 
 2334      00
 2335              	.LASF53:
 2336 0107 75566F6C 		.ascii	"uVolts\000"
 2336      747300
 2337              	.LASF5:
 2338 010e 6C6F6E67 		.ascii	"long unsigned int\000"
 2338      20756E73 
 2338      69676E65 
 2338      6420696E 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccJWZTE0.s 			page 58


 2338      7400
 2339              	.LASF44:
 2340 0120 4144435F 		.ascii	"ADC_SetSatMask\000"
 2340      53657453 
 2340      61744D61 
 2340      736B00
 2341              	.LASF55:
 2342 012f 766F6C74 		.ascii	"volts\000"
 2342      7300
 2343              	.LASF23:
 2344 0135 746D7052 		.ascii	"tmpRegVal\000"
 2344      65675661 
 2344      6C00
 2345              	.LASF3:
 2346 013f 73686F72 		.ascii	"short unsigned int\000"
 2346      7420756E 
 2346      7369676E 
 2346      65642069 
 2346      6E7400
 2347              	.LASF29:
 2348 0152 4144435F 		.ascii	"ADC_StopConvert\000"
 2348      53746F70 
 2348      436F6E76 
 2348      65727400 
 2349              	.LASF60:
 2350 0162 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2350      43313120 
 2350      352E342E 
 2350      31203230 
 2350      31363036 
 2351 0195 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 2351      20726576 
 2351      6973696F 
 2351      6E203233 
 2351      37373135 
 2352 01c8 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2352      66756E63 
 2352      74696F6E 
 2352      2D736563 
 2352      74696F6E 
 2353              	.LASF51:
 2354 01f0 6D566F6C 		.ascii	"mVolts\000"
 2354      747300
 2355              	.LASF19:
 2356 01f7 72656733 		.ascii	"reg32\000"
 2356      3200
 2357              	.LASF14:
 2358 01fd 666C6F61 		.ascii	"float32\000"
 2358      74333200 
 2359              	.LASF21:
 2360 0205 73697A65 		.ascii	"sizetype\000"
 2360      74797065 
 2360      00
 2361              	.LASF40:
 2362 020e 6C6F774C 		.ascii	"lowLimit\000"
 2362      696D6974 
 2362      00
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccJWZTE0.s 			page 59


 2363              	.LASF20:
 2364 0217 6C6F6E67 		.ascii	"long double\000"
 2364      20646F75 
 2364      626C6500 
 2365              	.LASF41:
 2366 0223 4144435F 		.ascii	"ADC_SetHighLimit\000"
 2366      53657448 
 2366      6967684C 
 2366      696D6974 
 2366      00
 2367              	.LASF31:
 2368 0234 4144435F 		.ascii	"ADC_IsEndConversion\000"
 2368      4973456E 
 2368      64436F6E 
 2368      76657273 
 2368      696F6E00 
 2369              	.LASF17:
 2370 0248 696E7436 		.ascii	"int64\000"
 2370      3400
 2371              	.LASF37:
 2372 024e 4144435F 		.ascii	"ADC_SetChanMask\000"
 2372      53657443 
 2372      68616E4D 
 2372      61736B00 
 2373              	.LASF61:
 2374 025e 47656E65 		.ascii	"Generated_Source\\PSoC4\\ADC.c\000"
 2374      72617465 
 2374      645F536F 
 2374      75726365 
 2374      5C50536F 
 2375              	.LASF47:
 2376 027b 4144435F 		.ascii	"ADC_SetGain\000"
 2376      53657447 
 2376      61696E00 
 2377              	.LASF15:
 2378 0287 666C6F61 		.ascii	"float\000"
 2378      7400
 2379              	.LASF42:
 2380 028d 68696768 		.ascii	"highLimit\000"
 2380      4C696D69 
 2380      7400
 2381              	.LASF49:
 2382 0297 4144435F 		.ascii	"ADC_CountsTo_mVolts\000"
 2382      436F756E 
 2382      7473546F 
 2382      5F6D566F 
 2382      6C747300 
 2383              	.LASF39:
 2384 02ab 4144435F 		.ascii	"ADC_SetLowLimit\000"
 2384      5365744C 
 2384      6F774C69 
 2384      6D697400 
 2385              	.LASF1:
 2386 02bb 756E7369 		.ascii	"unsigned char\000"
 2386      676E6564 
 2386      20636861 
 2386      7200
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccJWZTE0.s 			page 60


 2387              	.LASF58:
 2388 02c9 4144435F 		.ascii	"ADC_offset\000"
 2388      6F666673 
 2388      657400
 2389              	.LASF2:
 2390 02d4 73686F72 		.ascii	"short int\000"
 2390      7420696E 
 2390      7400
 2391              	.LASF27:
 2392 02de 4144435F 		.ascii	"ADC_Stop\000"
 2392      53746F70 
 2392      00
 2393              	.LASF22:
 2394 02e7 63684E75 		.ascii	"chNum\000"
 2394      6D00
 2395              	.LASF34:
 2396 02ed 6368616E 		.ascii	"chan\000"
 2396      00
 2397              	.LASF18:
 2398 02f2 63686172 		.ascii	"char\000"
 2398      00
 2399              	.LASF56:
 2400 02f7 4144435F 		.ascii	"ADC_channelsConfig\000"
 2400      6368616E 
 2400      6E656C73 
 2400      436F6E66 
 2400      696700
 2401              	.LASF46:
 2402 030a 6F666673 		.ascii	"offset\000"
 2402      657400
 2403              	.LASF50:
 2404 0311 61646343 		.ascii	"adcCounts\000"
 2404      6F756E74 
 2404      7300
 2405              	.LASF62:
 2406 031b 443A5C43 		.ascii	"D:\\CYTEST\\Micrium_CY8CKIT-044_OS2\\Micrium\\Examp"
 2406      59544553 
 2406      545C4D69 
 2406      63726975 
 2406      6D5F4359 
 2407 034a 6C65735C 		.ascii	"les\\Cypress\\CY8CKIT-044\\OS2\\PSoC\\OS2.cydsn\000"
 2407      43797072 
 2407      6573735C 
 2407      43593843 
 2407      4B49542D 
 2408              	.LASF26:
 2409 0375 4144435F 		.ascii	"ADC_Enable\000"
 2409      456E6162 
 2409      6C6500
 2410              	.LASF12:
 2411 0380 696E7431 		.ascii	"int16\000"
 2411      3600
 2412              	.LASF45:
 2413 0386 4144435F 		.ascii	"ADC_SetOffset\000"
 2413      5365744F 
 2413      66667365 
 2413      7400
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccJWZTE0.s 			page 61


 2414              	.LASF35:
 2415 0394 72657375 		.ascii	"result\000"
 2415      6C7400
 2416              	.LASF32:
 2417 039b 4144435F 		.ascii	"ADC_GetResult16\000"
 2417      47657452 
 2417      6573756C 
 2417      74313600 
 2418              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
